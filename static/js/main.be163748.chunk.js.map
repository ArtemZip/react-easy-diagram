{"version":3,"sources":["../../src/components/BackgroundDefault.tsx","../../src/hooks/useNotifyRef.ts","../../src/components/LinkWrapper.tsx","../../src/components/LinksLayer.tsx","../../src/hooks/userInteractions/useDragHandlers.ts","../../src/hooks/userInteractions/useUserAbilityToSelectSwitcher.ts","../../src/components/NodeWrapper.tsx","../../src/hooks/userInteractions/useNodeUserInteraction.ts","../../src/hooks/userInteractions/common.ts","../../src/components/NodesLayer.tsx","../../src/utils.ts","../../src/hooks/userInteractions/useDiagramUserInteraction.ts","../../src/hooks/userInteractions/usePinchHandlers.ts","../../src/hooks/userInteractions/useWheelHandler.ts","../../src/components/MiniControlWrapper.tsx","../../src/components/DiagramInner.tsx","../../../node_modules/style-inject/dist/style-inject.es.js","../../src/states/callbacks.ts","../../src/states/diagramApi.ts","../../src/linkConstructors/curved.ts","../../src/states/htmlElementRefState.ts","../../src/states/diagramState.ts","../../src/states/LinkPointEndpointState.ts","../../src/states/linkCreationState.ts","../../src/states/linkPortEndpointState.ts","../../src/components/LinkDefault.tsx","../../src/states/visualComponents.ts","../../src/states/linksSettings.ts","../../src/states/linkState.ts","../../src/states/linksStore.ts","../../src/components/NodeDefault.tsx","../../src/states/nodesSettings.ts","../../src/states/portState.ts","../../src/states/nodeState.ts","../../src/states/nodesStore.ts","../../src/components/PortWrapper.tsx","../../src/hooks/userInteractions/usePortUserInteraction.ts","../../src/components/PortsContainerDefault.tsx","../../src/states/portsSettings.ts","../../src/states/visualComponentState.ts","../../src/states/visualComponentWithDefault.ts","../../src/states/diagramSettings.ts","../../src/states/rootStore.ts","../../src/components/Diagram.tsx","../../src/hooks/useRootStore.ts","../../src/components/BackgroundWrapper.tsx","../../src/components/MiniControlDefault.tsx","ControlPanel.tsx","App.tsx","../../src/hooks/useDiagram.tsx","index.tsx"],"names":["diagramOffset","digramZoom","settings","defaultSettings","className","style","backgroundColor","color","backgroundImage","imageCreator","backgroundPosition","width","height","init","forceUpdate","ref","value","facade","i","LinkWrapper","observer","link","draggableRef","componentDefinition","component","entity","LinksLayer","linksStore","Object","values","links","map","key","id","linkCreation","useDragHandlers","activeRef","state","parentScaleGetter","cancel","onDrag","pinching","delta","current","parentScale","setOffset","offset","onDragStart","event","onDragEnd","DISABLED_USER_SELECT_CSS_CLASS","useUserAbilityToSelectSwitcher","active","elementToSwitchUserSelectOn","classList","contains","add","remove","NodeWrapper","node","userInteractionElemRef","nodeState","enable","diagramStore","dragHandlers","zoom","e","targets","composedPath","length","target","eventPathContainsClass","domTarget","eventOptions","passive","enabled","ownerDocument","body","left","top","NodesLayer","nodesStore","nodes","generateTransform","translate","scale","translatePart","roundPoint","point","Math","round","addPoints","a","b","subtractPoints","multiplyPoint","m","clampValue","interval","min","max","diagramState","cancelGesture","diagramInnerRef","undefined","pinchHandlers","elemToAttachToRef","pinchState","distance","origin","onPinch","originDiff","rect","getBoundingClientRect","originPositionOnElement","tranlsateAndZoomInto","onPinchStart","onPinchEnd","usePinchHandlers","wheelHandler","onWheel","direction","yDirection","clientX","clientY","mousePositionOnElement","factor","useWheelHandler","transform","transformString","MiniControlWrapper","diagramSettings","diagramApi","miniControlComponentState","InnerDiagram","props","rootStore","diagramStyles","BackgroundWrapper","displayName","css","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","setCallbacks","callbacks","validateLinkEndpoints","this","addNode","reinitState","importState","reinitSettings","fromJson","diagram","nodesSettings","linksSettings","portsSettings","ports","zoomIn","zoomIntoCenter","zoomOut","recalculatePortPosition","curvedLinkPathConstructor","source","sourcePortType","targetPortType","sourceStr","targetStr","directionFactor","tweakDirectionFactorBasedOnDistance","sqrt","pow","getControl","endpoint","portType","portTypeToLinkDirectionMapping","defualtSettings","right","bottom","createCurvedLinkPathConstructor","initValue","offsetRelativeToParent","parent","iterElement","acumLeft","acumTop","offsetLeft","offsetTop","parentElement","currentInternal","clientWidth","clientHeight","newOffset","setZoom","newZoom","scaleInterval","setTransformation","zoomInto","pointToZoomInto","zoomMultiplicator","pointDisplacementAfterZoom","translateBy","diagramRealSize","realSize","pos","pointToTranslateBy","targetPortCandidate","startLinking","portState","eventOffsetRelativeToTarget","targetPoint","resetProps","nodeId","offsetRelativeToNode","sourcePoint","setTargetPortCandidate","canAddLink","portId","result","validForConnection","resetTargetPortCandidate","stopLinking","addLink","port","getComponent","linkCreationComponentType","createLinkPath","obj","getNodeOrThrowException","getPortOrThrowException","linkPortEndpointsEquals","linkDefaultSettings","path","d","svgPath","stroke","strokeWidth","fill","cx","cy","r","cirleRadius","createLinkDefault","finaleSettings","defaultComponents","defaultType","componentDefaultType","defaultNodeType","components","createComponentCollection","finalComponentType","componentsObjects","collection","entries","forEach","pathConstructor","defaultPathConstructor","visualComponents","createEndpointState","componentType","segments","extra","newLinks","_links","_nodesLinksCollection","getNodeLinks","removeNodeLinks","l","removeLink","removePortLinks","endpointToRemove","canAdd","newLink","v4","_addLinkToNodeLinksCollection","linkId","linkToRemove","_removeLinkFromNodeLinksCollection","error","isSourceValid","isEndpointValid","isTargetValid","areEndpointsConnected","getEndpointPort","ex","getLinkForEndpointsIfExists","find","push","filter","generatePortsContainer","portsType","position","portsToShow","portsContainer","portsContainerVisualComponents","dragging","hovered","label","hover","stopHover","drag","stopDrag","newState","_ports","addPort","getPort","newPort","removePort","_nodes","newNodes","newNode","removeNode","getNode","PortWrapper","releasePointerCapture","pointerId","offsetX","offsetY","onPointerEnter","onPointerLeave","finalSettings","portsContainerDefaultSettings","gapBetweenPorts","createPortsContainerDefault","horizontal","vertical","portsContainerComponents","newComponent","defaultComponent","_innerComponent","_defaultComponent","defaultScaleInterval","backgroundComponentState","createDefaultBackground","createDefaultMiniControl","backgroundComponent","miniControlComponent","DiagramApi","Callbacks","RootStoreContext","createContext","store","RootStore","initState","apiRef","Provider","diagramZoom","getOffsetStyles","containerStyle","buttons","size","buttonsSize","onClick","children","parentOffset","useStyles","makeStyles","form","display","flexDirection","margin","visibilityBtn","borderRadius","minWidth","padding","header","marginBottom","alignItems","ControlPanel","classes","useState","row","setRow","col","setCol","visible","setVisible","Box","clone","Card","Button","variant","aria-label","Tune","Typography","noValidate","autoComplete","onSubmit","preventDefault","colNum","rowNum","getNodeId","j","generateLargeDiagram","TextField","onChange","parseInt","controlPanel","App","Diagram","useDiagram","default","attention","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.be163748.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IComponentDefinition } from '..';\r\nimport { IBackgroundComponentProps } from '../states/diagramSettings';\r\n\r\nconst BackgroundDefault: React.FC<\r\n  IBackgroundComponentProps<IBackgroundDefaultSettings>\r\n> = ({ diagramOffset, diagramZoom: digramZoom, settings }) => {\r\n  settings = settings ?? defaultSettings;\r\n\r\n  return (\r\n    <div\r\n      className='react_fast_diagram_Background_Default'\r\n      style={{\r\n        backgroundColor: settings.color,\r\n        backgroundImage: settings.imageCreator(\r\n          100 * digramZoom,\r\n          100 * digramZoom\r\n        ),\r\n        backgroundPosition: `${diagramOffset[0]}px ${diagramOffset[1]}px`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const createGridImage: ImageCreator = (width, height) => {\r\n  return `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='${width}' height='${height}' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.3'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`;\r\n};\r\n\r\nexport const createImageWithCrosses: ImageCreator = (width, height) => {\r\n  return `url(\"data:image/svg+xml,%3Csvg width='${width * 0.3}' height='${\r\n    height * 0.3\r\n  }' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%2395bcbd' fill-opacity='0.3'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`;\r\n};\r\n\r\nconst defaultSettings: IBackgroundDefaultSettings = {\r\n  imageCreator: createGridImage,\r\n  color: '#ececec',\r\n};\r\n\r\nexport const createDefaultBackground = (\r\n  settings?: Partial<IBackgroundDefaultSettings>\r\n): IComponentDefinition<\r\n  IBackgroundComponentProps,\r\n  IBackgroundDefaultSettings\r\n> => {\r\n  const finalSettings = {\r\n    ...defaultSettings,\r\n    ...(settings ? settings : {}),\r\n  };\r\n\r\n  return {\r\n    component: BackgroundDefault,\r\n    settings: finalSettings,\r\n  };\r\n};\r\n\r\nexport type ImageCreator = (width: number, height: number) => string;\r\n\r\n/**\r\n * @property {function}  imageCreator       - Function to create string for css's backgroundUrl property.\r\n * You can use for example services like listed in this article https://css-tricks.com/websites-generate-svg-patterns/\r\n * to generate this string.\r\n */\r\nexport interface IBackgroundDefaultSettings {\r\n  imageCreator: ImageCreator;\r\n  color: string;\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useNotifyRef = <TValue>(\r\n  init: TValue\r\n): React.MutableRefObject<TValue> => {\r\n  const [_, forceUpdate] = useState(0);\r\n  const [ref] = useState(() => ({\r\n    value: init,\r\n    facade: {\r\n      get current() {\r\n        return ref.value;\r\n      },\r\n      set current(value) {\r\n        const last = ref.value;\r\n        if (last !== value) {\r\n          ref.value = value;\r\n          forceUpdate((i) => i + 1);\r\n        }\r\n      },\r\n    },\r\n  }));\r\n\r\n  return ref.facade;\r\n};\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useNotifyRef } from '../hooks/useNotifyRef';\r\nimport { LinkCreationState } from '../states';\r\nimport { LinkState } from '../states/linkState';\r\n\r\nexport const LinkWrapper = observer<{ link: LinkState | LinkCreationState }>(({ link }) => {\r\n  const draggableRef = useNotifyRef(null);\r\n\r\n  return (\r\n    <g>\r\n      <link.componentDefinition.component\r\n        draggableRef={draggableRef}\r\n        entity={link}\r\n        settings={link.componentDefinition.settings}\r\n      />\r\n    </g>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { LinksStore } from '../states/linksStore';\r\nimport { LinkWrapper } from './LinkWrapper';\r\n\r\nexport const LinksLayer = observer<{linksStore: LinksStore}>(({linksStore}) => {\r\n  return (\r\n    <svg>\r\n      {Object.values(linksStore.links).map((link) => (\r\n        <LinkWrapper key={link.id} link={link} />\r\n      ))}\r\n      {<LinkWrapper key='__creation__' link={linksStore.linkCreation} />}\r\n    </svg>\r\n  );\r\n});\r\n","import { useMemo } from 'react';\r\nimport { Handler } from 'react-use-gesture/dist/types';\r\nimport { IUserInteractionTranslate } from './common';\r\n\r\ntype DragEventHandler =\r\n  | Handler<'drag', React.PointerEvent<Element> | PointerEvent>\r\n  | undefined;\r\n\r\ninterface IDragHandlers {\r\n  onDrag: DragEventHandler;\r\n  onDragStart: DragEventHandler;\r\n  onDragEnd: DragEventHandler;\r\n}\r\n\r\nexport function useDragHandlers(\r\n  activeRef: React.MutableRefObject<boolean>,\r\n  state: IUserInteractionTranslate,\r\n  parentScaleGetter?: () => number,\r\n  cancel?: (event: React.PointerEvent<Element> | PointerEvent) => boolean\r\n): IDragHandlers {\r\n  const handlers = useMemo<IDragHandlers>(\r\n    () => ({\r\n      onDrag: ({ pinching, delta }) => {\r\n        if (!activeRef.current || pinching) {\r\n          return;\r\n        }\r\n        const parentScale = parentScaleGetter ? parentScaleGetter() : 1;\r\n        state.setOffset([\r\n          state.offset[0] + delta[0] / parentScale,\r\n          state.offset[1] + delta[1] / parentScale,\r\n        ]);\r\n      },\r\n      onDragStart: ({ event }) => {\r\n        if (cancel && cancel(event)) {\r\n          return;\r\n        }\r\n        activeRef.current = true;\r\n      },\r\n      onDragEnd: () => (activeRef.current = false),\r\n    }),\r\n    [activeRef, state, parentScaleGetter, cancel]\r\n  );\r\n\r\n  return handlers;\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport const DISABLED_USER_SELECT_CSS_CLASS =\r\n  'react_fast_diagram_disabled_user_select';\r\n\r\nexport function useUserAbilityToSelectSwitcher(\r\n  active: boolean,\r\n  elementToSwitchUserSelectOn: HTMLElement | undefined\r\n) {\r\n  useEffect(() => {\r\n    if (!active || !elementToSwitchUserSelectOn) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      elementToSwitchUserSelectOn.classList.contains(\r\n        DISABLED_USER_SELECT_CSS_CLASS\r\n      )\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    elementToSwitchUserSelectOn.classList.add(DISABLED_USER_SELECT_CSS_CLASS);\r\n\r\n    return () => {\r\n      elementToSwitchUserSelectOn.classList.remove(\r\n        DISABLED_USER_SELECT_CSS_CLASS\r\n      );\r\n    };\r\n  }, [active, elementToSwitchUserSelectOn]);\r\n}\r\n","import React from 'react';\r\nimport { useNodeUserInteraction } from '../hooks/userInteractions/useNodeUserInteraction';\r\nimport { NodeState } from '../states/nodeState';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const NodeWrapper = observer<{node: NodeState}>(({ node }) => {\r\n  const { userInteractionElemRef } = useNodeUserInteraction(node);\r\n\r\n  return (\r\n    <div\r\n      id={node.id}\r\n      className='react_fast_diagram_NodeWrapper'\r\n      style={{\r\n        left: node.offset[0],\r\n        top: node.offset[1]\r\n      }}\r\n      ref={node.ref}\r\n    >\r\n      <node.componentDefinition.component\r\n        draggableRef={userInteractionElemRef}\r\n        entity={node}\r\n        settings={node.componentDefinition.settings}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React, { useRef } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { NodeState } from '../../states/nodeState';\r\nimport { useNotifyRef } from '../useNotifyRef';\r\nimport { useRootStore } from '../useRootStore';\r\nimport { eventPathContainsClass } from './common';\r\nimport { useDragHandlers } from './useDragHandlers';\r\nimport { useUserAbilityToSelectSwitcher } from './useUserAbilityToSelectSwitcher';\r\n\r\nexport const useNodeUserInteraction = (\r\n  nodeState: NodeState,\r\n  enable?: boolean\r\n): IUseNodeUserInteractionResult => {\r\n  const { diagramState: diagramStore } = useRootStore();\r\n\r\n  // Should trigger rendering on change, otherwise useUserSelectSwitcher will not be invoked\r\n  const activeRef = useNotifyRef(false);\r\n  const userInteractionElemRef = useRef<HTMLElement>(null);\r\n\r\n  const dragHandlers = useDragHandlers(\r\n    activeRef,\r\n    nodeState,\r\n    () => diagramStore.zoom,\r\n    (e) => {\r\n      return eventPathContainsClass(e, 'react_fast_diagram_PortWrapper');\r\n    }\r\n  );\r\n\r\n  useGesture(dragHandlers, {\r\n    domTarget: userInteractionElemRef,\r\n    eventOptions: { passive: false },\r\n    enabled: enable,\r\n  });\r\n\r\n  useUserAbilityToSelectSwitcher(\r\n    activeRef.current,\r\n    userInteractionElemRef.current?.ownerDocument?.body\r\n  );\r\n\r\n  return {\r\n    active: activeRef.current,\r\n    userInteractionElemRef,\r\n  };\r\n};\r\n\r\nexport interface IUseNodeUserInteractionResult {\r\n  active: boolean;\r\n  userInteractionElemRef: React.RefObject<HTMLElement>;\r\n}\r\n","import { Point } from '../../types/common';\r\n\r\nexport const eventPathContainsClass = (\r\n  event: PointerEvent | React.PointerEvent<Element>,\r\n  className: string\r\n) => {\r\n  const typedEvent = event as Event;\r\n  if ('composedPath' in typedEvent) {\r\n    const targets = typedEvent.composedPath();\r\n    for (let i = 0; i < targets.length; i++) {\r\n      const target = targets[i];\r\n      if ('classList' in target) {\r\n        if ((target as Element).classList.contains(className)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport function allTouchTargetsContainsClass(\r\n  event: TouchEvent | React.TouchEvent<Element>,\r\n  listenOnlyClass: string | undefined,\r\n  ignoreClass: string | undefined\r\n): boolean {\r\n  for (let i = 0; i < event.touches.length; i++) {\r\n    if (\r\n      !eventTargetContainsClass(\r\n        event.touches[i].target,\r\n        listenOnlyClass,\r\n        ignoreClass\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function eventTargetContainsClass(\r\n  eventTarget: EventTarget | null,\r\n  listenOnlyClass: string | undefined,\r\n  ignoreClass: string | undefined\r\n): boolean {\r\n  if (eventTarget && 'classList' in eventTarget) {\r\n    const targetElement = eventTarget as Element;\r\n    return (\r\n      (!listenOnlyClass || targetElement.classList.contains(listenOnlyClass)) &&\r\n      (!ignoreClass || !targetElement.classList.contains(ignoreClass))\r\n    );\r\n  } else return false;\r\n}\r\n\r\nexport interface IUserInteractionTranslate {\r\n  offset: Point;\r\n  setOffset: (newOffset: Point) => any;\r\n}\r\n\r\nexport interface IUserInteractionTranslateAndZoom {\r\n  offset: Point;\r\n  zoom: number;\r\n  tranlsateAndZoomInto: (\r\n    translateBy: Point,\r\n    pointToZoomInto: Point,\r\n    changeZoomBy: number\r\n  ) => any;\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { NodesStore } from '../states/nodesStore';\r\nimport { NodeWrapper } from './NodeWrapper';\r\n\r\nexport const NodesLayer = observer<{nodesStore: NodesStore}>(({nodesStore}) => {\r\n  return (\r\n    <div>\r\n      {Object.values(nodesStore.nodes).map((node) => (\r\n        <NodeWrapper key={node.id} node={node} />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n","import { Point } from './types/common';\r\n\r\nexport const generateTransform = (translate: Point, scale?: number): string => {\r\n  const translatePart = `translate(${translate[0]}px, ${translate[1]}px)`;\r\n  if (scale) {\r\n    const scalePart = `scale(${scale})`;\r\n    return translatePart + ' ' + scalePart;\r\n  } else {\r\n    return translatePart;\r\n  }\r\n};\r\n\r\nexport interface ITransformation {\r\n  zoom: number;\r\n  offset: Point;\r\n}\r\n\r\nexport const distanceBetweenPoints = (a: Point, b: Point): number =>\r\n  Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));\r\n\r\nexport const roundPoint = (point: Point) =>\r\n  [Math.round(point[0]), Math.round(point[1])] as Point;\r\n\r\nexport const addPoints = (a: Point, b: Point): Point => [\r\n  a[0] + b[0],\r\n  a[1] + b[1],\r\n];\r\n\r\nexport const subtractPoints = (a: Point, b: Point): Point => [\r\n  a[0] - b[0],\r\n  a[1] - b[1],\r\n];\r\n\r\nexport const multiplyPoint = (a: Point, m: number): Point => [\r\n  a[0] * m,\r\n  a[1] * m,\r\n];\r\n\r\nexport const arePointsEqual = (a: Point, b: Point): boolean =>\r\n  a === b || (a && b && a[0] === b[0] && a[1] === b[1]);\r\n\r\nexport const areTranformationsEqual = (\r\n  a: ITransformation,\r\n  b: ITransformation\r\n): boolean =>\r\n  a === b ||\r\n  (a && b && a.zoom === b.zoom && arePointsEqual(a.offset, b.offset));\r\n\r\nexport function clampValue(value: number, interval: Point) {\r\n  return Math.min(Math.max(value, interval[0]), interval[1]);\r\n}\r\n","import React, { useCallback, useContext, useRef } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { WebKitGestureEvent } from 'react-use-gesture/dist/types';\r\nimport { useNotifyRef } from '../useNotifyRef';\r\nimport { useRootStore } from '../useRootStore';\r\nimport { useDragHandlers } from './useDragHandlers';\r\nimport { usePinchHandlers } from './usePinchHandlers';\r\nimport { useUserAbilityToSelectSwitcher } from './useUserAbilityToSelectSwitcher';\r\nimport { useWheelHandler } from './useWheelHandler';\r\n\r\nexport const useDiagramUserInteraction = (\r\n  enable?: boolean\r\n): IUseDragAndZoomResult => {\r\n  const { diagramState } = useRootStore();\r\n  const activeRef = useNotifyRef(false);\r\n\r\n  const cancelGesture = useCallback(\r\n    (\r\n      event:\r\n        | TouchEvent\r\n        | React.TouchEvent<Element>\r\n        | React.WheelEvent<Element>\r\n        | WheelEvent\r\n        | WebKitGestureEvent\r\n        | React.PointerEvent<Element>\r\n        | PointerEvent\r\n    ) => event.target !== diagramState.diagramInnerRef.current,\r\n    [diagramState.diagramInnerRef]\r\n  );\r\n\r\n  const dragHandlers = useDragHandlers(\r\n    activeRef,\r\n    diagramState,\r\n    undefined,\r\n    cancelGesture\r\n  );\r\n\r\n  const pinchHandlers = usePinchHandlers(\r\n    diagramState.diagramInnerRef,\r\n    activeRef,\r\n    diagramState,\r\n    cancelGesture\r\n  );\r\n\r\n  const wheelHandler = useWheelHandler(\r\n    diagramState.diagramInnerRef,\r\n    activeRef,\r\n    diagramState\r\n  );\r\n\r\n  useGesture(\r\n    {\r\n      ...dragHandlers,\r\n      ...pinchHandlers,\r\n      ...wheelHandler,\r\n    },\r\n    {\r\n      domTarget: diagramState.diagramInnerRef,\r\n      eventOptions: { passive: false },\r\n      enabled: enable,\r\n    }\r\n  );\r\n\r\n  useUserAbilityToSelectSwitcher(\r\n    activeRef.current,\r\n    diagramState.diagramInnerRef.current?.ownerDocument?.body\r\n  );\r\n\r\n  return {\r\n    transform: diagramState.transformString,\r\n    active: activeRef.current,\r\n  };\r\n};\r\n\r\nexport interface IUseDragAndZoomResult {\r\n  transform: string;\r\n  active: boolean;\r\n}\r\n","import { useMemo, useRef } from 'react';\r\nimport {\r\n  Handler,\r\n  Vector2,\r\n  WebKitGestureEvent,\r\n} from 'react-use-gesture/dist/types';\r\nimport { subtractPoints } from '../../utils';\r\nimport { IUserInteractionTranslateAndZoom } from './common';\r\n\r\ntype PinchEvent =\r\n  | React.TouchEvent\r\n  | TouchEvent\r\n  | React.WheelEvent\r\n  | WheelEvent\r\n  | WebKitGestureEvent;\r\n\r\ntype PinchEventHandler = Handler<'pinch', PinchEvent> | undefined;\r\n\r\ninterface IPinchHandlers {\r\n  onPinch: PinchEventHandler;\r\n  onPinchStart: PinchEventHandler;\r\n  onPinchEnd: PinchEventHandler;\r\n}\r\n\r\nexport function usePinchHandlers(\r\n  elemToAttachToRef: React.RefObject<HTMLElement>,\r\n  activeRef: React.MutableRefObject<boolean>,\r\n  state: IUserInteractionTranslateAndZoom,\r\n  cancel?: (event: PinchEvent) => boolean\r\n): IPinchHandlers {\r\n  const pinchState = useRef<IPinchState>({\r\n    distance: 0,\r\n    origin: [0, 0],\r\n  });\r\n\r\n  const handlers = useMemo<IPinchHandlers>(\r\n    () => ({\r\n      onPinch: ({ da: [distance], origin }) => {\r\n        if (!activeRef.current || !elemToAttachToRef.current) {\r\n          return;\r\n        }\r\n        const originDiff = subtractPoints(origin, pinchState.current.origin);\r\n\r\n        const rect = elemToAttachToRef.current.getBoundingClientRect();\r\n        const originPositionOnElement = subtractPoints(origin, [\r\n          rect.left,\r\n          rect.top,\r\n        ]);\r\n\r\n        state.tranlsateAndZoomInto(\r\n          originDiff,\r\n          originPositionOnElement,\r\n          distance / pinchState.current.distance\r\n        );\r\n\r\n        pinchState.current = {\r\n          distance,\r\n          origin,\r\n        };\r\n      },\r\n      onPinchStart: ({ da: [distance], origin, event }) => {\r\n        if (cancel && cancel(event)) {\r\n          return;\r\n        }\r\n\r\n        pinchState.current = {\r\n          distance,\r\n          origin,\r\n        };\r\n        activeRef.current = true;\r\n      },\r\n      onPinchEnd: () => (activeRef.current = false),\r\n    }),\r\n    [elemToAttachToRef, activeRef, state, cancel]\r\n  );\r\n\r\n  return handlers;\r\n}\r\n\r\ninterface IPinchState {\r\n  distance: number;\r\n  origin: Vector2;\r\n}\r\n","import { useMemo } from 'react';\r\nimport { Handler } from 'react-use-gesture/dist/types';\r\nimport {\r\n  subtractPoints,\r\n} from '../../utils';\r\nimport { IUserInteractionTranslateAndZoom } from './common';\r\n\r\nexport function useWheelHandler(\r\n  elemToAttachToRef: React.RefObject<HTMLElement>,\r\n  activeRef: React.MutableRefObject<boolean>,\r\n  state: IUserInteractionTranslateAndZoom\r\n): IWheelHandler {\r\n  const handlers = useMemo<IWheelHandler>(\r\n    () => ({\r\n      onWheel: ({\r\n        direction: [_, yDirection],\r\n        event: { clientX, clientY },\r\n      }) => {\r\n        if (!elemToAttachToRef.current) return;\r\n        const rect = elemToAttachToRef.current.getBoundingClientRect();\r\n\r\n        const mousePositionOnElement = subtractPoints(\r\n          [clientX, clientY],\r\n          [rect.left, rect.top]\r\n        );\r\n\r\n        let factor = 0.9;\r\n        if (yDirection < 0) {\r\n          factor = 1 / factor;\r\n        }\r\n\r\n        state.tranlsateAndZoomInto(\r\n          [0, 0],\r\n          mousePositionOnElement,\r\n          factor\r\n        );\r\n      },\r\n    }),\r\n    [elemToAttachToRef, activeRef, state]\r\n  );\r\n\r\n  return handlers;\r\n}\r\n\r\ntype WheelEventHandler =\r\n  | Handler<'wheel', React.WheelEvent<Element> | WheelEvent>\r\n  | undefined;\r\n\r\ninterface IWheelHandler {\r\n  onWheel: WheelEventHandler;\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useRootStore } from '../hooks/useRootStore';\r\n\r\nexport const MiniControlWrapper = observer(() => {\r\n  const { diagramSettings, diagramApi } = useRootStore();\r\n\r\n  return (\r\n    diagramSettings.miniControlComponentState.component && (\r\n      <diagramSettings.miniControlComponentState.component\r\n        diagramApi={diagramApi}\r\n        settings={diagramSettings.miniControlComponentState.settings}\r\n      />\r\n    )\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { LinksLayer } from './LinksLayer';\r\nimport { NodesLayer } from './NodesLayer';\r\nimport { useDiagramUserInteraction } from '../hooks/userInteractions/useDiagramUserInteraction';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useRootStore } from '../hooks/useRootStore';\r\nimport { BackgroundWrapper } from './BackgroundWrapper';\r\nimport { MiniControlWrapper } from './MiniControlWrapper';\r\n\r\nexport interface IDiagramInnerProps {\r\n  diagramStyles?: React.CSSProperties;\r\n}\r\n\r\nexport const InnerDiagram = observer<IDiagramInnerProps>((props) => {\r\n  const rootStore = useRootStore();\r\n  const { transform } = useDiagramUserInteraction();\r\n\r\n  return (\r\n    <div\r\n      ref={rootStore.diagramState.diagramInnerRef}\r\n      style={{ ...props.diagramStyles }}\r\n      className='react_fast_diagram_DiagramInner'\r\n    >\r\n      <BackgroundWrapper />\r\n      <div\r\n        className='react_fast_diagram_DiagramInner_DraggablePart'\r\n        style={{\r\n          transform: transform,\r\n        }}\r\n      >\r\n        <LinksLayer linksStore={rootStore.linksStore} />\r\n        <NodesLayer nodesStore={rootStore.nodesStore} />\r\n      </div>\r\n      <MiniControlWrapper />\r\n    </div>\r\n  );\r\n});\r\n\r\nInnerDiagram.displayName = 'InnerDiagram';\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { PortState } from './portState';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport class Callbacks implements ICallbacks {\r\n  validateLinkEndpoints?: (source: PortState, target: PortState, rootStore: RootStore) => boolean; \r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  setCallbacks = (callbacks?: ICallbacks) => {\r\n    this.validateLinkEndpoints = callbacks?.validateLinkEndpoints;\r\n  }\r\n}\r\n\r\nexport interface ICallbacks {\r\n  validateLinkEndpoints?: Callbacks['validateLinkEndpoints']\r\n}","import {\r\n  IDiagramSettings,\r\n  ILinksSettings,\r\n  INodesSettings,\r\n  IPortsSettings,\r\n} from '.';\r\nimport { ICallbacks } from './callbacks';\r\nimport { ILinkState } from './linkState';\r\nimport { INodeState } from './nodeState';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport class DiagramApi {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  addNode = (node: INodeState) => {\r\n    this.rootStore.nodesStore.addNode(node);\r\n  };\r\n\r\n  reinitState = (nodes?: INodeState[], links?: ILinkState[]) => {\r\n    this.rootStore.nodesStore.importState(nodes);\r\n    this.rootStore.linksStore.importState(links);\r\n  };\r\n\r\n  reinitSettings = (settings: ISettings) => {\r\n    this.rootStore.diagramSettings.fromJson(settings.diagram);\r\n    this.rootStore.nodesSettings.fromJson(settings.nodes);\r\n    this.rootStore.linksSettings.fromJson(settings.links);\r\n    this.rootStore.portsSettings.fromJson(settings.ports);\r\n    this.rootStore.callbacks.setCallbacks(settings.callbacks);\r\n  };\r\n\r\n  zoomIn = () => this.rootStore.diagramState.zoomIntoCenter(1 / 0.8);\r\n  zoomOut = () => this.rootStore.diagramState.zoomIntoCenter(0.8);\r\n\r\n  recalculatePortPosition = () => {\r\n    //\r\n  };\r\n}\r\n\r\nexport interface ISettings {\r\n  diagram?: IDiagramSettings;\r\n  nodes?: INodesSettings;\r\n  links?: ILinksSettings;\r\n  ports?: IPortsSettings;\r\n  callbacks?: ICallbacks;\r\n}\r\n","import { ILinkPathConstructor } from '../states/linksSettings';\r\nimport { Point } from '../types/common';\r\nimport { distanceBetweenPoints, roundPoint } from '../utils';\r\n\r\nfunction curvedLinkPathConstructor(\r\n  source: Point,\r\n  target: Point,\r\n  sourcePortType: string | undefined,\r\n  targetPortType: string | undefined,\r\n  settings: ICurvedLinkPathConstructorSettings\r\n): string {\r\n  if (!source || !target) return '';\r\n  source = roundPoint(source);\r\n  target = roundPoint(target);\r\n\r\n  const sourceStr = `${source[0]}, ${source[1]}`;\r\n  const targetStr = `${target[0]}, ${target[1]}`;\r\n\r\n  const directionFactor = settings.tweakDirectionFactorBasedOnDistance(\r\n    distanceBetweenPoints(source, target),\r\n    settings.directionFactor\r\n  );\r\n\r\n  function getControl(endpoint: Point, portType: string | undefined): string {\r\n    const linkDirection =\r\n      portType && settings.portTypeToLinkDirectionMapping[portType];\r\n    switch (linkDirection) {\r\n      case 'left':\r\n        return `${endpoint[0] - directionFactor}, ${endpoint[1]}`;\r\n      case 'up':\r\n        return `${endpoint[0]}, ${endpoint[1] - directionFactor}`;\r\n      case 'right':\r\n        return `${endpoint[0] + directionFactor}, ${endpoint[1]}`;\r\n      case 'down':\r\n        return `${endpoint[0]}, ${endpoint[1] + directionFactor}`;\r\n      default:\r\n        return `${endpoint[0]}, ${endpoint[1]}`;\r\n    }\r\n  }\r\n\r\n  if (sourcePortType || targetPortType) {\r\n    const sourceControl = getControl(source, sourcePortType);\r\n    const targetControl = getControl(target, targetPortType);\r\n    return `M ${sourceStr} C ${sourceControl} ${targetControl}, ${targetStr}`;\r\n  } else {\r\n    return `M ${sourceStr} Q ${target[0]}, ${source[1]}, ${targetStr}`;\r\n  }\r\n}\r\n\r\nexport interface ICurvedLinkPathConstructorSettings {\r\n  portTypeToLinkDirectionMapping: {\r\n    [key: string]: 'left' | 'right' | 'up' | 'down';\r\n  };\r\n  directionFactor: number;\r\n  tweakDirectionFactorBasedOnDistance: (\r\n    distance: number,\r\n    directionFactor: number\r\n  ) => number;\r\n}\r\n\r\nconst defualtSettings: ICurvedLinkPathConstructorSettings = {\r\n  portTypeToLinkDirectionMapping: {\r\n    left: 'left',\r\n    right: 'right',\r\n    top: 'up',\r\n    bottom: 'down',\r\n  },\r\n  directionFactor: 60,\r\n  tweakDirectionFactorBasedOnDistance: (distance, directionFactor) => {\r\n    if (distance < 100) {\r\n      return directionFactor * (distance / 100);\r\n    }\r\n    return directionFactor;\r\n  },\r\n};\r\n\r\nexport function createCurvedLinkPathConstructor(\r\n  settings?: Partial<ICurvedLinkPathConstructorSettings>\r\n): ILinkPathConstructor {\r\n  return (\r\n    source: Point,\r\n    target: Point,\r\n    sourcePortType: string | undefined,\r\n    targetPortType: string | undefined\r\n  ) =>\r\n    curvedLinkPathConstructor(\r\n      source,\r\n      target,\r\n      sourcePortType,\r\n      targetPortType,\r\n      settings ? { ...defualtSettings, ...settings } : defualtSettings\r\n    );\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Point } from '..';\r\n\r\nexport class HtmlElementRefState {\r\n  currentInternal: HTMLDivElement | null;\r\n\r\n  constructor(initValue: HTMLDivElement | null) {\r\n    this.currentInternal = initValue;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get current() {\r\n    return this.currentInternal;\r\n  }\r\n\r\n  set current(value: HTMLDivElement | null) {\r\n    this.currentInternal = value;\r\n  }\r\n\r\n  offsetRelativeToParent = (parent: HTMLElement) : Point | null => {\r\n    if (this.current){\r\n      let iterElement = this.current as HTMLElement | null;\r\n      let acumLeft = 0;\r\n      let acumTop = 0;\r\n\r\n      while(parent !== iterElement && iterElement) {\r\n        acumLeft += iterElement.offsetLeft;\r\n        acumTop += iterElement.offsetTop;\r\n        iterElement = iterElement.parentElement;\r\n      }\r\n\r\n      return [acumLeft, acumTop];\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  get realSize() : Point | null {\r\n    if (this.current) {\r\n      return [this.current.clientWidth, this.current.clientHeight];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport interface IHtmlElementRect {\r\n  left: number;\r\n  top: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n","import { Point } from '../types/common';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { RootStore } from './rootStore';\r\nimport {\r\n  IUserInteractionTranslateAndZoom,\r\n  IUserInteractionTranslate,\r\n} from '../hooks/userInteractions/common';\r\nimport {\r\n  clampValue,\r\n  generateTransform,\r\n  subtractPoints,\r\n  multiplyPoint,\r\n  addPoints,\r\n} from '../utils';\r\nimport { HtmlElementRefState } from './htmlElementRefState';\r\n\r\nexport class DiagramState\r\n  implements IUserInteractionTranslate, IUserInteractionTranslateAndZoom {\r\n  offset: Point = [0, 0];\r\n  zoom: number = 1;\r\n  diagramInnerRef: HtmlElementRefState;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.diagramInnerRef = new HtmlElementRefState(null);\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  setOffset = (newOffset: Point) => {\r\n    this.offset = newOffset;\r\n  };\r\n\r\n  setZoom = (newZoom: number) => {\r\n    this.zoom = clampValue(\r\n      newZoom,\r\n      this.rootStore.diagramSettings.scaleInterval\r\n    );\r\n  };\r\n\r\n  setTransformation = (newOffset: Point, newZoom: number) => {\r\n    this.setOffset(newOffset);\r\n    this.setZoom(newZoom);\r\n  };\r\n\r\n  // See: https://stackoverflow.com/a/30039971/9142642\r\n  zoomInto = (pointToZoomInto: Point, zoomMultiplicator: number) => {\r\n    const newZoom = clampValue(\r\n      this.zoom * zoomMultiplicator,\r\n      this.rootStore.diagramSettings.scaleInterval\r\n    );\r\n\r\n    const pointDisplacementAfterZoom = multiplyPoint(\r\n      subtractPoints(pointToZoomInto, this.offset),\r\n      newZoom / this.zoom\r\n    );\r\n\r\n    this.setTransformation(\r\n      // Compensate for the displacement by moving the point back under the cursor\r\n      subtractPoints(pointToZoomInto, pointDisplacementAfterZoom),\r\n      newZoom\r\n    );\r\n  };\r\n\r\n  translate = (translateBy: Point) => {\r\n    this.setOffset(addPoints(this.offset, translateBy));\r\n  };\r\n\r\n  tranlsateAndZoomInto = (\r\n    translateBy: Point,\r\n    pointToZoomInto: Point,\r\n    zoomMultiplicator: number\r\n  ) => {\r\n    this.translate(translateBy);\r\n    this.zoomInto(pointToZoomInto, zoomMultiplicator);\r\n  };\r\n\r\n  zoomIntoCenter = (zoomMultiplicator: number) => {\r\n    const diagramRealSize = this.diagramInnerRef.realSize;\r\n    if (!diagramRealSize) return;\r\n\r\n    this.rootStore.diagramState.zoomInto(\r\n      multiplyPoint(diagramRealSize, 0.5),\r\n      zoomMultiplicator\r\n    );\r\n  };\r\n\r\n  get transformString() {\r\n    return generateTransform(this.offset, this.zoom);\r\n  }\r\n}\r\n\r\nexport interface ICommonSettings {\r\n  readonly: boolean; // TODO: allow to make readonly specific components, such as nodes, links.\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Point } from '../types/common';\r\nimport { addPoints } from '../utils';\r\n\r\nexport class LinkPointEndpointState {\r\n  point: Point;\r\n\r\n  constructor(pos: Point) {\r\n    this.point = pos;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  translateBy = (pointToTranslateBy: Point) => {\r\n    this.point = addPoints(this.point, pointToTranslateBy);\r\n  };\r\n}","import { makeAutoObservable } from 'mobx';\r\nimport { createLinkPath, ILinkPath, LinkPortEndpointState, Point } from '..';\r\nimport { addPoints } from '../utils';\r\nimport { LinkPointEndpointState } from './LinkPointEndpointState';\r\nimport { PortState } from './portState';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport class LinkCreationState {\r\n  source: LinkPortEndpointState | null = null;\r\n  target: LinkPointEndpointState | null = null;\r\n  targetPortCandidate: PortState | null = null;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  startLinking = (\r\n    portState: PortState,\r\n    eventOffsetRelativeToTarget: Point | undefined\r\n  ): boolean => {\r\n    this.resetProps();\r\n    this.source = new LinkPortEndpointState(\r\n      portState.nodeId,\r\n      portState.id,\r\n      this.rootStore\r\n    );\r\n\r\n    let targetPoint: Point;\r\n    if (portState.offsetRelativeToNode && eventOffsetRelativeToTarget) {\r\n      targetPoint = addPoints(\r\n        addPoints(portState.offsetRelativeToNode, portState.node.offset),\r\n        eventOffsetRelativeToTarget\r\n      );\r\n    } else {\r\n      const sourcePoint = this.source.point;\r\n      if (sourcePoint) {\r\n        targetPoint = sourcePoint;\r\n      } else {\r\n        this.resetProps();\r\n        return false;\r\n      }\r\n    }\r\n\r\n    this.target = new LinkPointEndpointState(targetPoint);\r\n\r\n    return true;\r\n  };\r\n\r\n  setTargetPortCandidate = (portState: PortState) => {\r\n    if (!this.source) return;\r\n\r\n    const canAddLink = this.rootStore.linksStore.canAddLink({\r\n      source: {\r\n        nodeId: this.source.nodeId,\r\n        portId: this.source.portId,\r\n      },\r\n      target: {\r\n        nodeId: portState.nodeId,\r\n        portId: portState.id,\r\n      },\r\n    });\r\n\r\n    this.targetPortCandidate = portState;\r\n    if (canAddLink.result) {\r\n      portState.validForConnection = true;\r\n    } else {\r\n      portState.validForConnection = false;\r\n    }\r\n  };\r\n\r\n  resetTargetPortCandidate = (portState: PortState) => {\r\n    if (this.targetPortCandidate === portState) {\r\n      this.targetPortCandidate = null;\r\n    }\r\n    portState.validForConnection = true;\r\n  };\r\n\r\n  stopLinking = () => {\r\n    if (this.targetPortCandidate && this.source) {\r\n      this.rootStore.linksStore.addLink({\r\n        source: {\r\n          nodeId: this.source.nodeId,\r\n          portId: this.source.portId,\r\n        },\r\n        target: {\r\n          nodeId: this.targetPortCandidate.nodeId,\r\n          portId: this.targetPortCandidate.id,\r\n        },\r\n      });\r\n    }\r\n    this.resetProps();\r\n  };\r\n\r\n  get componentDefinition() {\r\n    const { visualComponents } = this.rootStore.linksSettings;\r\n    return visualComponents.getComponent(linkCreationComponentType);\r\n  }\r\n\r\n  get path(): ILinkPath | undefined {\r\n    if (!this.source || !this.target) return undefined;\r\n    else return createLinkPath(this.rootStore, this.source, this.target);\r\n  }\r\n\r\n  private resetProps = () => {\r\n    if (this.source) {\r\n      this.source.port.validForConnection = true;\r\n      this.source = null;\r\n    }\r\n    this.target = null;\r\n    if (this.targetPortCandidate) {\r\n      this.targetPortCandidate.validForConnection = true;\r\n      this.targetPortCandidate = null;\r\n    }\r\n  };\r\n}\r\n\r\nexport const linkCreationComponentType: string = 'linkCreation';\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Point } from '../types/common';\r\nimport { RootStore } from './rootStore';\r\nimport { PortState } from './portState';\r\nimport { NodeState } from './nodeState';\r\nimport { addPoints, multiplyPoint } from '../utils';\r\n\r\nexport class LinkPortEndpointState implements ILinkPortEndpoint {\r\n  nodeId: string;\r\n  portId: string;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(nodeId: string, portId: string, rootStore: RootStore) {\r\n    this.nodeId = nodeId;\r\n    this.portId = portId;\r\n    rootStore.nodesStore\r\n      .getNodeOrThrowException(this.nodeId)\r\n      .getPortOrThrowException(this.portId);\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  fromJson = (obj: ILinkPortEndpoint) => {\r\n    this.nodeId = obj.nodeId;\r\n    this.portId = obj.portId;\r\n  };\r\n\r\n  get node(): NodeState {\r\n    return this.rootStore.nodesStore.getNodeOrThrowException(this.nodeId);\r\n  }\r\n\r\n  get port(): PortState {\r\n    return this.node.getPortOrThrowException(this.portId);\r\n  }\r\n\r\n  get point(): Point | undefined {\r\n    if (this.port.offsetRelativeToNode && this.port.realSize) {\r\n      return addPoints(\r\n        this.node.offset,\r\n        addPoints(\r\n          this.port.offsetRelativeToNode,\r\n          multiplyPoint(this.port.realSize, 0.5)\r\n        )\r\n      );\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport interface ILinkPortEndpoint {\r\n  nodeId: string;\r\n  portId: string;\r\n}\r\n\r\nexport function linkPortEndpointsEquals(\r\n  a: ILinkPortEndpoint,\r\n  b: ILinkPortEndpoint\r\n): boolean {\r\n  return a.nodeId === b.nodeId && a.portId === b.portId;\r\n}\r\n","import React from 'react';\r\nimport { LinkCreationState } from '../states';\r\nimport { ILinkVisualComponentProps } from '../states/linksSettings';\r\nimport { IComponentDefinition } from '../states/visualComponentState';\r\n\r\nexport const LinkDefault: React.FC<\r\n  ILinkVisualComponentProps<ILinkDefaultSettings>\r\n> = (props) => {\r\n  const settings = props.settings ?? linkDefaultSettings;\r\n  const path = props.entity.path;\r\n  if (!path) return null;\r\n\r\n  return (\r\n    <g>\r\n      <path\r\n        ref={props.draggableRef}\r\n        d={path.svgPath}\r\n        stroke={settings.color}\r\n        strokeWidth={settings.strokeWidth}\r\n        fill='none'\r\n      />\r\n      {props.entity instanceof LinkCreationState && (\r\n        <circle\r\n          cx={path.target[0]}\r\n          cy={path.target[1]}\r\n          r={settings.cirleRadius}\r\n          fill='orange'\r\n        />\r\n      )}\r\n    </g>\r\n  );\r\n};\r\n\r\nexport interface ILinkDefaultSettings {\r\n  color: string;\r\n  strokeWidth: number;\r\n  cirleRadius: number;\r\n}\r\n\r\nconst linkDefaultSettings: ILinkDefaultSettings = {\r\n  color: 'LightBlue',\r\n  strokeWidth: 3,\r\n  cirleRadius: 3,\r\n};\r\n\r\nexport function createLinkDefault(\r\n  settings?: Partial<ILinkDefaultSettings>\r\n): IComponentDefinition<ILinkVisualComponentProps, ILinkDefaultSettings> {\r\n  const finaleSettings = {\r\n    ...linkDefaultSettings,\r\n    ...(settings ? settings : {}),\r\n  };\r\n\r\n  return {\r\n    component: LinkDefault,\r\n    settings: finaleSettings,\r\n  };\r\n}\r\n\r\n// <g>\r\n//       {/* Main line */}\r\n//       <path d={points} stroke={linkColor} strokeWidth=\"3\" fill=\"none\" />\r\n//       {/* Thick line to make selection easier */}\r\n//       <path\r\n//         d={points}\r\n//         stroke={linkColor}\r\n//         strokeWidth=\"20\"\r\n//         fill=\"none\"\r\n//         strokeLinecap=\"round\"\r\n//         strokeOpacity={isHovered || isSelected ? 0.1 : 0}\r\n//         onMouseEnter={() => onLinkMouseEnter({ config, linkId: link.id })}\r\n//         onMouseLeave={() => onLinkMouseLeave({ config, linkId: link.id })}\r\n//         onClick={(e) => {\r\n//           onLinkClick({ config, linkId: link.id })\r\n//           e.stopPropagation()\r\n//         }}\r\n//       />\r\n//     </g>\r\n","import { makeAutoObservable } from 'mobx';\r\nimport {\r\n  IComponentDefinition,\r\n  IVisualComponentProps,\r\n  VisualComponent,\r\n  VisualComponentState,\r\n} from '.';\r\nimport { Dictionary } from '../types/common';\r\n\r\nexport class VisualComponents<\r\n  TEntity,\r\n  TComponentProps extends IVisualComponentProps<TEntity>\r\n> {\r\n  defaultType: string = componentDefaultType;\r\n  defaultComponents: Dictionary<VisualComponentState<TComponentProps>>;\r\n  components: Dictionary<VisualComponentState<TComponentProps>>;\r\n\r\n  constructor(\r\n    defaultComponents: Dictionary<\r\n      IComponentDefinition<TComponentProps> | VisualComponent<TComponentProps>\r\n    >\r\n  ) {\r\n    this.defaultComponents = this.createComponentCollection(defaultComponents);\r\n    this.components = { ...this.defaultComponents };\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson = (obj?: IVisualComponentsObject<TComponentProps>) => {\r\n    this.defaultType = obj?.defaultNodeType ?? componentDefaultType;\r\n\r\n    this.components = {\r\n      ...this.defaultComponents,\r\n      ...this.createComponentCollection(obj?.components),\r\n    };\r\n  };\r\n\r\n  getComponent = (\r\n    type: string | undefined | null\r\n  ): VisualComponentState<TComponentProps> => {\r\n    const finalComponentType = type ?? this.defaultType;\r\n    return (\r\n      this.components[finalComponentType] ?? this.components[this.defaultType]\r\n    );\r\n  };\r\n\r\n  private createComponentCollection(\r\n    componentsObjects?: Dictionary<\r\n      IComponentDefinition<TComponentProps> | VisualComponent<TComponentProps>\r\n    >\r\n  ): Dictionary<VisualComponentState<TComponentProps>> {\r\n    const collection: Dictionary<VisualComponentState<TComponentProps>> = {};\r\n\r\n    componentsObjects &&\r\n      Object.entries(componentsObjects).forEach(([key, value]) => {\r\n        collection[key] = new VisualComponentState<TComponentProps>(value);\r\n      });\r\n\r\n    return collection;\r\n  }\r\n}\r\n\r\nexport const componentDefaultType = 'default';\r\n\r\nexport interface IVisualComponentsObject<TComponentProps> {\r\n  defaultNodeType?: string;\r\n  components: Dictionary<\r\n    IComponentDefinition<TComponentProps> | VisualComponent<TComponentProps>\r\n  >;\r\n}\r\n","import { createLinkDefault, LinkDefault } from '../components/LinkDefault';\r\nimport {\r\n  componentDefaultType,\r\n  IVisualComponentsObject,\r\n  VisualComponents,\r\n} from './visualComponents';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { LinkState } from './linkState';\r\nimport { createCurvedLinkPathConstructor } from '../linkConstructors/curved';\r\nimport { Point } from '../types/common';\r\nimport { IVisualComponentProps } from '.';\r\nimport {\r\n  linkCreationComponentType,\r\n  LinkCreationState,\r\n} from './linkCreationState';\r\n\r\nexport class LinksSettings {\r\n  pathConstructor = defaultPathConstructor;\r\n  visualComponents = new VisualComponents<\r\n    LinkState | LinkCreationState,\r\n    ILinkVisualComponentProps\r\n  >({\r\n    [componentDefaultType]: LinkDefault,\r\n    [linkCreationComponentType]: createLinkDefault({\r\n      color: '#49f860',\r\n      strokeWidth: 3,\r\n    }),\r\n  });\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson = (obj?: ILinksSettings) => {\r\n    this.visualComponents.fromJson(obj);\r\n    this.pathConstructor = obj?.pathConstructor ?? defaultPathConstructor;\r\n  };\r\n}\r\n\r\nconst defaultPathConstructor = createCurvedLinkPathConstructor();\r\n\r\nexport interface ILinkVisualComponentProps<TSettings extends {} = {}>\r\n  extends IVisualComponentProps<LinkState | LinkCreationState, TSettings> {\r\n  draggableRef: React.RefObject<any>;\r\n}\r\n\r\nexport interface ILinksSettings\r\n  extends IVisualComponentsObject<ILinkVisualComponentProps> {\r\n  pathConstructor: ILinkPathConstructor;\r\n}\r\n\r\nexport type ILinkPathConstructor = (\r\n  source: Point,\r\n  target: Point,\r\n  sourcePortType: string | undefined,\r\n  targetPortType: string | undefined\r\n) => string;\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Point } from '../types/common';\r\nimport { v4 } from 'uuid';\r\nimport { RootStore } from './rootStore';\r\nimport {\r\n  LinkPortEndpointState,\r\n  ILinkPortEndpoint,\r\n} from './linkPortEndpointState';\r\nimport { componentDefaultType } from './visualComponents';\r\nimport { LinkPointEndpointState } from './LinkPointEndpointState';\r\n\r\nexport class LinkState implements ILinkState {\r\n  id: string;\r\n  componentType: string;\r\n  source: LinkPortEndpointState;\r\n  target: LinkPortEndpointState;\r\n  segments: ILinkSegment[];\r\n  extra: any;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore, id: string, state: ILinkStateWithoutId) {\r\n    this.rootStore = rootStore;\r\n\r\n    this.id = id;\r\n    this.importState(state);\r\n\r\n    makeAutoObservable(this, {\r\n      rootStore: false,\r\n    });\r\n  }\r\n\r\n  importState = (state: ILinkStateWithoutId) => {\r\n    this.source = this.createEndpointState(state.source);\r\n    this.target = this.createEndpointState(state.target);\r\n    this.componentType = state.componentType ?? componentDefaultType;\r\n    this.segments = state.segments ?? [];\r\n    this.extra = state.extra ?? null;\r\n  }\r\n\r\n  get path(): ILinkPath | undefined {\r\n    return createLinkPath(this.rootStore, this.source, this.target);\r\n  }\r\n\r\n  get componentDefinition() {\r\n    const { visualComponents } = this.rootStore.linksSettings;\r\n    return visualComponents.getComponent(this.componentType);\r\n  }\r\n\r\n  private createEndpointState = (\r\n    endpoint: ILinkPortEndpoint\r\n  ): LinkPortEndpointState => {\r\n    return new LinkPortEndpointState(\r\n      endpoint.nodeId,\r\n      endpoint.portId,\r\n      this.rootStore\r\n    );\r\n  };\r\n}\r\n\r\nexport function createLinkPath(\r\n  rootStore: RootStore,\r\n  source: LinkPortEndpointState,\r\n  target: LinkPortEndpointState | LinkPointEndpointState\r\n): ILinkPath | undefined {\r\n  const { linksSettings } = rootStore;\r\n  if (!source.point || !target.point) {\r\n    return undefined;\r\n  }\r\n\r\n  const pathStr = linksSettings.pathConstructor(\r\n    source.point,\r\n    target.point,\r\n    source.port.type,\r\n    target instanceof LinkPointEndpointState ? undefined : target.port.type\r\n  );\r\n\r\n  return {\r\n    svgPath: pathStr,\r\n    source: source.point,\r\n    target: target.point,\r\n  };\r\n}\r\n\r\nexport interface ILinkStateWithoutId {\r\n  componentType?: string;\r\n  source: ILinkPortEndpoint;\r\n  target: ILinkPortEndpoint;\r\n  segments?: ILinkSegment[];\r\n  extra?: any;\r\n}\r\n\r\nexport interface ILinkStateWithId extends ILinkStateWithoutId {\r\n  id: string;\r\n}\r\n\r\nexport interface ILinkState extends ILinkStateWithoutId {\r\n  id?: string;\r\n}\r\n\r\nexport interface ILinkSegment {\r\n  position: Point;\r\n}\r\n\r\nexport interface ILinkPath {\r\n  svgPath: string;\r\n  source: Point;\r\n  target: Point;\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { v4 } from 'uuid';\r\nimport { Dictionary, TrueOrFalseWithError } from '../types/common';\r\nimport { LinkCreationState } from './linkCreationState';\r\nimport {\r\n  ILinkPortEndpoint,\r\n  linkPortEndpointsEquals,\r\n} from './linkPortEndpointState';\r\nimport { ILinkState, LinkState } from './linkState';\r\nimport { PortState } from './portState';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport class LinksStore {\r\n  private _links: Dictionary<LinkState>;\r\n  private _nodesLinksCollection: Dictionary<LinkState[]>;\r\n\r\n  linkCreation: LinkCreationState;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.linkCreation = new LinkCreationState(rootStore);\r\n    this.importState();\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  importState = (newLinks?: ILinkState[]) => {\r\n    this._links = {};\r\n    this._nodesLinksCollection = {};\r\n    newLinks && newLinks.forEach(this.addLink);\r\n  };\r\n\r\n  get links(): Readonly<Dictionary<LinkState>> {\r\n    return this._links;\r\n  }\r\n\r\n  getNodeLinks = (nodeId: string): LinkState[] => {\r\n    return this._nodesLinksCollection[nodeId] ?? [];\r\n  };\r\n\r\n  removeNodeLinks = (nodeId: string) => {\r\n    const links = this.getNodeLinks(nodeId);\r\n    links.forEach((l) => this.removeLink(l.id));\r\n  };\r\n\r\n  removePortLinks = (nodeId: string, portId: string) => {\r\n    if (!nodeId || !portId) return;\r\n\r\n    const links = this.getNodeLinks(nodeId);\r\n    const endpointToRemove = {\r\n      nodeId,\r\n      portId,\r\n    };\r\n    links.forEach((l) => {\r\n      if (\r\n        linkPortEndpointsEquals(l.source, endpointToRemove) ||\r\n        linkPortEndpointsEquals(l.target, endpointToRemove)\r\n      ) {\r\n        this.removeLink(l.id);\r\n      }\r\n    });\r\n  };\r\n\r\n  addLink = (link: ILinkState): TrueOrFalseWithError => {\r\n    const canAdd = this.canAddLink(link);\r\n    if (!canAdd.result) return canAdd;\r\n\r\n    const newLink = new LinkState(this.rootStore, link.id ?? v4(), link);\r\n    this._links[newLink.id] = newLink;\r\n    this._addLinkToNodeLinksCollection(newLink, link.source.nodeId);\r\n    this._addLinkToNodeLinksCollection(newLink, link.target.nodeId);\r\n\r\n    return { result: true };\r\n  };\r\n\r\n  removeLink = (linkId: string): boolean => {\r\n    const linkToRemove = this._links[linkId];\r\n    if (linkToRemove) {\r\n      this._removeLinkFromNodeLinksCollection(\r\n        linkToRemove,\r\n        linkToRemove.source.nodeId\r\n      );\r\n      this._removeLinkFromNodeLinksCollection(\r\n        linkToRemove,\r\n        linkToRemove.target.nodeId\r\n      );\r\n\r\n      delete this._links[linkId];\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  canAddLink = (link: ILinkState): TrueOrFalseWithError => {\r\n    if (!link) return {\r\n      result: false,\r\n      error: `Cannot add empty`,\r\n    }\r\n    if (link.id && this._links[link.id]) return {\r\n      result: false,\r\n      error: `Cannot add link with id '${link.id}', as it already exists`,\r\n    };\r\n\r\n    const isSourceValid = this.isEndpointValid(link.source);\r\n    if (!isSourceValid.result) return isSourceValid;\r\n    const isTargetValid = this.isEndpointValid(link.target);\r\n    if (!isTargetValid.result) return isTargetValid;\r\n\r\n    if (link.source.nodeId === link.target.nodeId) {\r\n      return {\r\n        result: false,\r\n        error: `Link's endpoints are located in the same node`,\r\n      };\r\n    }\r\n\r\n    if (this.areEndpointsConnected(link.source, link.target)) {\r\n      return { result: false, error: `Link's endpoints are already connected` };\r\n    }\r\n\r\n    if (\r\n      this.rootStore.callbacks.validateLinkEndpoints?.(\r\n        this.getEndpointPort(link.source),\r\n        this.getEndpointPort(link.target),\r\n        this.rootStore\r\n      ) === false\r\n    ) {\r\n      return {\r\n        result: false,\r\n        error: `Link's endpoints are not valid according to validation callback`,\r\n      };\r\n    }\r\n\r\n    return { result: true };\r\n  };\r\n\r\n  isEndpointValid = (endpoint: ILinkPortEndpoint): TrueOrFalseWithError => {\r\n    try {\r\n      this.getEndpointPort(endpoint);\r\n    } catch (ex) {\r\n      return { result: false, error: '' + ex };\r\n    }\r\n\r\n    return { result: true };\r\n  };\r\n\r\n  getEndpointPort = (endpoint: ILinkPortEndpoint): PortState => {\r\n    return this.rootStore.nodesStore\r\n      .getNodeOrThrowException(endpoint.nodeId)\r\n      .getPortOrThrowException(endpoint.portId);\r\n  };\r\n\r\n  areEndpointsConnected = (\r\n    source: ILinkPortEndpoint,\r\n    target: ILinkPortEndpoint\r\n  ): boolean => {\r\n    return !!this.getLinkForEndpointsIfExists(source, target);\r\n  };\r\n\r\n  getLinkForEndpointsIfExists(\r\n    source: ILinkPortEndpoint,\r\n    target: ILinkPortEndpoint\r\n  ): LinkState | undefined {\r\n    if (this._nodesLinksCollection[source.nodeId]) {\r\n      return this._nodesLinksCollection[source.nodeId].find(\r\n        (l) =>\r\n          (linkPortEndpointsEquals(l.source, source) &&\r\n            linkPortEndpointsEquals(l.target, target)) ||\r\n          (linkPortEndpointsEquals(l.target, source) &&\r\n            linkPortEndpointsEquals(l.source, target))\r\n      );\r\n    }\r\n  }\r\n\r\n  private _addLinkToNodeLinksCollection(link: LinkState, nodeId: string) {\r\n    if (!this._nodesLinksCollection[nodeId])\r\n      this._nodesLinksCollection[nodeId] = [];\r\n    this._nodesLinksCollection[nodeId].push(link);\r\n  }\r\n\r\n  private _removeLinkFromNodeLinksCollection(link: LinkState, nodeId: string) {\r\n    let collection = this._nodesLinksCollection[nodeId];\r\n    if (collection) {\r\n      collection = collection.filter((l) => l.id === link.id);\r\n      if (collection.length > 0) {\r\n        this._nodesLinksCollection[nodeId] = collection;\r\n      } else {\r\n        delete this._nodesLinksCollection[nodeId];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { INodeVisualComponentProps } from '../states/nodesSettings';\r\nimport { useRootStore } from '../hooks/useRootStore';\r\nimport { PortsSettings } from '../states/portsSettings';\r\nimport { IComponentDefinition, PortState } from '../states';\r\nimport { Dictionary, RelativePosition } from '..';\r\n\r\nexport interface INodeDefaultSettings {\r\n  style: React.CSSProperties;\r\n}\r\n\r\nexport const NodeDefault: React.FC<\r\n  INodeVisualComponentProps<INodeDefaultSettings>\r\n> = ({ entity, settings, draggableRef }) => {\r\n  const { portsSettings } = useRootStore();\r\n\r\n  return (\r\n    <div\r\n      ref={draggableRef}\r\n      className='react_fast_diagram_Node_Default'\r\n      style={settings?.style}\r\n    >\r\n      <span>{entity.id}</span>\r\n\r\n      {generatePortsContainer(portsSettings, entity.ports, 'left', 'left')}\r\n      {generatePortsContainer(portsSettings, entity.ports, 'top', 'top')}\r\n      {generatePortsContainer(portsSettings, entity.ports, 'right', 'right')}\r\n      {generatePortsContainer(portsSettings, entity.ports, 'bottom', 'bottom')}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport function generatePortsContainer(\r\n  portsSettings: PortsSettings,\r\n  ports: Dictionary<PortState>,\r\n  portsType: string,\r\n  position: RelativePosition\r\n) {\r\n  const portsToShow = Object.values(ports).filter(\r\n    (port) => port.type === portsType\r\n  );\r\n  const portsContainer = portsSettings.portsContainerVisualComponents.getComponent(\r\n    position === 'left' || position === 'right' ? 'vertical' : 'horizontal'\r\n  );\r\n\r\n  return (\r\n    portsToShow && (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: position === 'left' ? 0 : undefined,\r\n          top:\r\n            position === 'left' || position === 'right' || position === 'top'\r\n              ? 0\r\n              : undefined,\r\n          right: position === 'right' ? 0 : undefined,\r\n          bottom: position === 'bottom' ? 0 : undefined,\r\n          height:\r\n            position === 'left' || position === 'right' ? '100%' : undefined,\r\n          width:\r\n            position === 'top' || position === 'bottom' ? '100%' : undefined,\r\n        }}\r\n      >\r\n        <portsContainer.component\r\n          entity={portsToShow}\r\n          settings={portsContainer.settings}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport function createNodeDefault(\r\n  settings?: INodeDefaultSettings\r\n): IComponentDefinition<\r\n  INodeVisualComponentProps<INodeDefaultSettings>,\r\n  INodeDefaultSettings\r\n> {\r\n  return {\r\n    component: NodeDefault,\r\n    settings,\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { componentDefaultType, IVisualComponentProps } from '..';\r\nimport { NodeDefault } from '../components/NodeDefault';\r\nimport { NodeState } from './nodeState';\r\nimport {\r\n  IVisualComponentsObject,\r\n  VisualComponents,\r\n} from './visualComponents';\r\n\r\nexport class NodesSettings {\r\n  visualComponents: VisualComponents<\r\n    NodeState,\r\n    INodeVisualComponentProps\r\n  > = new VisualComponents<NodeState, INodeVisualComponentProps>({\r\n    [componentDefaultType]: NodeDefault,\r\n  });\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson = (obj?: INodesSettings) => {\r\n    this.visualComponents.fromJson(obj);\r\n  };\r\n}\r\n\r\nexport interface INodeVisualComponentProps<TSettings extends {} = {}>\r\n  extends IVisualComponentProps<NodeState, TSettings> {\r\n  draggableRef: React.RefObject<any>;\r\n}\r\n\r\nexport interface INodesSettings\r\n  extends IVisualComponentsObject<INodeVisualComponentProps> {}\r\n","import { Point } from '../types/common';\r\nimport { v4 } from 'uuid';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { HtmlElementRefState } from './htmlElementRefState';\r\nimport { componentDefaultType, NodeState, RootStore } from '.';\r\n\r\nexport class PortState {\r\n  id: string;\r\n  nodeId: string;\r\n  label?: string;\r\n  type: string;\r\n  ref: HtmlElementRefState = new HtmlElementRefState(null);\r\n  dragging: boolean = false;\r\n  hovered: boolean = false;\r\n  validForConnection: boolean = true;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore, id: string, nodeId : string, state?: IPortStateWithoutIds) {\r\n    this.id = id;\r\n    this.nodeId = nodeId;\r\n    this.importState(state);\r\n    \r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  importState = (state?: IPortStateWithoutIds) => {\r\n    this.type = state?.type ?? componentDefaultType;\r\n    this.label = state?.label ?? '';\r\n  }\r\n\r\n  hover = () => {\r\n    this.hovered = true;\r\n  }\r\n\r\n  stopHover = () => {\r\n    this.hovered = false;\r\n  }\r\n\r\n  drag = () => {\r\n    this.dragging = true;\r\n  }\r\n\r\n  stopDrag = () => {\r\n    this.dragging = false;\r\n  }\r\n\r\n  get node() : NodeState {\r\n    return this.rootStore.nodesStore.getNodeOrThrowException(this.nodeId);\r\n  }\r\n  \r\n  get offsetRelativeToNode(): Point | null {\r\n    if (this.node.ref.current) {\r\n      return this.ref.offsetRelativeToParent(this.node.ref.current);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  get realSize() : Point | null {\r\n    return this.ref.realSize;\r\n  }\r\n}\r\n\r\nexport interface IPortStateWithoutIds {\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport interface IPortStateWithIds extends IPortStateWithoutIds {\r\n  id: string;\r\n  nodeId: string;\r\n}\r\n\r\nexport interface IPortState extends IPortStateWithoutIds {\r\n  id?: string;\r\n  nodeId?: string;\r\n}\r\n\r\n","import { Dictionary, Point } from '../types/common';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { IPortState, PortState } from './portState';\r\nimport { generateTransform } from '../utils';\r\nimport { RootStore } from './rootStore';\r\nimport { HtmlElementRefState } from './htmlElementRefState';\r\nimport { componentDefaultType } from './visualComponents';\r\nimport { v4 } from 'uuid';\r\n\r\nexport class NodeState {\r\n  id: string;\r\n  offset: Point;\r\n  private _ports: Dictionary<PortState>;\r\n  ref: HtmlElementRefState;\r\n  componentType: string;\r\n  extra?: any;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore, id: string, state?: INodeStateWithoutId) {\r\n    this.rootStore = rootStore;\r\n\r\n    this.id = id;\r\n    this.ref = new HtmlElementRefState(null);\r\n    this.importState(state);\r\n\r\n    makeAutoObservable(this, {\r\n      rootStore: false,\r\n    });\r\n  }\r\n\r\n  setOffset = (newOffset: Point) => {\r\n    this.offset = newOffset;\r\n  }\r\n\r\n  importState = (newState?: INodeStateWithoutId) => {\r\n    this.offset = newState?.position ?? [0,0];\r\n    this.componentType = newState?.componentType ?? componentDefaultType;\r\n    this.extra = newState?.extra ?? null;\r\n\r\n    this._ports = {};\r\n    newState?.ports && newState.ports.forEach(this.addPort);\r\n  }\r\n\r\n  get ports() : Readonly<Dictionary<PortState>> {\r\n    return this._ports;\r\n  }\r\n\r\n  get transformString() {\r\n    return generateTransform(this.offset);\r\n  }\r\n\r\n  get componentDefinition() {\r\n    const { visualComponents } = this.rootStore.nodesSettings;\r\n    return visualComponents.getComponent(this.componentType);\r\n  }\r\n\r\n  get realSize() : Point | null {\r\n    return this.ref.realSize;\r\n  }\r\n\r\n  getPort = (portId: string) : PortState | undefined => {\r\n    if (portId && this._ports[portId]) {\r\n      return this._ports[portId];\r\n    }\r\n    else return undefined;\r\n  }\r\n\r\n  addPort = (port: IPortState) : boolean => {\r\n    if (!port || port.id && this._ports[port.id]) {\r\n      return false;\r\n    }\r\n    const newPort = new PortState(this.rootStore, port.id ?? v4(), \r\n      this.id, port);\r\n    this._ports[newPort.id] = newPort;\r\n    return true;\r\n  }\r\n\r\n  removePort = (portId: string): boolean => {\r\n    if (portId && this._ports[portId]) {\r\n      delete this._ports[portId];\r\n      this.rootStore.linksStore.removePortLinks(this.id, portId);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  getPortOrThrowException = (portId: string) : PortState => {\r\n    const port = this.getPort(portId);\r\n    if (port) return port;\r\n    else throw `Port with id '${portId}' does not exist in the node '${this.id}'`;\r\n  }\r\n}\r\n\r\nexport interface INodeStateWithoutId {\r\n  position: Point;\r\n  ports?: IPortState[];\r\n  componentType?: string;\r\n  extra?: any;\r\n}\r\n\r\nexport interface INodeStateWithId extends INodeStateWithoutId {\r\n  id: string;\r\n}\r\n\r\nexport interface INodeState extends INodeStateWithoutId {\r\n  id?: string;\r\n}","import { Dictionary } from '../types/common';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { INodeState, NodeState } from './nodeState';\r\nimport { RootStore } from './rootStore';\r\nimport { v4 } from 'uuid';\r\n\r\nexport class NodesStore {\r\n  private _nodes: Dictionary<NodeState> = {};\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  get nodes(): Readonly<Dictionary<NodeState>> {\r\n    return this._nodes;\r\n  }\r\n\r\n  importState = (newNodes?: INodeState[]) => {\r\n    this._nodes = {};\r\n    newNodes?.forEach(this.addNode);\r\n  };\r\n\r\n  addNode = (node: INodeState): boolean => {\r\n    if (!node || node.id && this._nodes[node.id]) {\r\n      return false;\r\n    }\r\n    const newNode = new NodeState(this.rootStore, node.id ?? v4(), node);\r\n    this._nodes[newNode.id] = newNode;\r\n    return true;\r\n  };\r\n\r\n  removeNode = (nodeId: string): boolean => {\r\n    if (nodeId && this._nodes[nodeId]) {\r\n      delete this._nodes[nodeId];\r\n      this.rootStore.linksStore.removeNodeLinks(nodeId);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  getNode = (nodeId: string): NodeState | undefined => {\r\n    if (nodeId && this._nodes[nodeId]) {\r\n      return this._nodes[nodeId];\r\n    } else return undefined;\r\n  };\r\n\r\n  getNodeOrThrowException = (nodeId: string): NodeState => {\r\n    const node = this.getNode(nodeId);\r\n    if (node) return node;\r\n    else throw `Node with id '${nodeId}' does not exist`;\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { PortState } from '../states';\r\nimport { usePortUserInteraction } from '../hooks/userInteractions/usePortUserInteraction';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const PortWrapper: React.FC<{ port: PortState }> = observer(\r\n  ({ port }) => {\r\n    const { userInteractionElemRef } = usePortUserInteraction(port);\r\n\r\n    let color = '#6eb7ff';\r\n    if (port.dragging) color = '#49f860';\r\n    else if (port.hovered && port.validForConnection) color = '#49f860';\r\n    else if (port.hovered && !port.validForConnection) color = '#fa4040';\r\n\r\n    return (\r\n      <div\r\n        ref={{\r\n          set current(value: HTMLDivElement) {\r\n            userInteractionElemRef.current = value;\r\n            port.ref.current = value;\r\n          },\r\n        }}\r\n        id={port.nodeId + ':' + port.id}\r\n        className='react_fast_diagram_PortWrapper'\r\n      >\r\n        <div\r\n          style={{\r\n            width: 10,\r\n            height: 10,\r\n            backgroundColor: color,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useRef } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { Point } from '../..';\r\nimport { PortState } from '../../states/portState';\r\nimport { multiplyPoint } from '../../utils';\r\nimport { useRootStore } from '../useRootStore';\r\nimport { useUserAbilityToSelectSwitcher } from './useUserAbilityToSelectSwitcher';\r\n\r\nexport const usePortUserInteraction = (\r\n  portState: PortState,\r\n  enable?: boolean\r\n): IUsePortUserInteractionResult => {\r\n  const {\r\n    linksStore: { linkCreation },\r\n    diagramState,\r\n  } = useRootStore();\r\n\r\n  const userInteractionElemRef = useRef<HTMLDivElement>(\r\n    null\r\n  ) as React.MutableRefObject<HTMLDivElement | null>;\r\n\r\n  useGesture(\r\n    {\r\n      onDrag: ({ delta }) => {\r\n        if (!portState.dragging) return;\r\n        const parentScale = diagramState.zoom;\r\n        linkCreation.target?.translateBy(multiplyPoint(delta, 1 / parentScale));\r\n      },\r\n      onDragStart: ({ event }) => {\r\n        // Important! Otherwise on touch display onPointerEnter will not work!\r\n        const portHtmlElement = event.target as Element;\r\n        portHtmlElement.releasePointerCapture(event.pointerId);\r\n\r\n        let eventOffsetRelativeToTarget;\r\n        // On the old browser these properties could be not available\r\n        if ('offsetX' in event && 'offsetY' in event) {\r\n          eventOffsetRelativeToTarget = [event.offsetX, event.offsetY] as Point;\r\n        }\r\n\r\n        if (linkCreation.startLinking(portState, eventOffsetRelativeToTarget)) {\r\n          portState.drag();\r\n        }\r\n      },\r\n      onDragEnd: () => {\r\n        portState.stopDrag();\r\n        linkCreation.stopLinking();\r\n      },\r\n      onPointerEnter: () => {\r\n        portState.hover();\r\n        linkCreation.setTargetPortCandidate(portState);\r\n      },\r\n      onPointerLeave: () => {\r\n        portState.stopHover();\r\n        linkCreation.resetTargetPortCandidate(portState);\r\n      },\r\n    },\r\n    {\r\n      domTarget: userInteractionElemRef,\r\n      eventOptions: { passive: false },\r\n      enabled: enable,\r\n    }\r\n  );\r\n\r\n  useUserAbilityToSelectSwitcher(\r\n    portState.dragging,\r\n    userInteractionElemRef.current?.ownerDocument?.body\r\n  );\r\n\r\n  return {\r\n    active: portState.dragging,\r\n    userInteractionElemRef,\r\n  };\r\n};\r\n\r\nexport interface IUsePortUserInteractionResult {\r\n  active: boolean;\r\n  userInteractionElemRef: React.MutableRefObject<HTMLDivElement | null>;\r\n}\r\n","import React from 'react';\r\nimport { PortWrapper } from './PortWrapper';\r\nimport { IPortsContainerVisualComponentProps } from '../states/portsSettings';\r\nimport { IComponentDefinition } from '../states/visualComponentState';\r\n\r\nexport interface IPortsContainerDefaultSettings {\r\n  style?: React.CSSProperties;\r\n  direction: 'horizontal' | 'vertical';\r\n  gapBetweenPorts: string;\r\n}\r\n\r\nexport const PortsContainerDefault: React.FC<\r\n  IPortsContainerVisualComponentProps<IPortsContainerDefaultSettings>\r\n> = ({ entity, settings }) => {\r\n  const finalSettings = {\r\n    ...portsContainerDefaultSettings,\r\n    ...settings,\r\n  };\r\n\r\n  let className = 'react_fast_diagram_flex_gap ';\r\n  if (finalSettings.direction === 'horizontal') {\r\n    className += 'react_fast_diagram_flex_gap_x'\r\n  }\r\n  else {\r\n    className += 'react_fast_diagram_flex_gap_y';\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={{\r\n      // @ts-ignore\r\n      '--gap': finalSettings.gapBetweenPorts\r\n    }}>\r\n      {Object.values(entity).map((port) => (\r\n        <PortWrapper key={port.id} port={port} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport function createPortsContainerDefault(\r\n  settings?: Partial<IPortsContainerDefaultSettings>\r\n): IComponentDefinition<\r\n  IPortsContainerVisualComponentProps,\r\n  IPortsContainerDefaultSettings\r\n> {\r\n  return {\r\n    component: PortsContainerDefault,\r\n    settings: {\r\n      ...portsContainerDefaultSettings,\r\n      ...settings\r\n    }\r\n  };\r\n}\r\n\r\nconst portsContainerDefaultSettings: IPortsContainerDefaultSettings = {\r\n  direction: 'horizontal',\r\n  gapBetweenPorts: '8px',\r\n};\r\n","import {\r\n  IVisualComponentsObject,\r\n  VisualComponents,\r\n} from './visualComponents';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { PortState } from './portState';\r\nimport { createPortsContainerDefault } from '../components/PortsContainerDefault';\r\nimport { IVisualComponentProps } from './visualComponentState';\r\n\r\nexport class PortsSettings {\r\n  portsContainerVisualComponents: VisualComponents<\r\n    PortState[],\r\n    IPortsContainerVisualComponentProps\r\n  > = new VisualComponents<PortState[], IPortsContainerVisualComponentProps>({\r\n    horizontal: createPortsContainerDefault({ direction: 'horizontal' }),\r\n    vertical: createPortsContainerDefault({ direction: 'vertical' }),\r\n  });\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson = (obj?: IPortsSettings) => {\r\n    this.portsContainerVisualComponents.fromJson(obj?.portsContainerComponents);\r\n  };\r\n}\r\n\r\nexport interface IPortsContainerVisualComponentProps<TSettings extends {} = {}>\r\n  extends IVisualComponentProps<PortState[], TSettings> {}\r\n\r\nexport interface IPortsSettings {\r\n  portsContainerComponents: IVisualComponentsObject<IPortsContainerVisualComponentProps>;\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport class VisualComponentState<TComponentProps> {\r\n  component: VisualComponent<TComponentProps>;\r\n  settings: object = {};\r\n\r\n  constructor(\r\n    newComponent:\r\n      | IComponentDefinition<TComponentProps>\r\n      | VisualComponent<TComponentProps>\r\n  ) {\r\n    this.fromJson(newComponent);\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson(\r\n    newComponent:\r\n      | IComponentDefinition<TComponentProps>\r\n      | VisualComponent<TComponentProps>\r\n  ) {\r\n    if ('component' in newComponent) {\r\n      this.component = observer(newComponent.component);\r\n      this.settings = newComponent.settings ?? {};\r\n    } else {\r\n      this.component = observer(newComponent);\r\n      this.settings = {};\r\n    }\r\n  }\r\n}\r\n\r\nexport interface IVisualComponentProps<TEntity, TSettings extends {} = {}> {\r\n  entity: TEntity;\r\n  settings?: TSettings;\r\n}\r\n\r\nexport type VisualComponent<\r\n  TComponentProps\r\n> = React.FunctionComponent<TComponentProps>;\r\n\r\nexport interface IComponentDefinition<\r\n  TComponentProps,\r\n  TSettings extends {} = {}\r\n> {\r\n  component: VisualComponent<TComponentProps>;\r\n  settings?: TSettings;\r\n}\r\n","import { makeAutoObservable, makeObservable, action } from 'mobx';\r\nimport {\r\n  IComponentDefinition,\r\n  VisualComponent,\r\n  VisualComponentState,\r\n} from './visualComponentState';\r\n\r\nexport class VisualComponentWithDefault<TComponentProps> {\r\n  private _innerComponent: VisualComponentState<TComponentProps>;\r\n  private _defaultComponent: VisualComponentState<TComponentProps>;\r\n\r\n  constructor(defaultComponent: IComponentDefinition<TComponentProps>) {\r\n    this._innerComponent = new VisualComponentState<TComponentProps>(\r\n      defaultComponent\r\n    );\r\n    this._defaultComponent = this._innerComponent;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get component() {\r\n    return this._innerComponent.component;\r\n  }\r\n\r\n  get settings() {\r\n    return this._innerComponent.settings;\r\n  }\r\n\r\n  fromJson(\r\n    newComponent?:\r\n      | IComponentDefinition<TComponentProps>\r\n      | VisualComponent<TComponentProps>\r\n  ) {\r\n    this._innerComponent = newComponent\r\n      ? new VisualComponentState<TComponentProps>(newComponent)\r\n      : this._defaultComponent;\r\n  }\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Point } from '../types/common';\r\nimport { createDefaultBackground } from '../components/BackgroundDefault';\r\nimport { DiagramApi, IComponentDefinition, VisualComponent } from '.';\r\nimport { createDefaultMiniControl } from '..';\r\nimport { VisualComponentWithDefault } from './visualComponentWithDefault';\r\n\r\nexport class DiagramSettings {\r\n  backgroundComponentState: VisualComponentWithDefault<IBackgroundComponentProps>;\r\n  miniControlComponentState: VisualComponentWithDefault<IMiniControlComponentProps>;\r\n  scaleInterval: Point = defaultScaleInterval;\r\n\r\n  constructor() {\r\n    this.backgroundComponentState = new VisualComponentWithDefault<IBackgroundComponentProps>(\r\n      createDefaultBackground()\r\n    );\r\n    this.miniControlComponentState = new VisualComponentWithDefault<IMiniControlComponentProps>(\r\n      createDefaultMiniControl()\r\n    );\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson(obj?: IDiagramSettings) {\r\n    this.backgroundComponentState.fromJson(obj?.backgroundComponent);\r\n    this.miniControlComponentState.fromJson(obj?.miniControlComponent);\r\n    this.scaleInterval = obj?.scaleInterval ?? defaultScaleInterval;\r\n  }\r\n}\r\n\r\nconst defaultScaleInterval: Point = [0.1, 3];\r\n\r\nexport interface IDiagramSettings {\r\n  backgroundComponent?:\r\n    | IComponentDefinition<IBackgroundComponentProps>\r\n    | VisualComponent<IBackgroundComponentProps>;\r\n  miniControlComponent?:\r\n    | IComponentDefinition<IMiniControlComponentProps>\r\n    | VisualComponent<IMiniControlComponentProps>;\r\n  scaleInterval?: Point;\r\n}\r\n\r\nexport interface IBackgroundComponentProps<TSettings = {}> {\r\n  diagramOffset: Point;\r\n  diagramZoom: number;\r\n  settings?: TSettings;\r\n}\r\n\r\nexport interface IMiniControlComponentProps<TSettings = {}> {\r\n  diagramApi: DiagramApi;\r\n  settings?: TSettings;\r\n}\r\n","import { Callbacks } from './callbacks';\r\nimport { DiagramApi } from './diagramApi';\r\nimport { DiagramSettings } from './diagramSettings';\r\nimport { DiagramState } from './diagramState';\r\nimport { LinksSettings } from './linksSettings';\r\nimport { LinksStore } from './linksStore';\r\nimport { NodesSettings } from './nodesSettings';\r\nimport { NodesStore } from './nodesStore';\r\nimport { PortsSettings } from './portsSettings';\r\n\r\nexport class RootStore {\r\n  diagramState: DiagramState;\r\n  \r\n  nodesStore: NodesStore;\r\n  linksStore: LinksStore;\r\n  \r\n  diagramSettings: DiagramSettings;\r\n  nodesSettings: NodesSettings;\r\n  portsSettings: PortsSettings;\r\n  linksSettings: LinksSettings;\r\n  \r\n  diagramApi: DiagramApi;\r\n  callbacks: Callbacks;\r\n\r\n  constructor() {\r\n    this.diagramState = new DiagramState(this);\r\n\r\n    this.nodesStore = new NodesStore(this);\r\n    this.linksStore = new LinksStore(this);\r\n\r\n    this.diagramSettings = new DiagramSettings();\r\n    this.nodesSettings = new NodesSettings();\r\n    this.linksSettings = new LinksSettings();\r\n    this.portsSettings = new PortsSettings();\r\n\r\n    this.diagramApi = new DiagramApi(this);\r\n    this.callbacks = new Callbacks(this);\r\n  }\r\n}\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport { InnerDiagram } from './DiagramInner';\r\nimport '../Diagram.css';\r\nimport { RootStore } from '../states/rootStore';\r\nimport { DiagramApi, ISettings } from '../states/diagramApi';\r\nimport { INodeState } from '../states/nodeState';\r\nimport { ILinkState } from '../states/linkState';\r\n\r\nimport '../Diagram.css';\r\n\r\nexport const RootStoreContext = React.createContext<RootStore | null>(null);\r\n\r\nexport const Diagram: React.FC<IDiagramProps> = (props) => {\r\n  const rootStore = useMemo(() => {\r\n    const store = new RootStore();\r\n    props.settings && store.diagramApi.reinitSettings(props.settings);\r\n    store.diagramApi.reinitState(\r\n      props.initState?.nodes ?? [],\r\n      props.initState?.links ?? []\r\n    );\r\n    return store;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.apiRef) {\r\n      props.apiRef.current = rootStore.diagramApi;\r\n    }\r\n  }, [rootStore, props.apiRef]);\r\n\r\n  return (\r\n    <RootStoreContext.Provider value={rootStore}>\r\n      <InnerDiagram />\r\n    </RootStoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport interface IDiagramProps {\r\n  settings?: ISettings;\r\n  initState?: IDiagramInitState;\r\n  apiRef?: React.MutableRefObject<DiagramApi | null>;\r\n}\r\n\r\nexport interface IDiagramInitState {\r\n  nodes: INodeState[];\r\n  links: ILinkState[];\r\n}\r\n\r\nDiagram.displayName = 'Diagram';\r\n","import { useContext } from \"react\";\r\nimport { RootStoreContext } from \"../components/Diagram\";\r\nimport { RootStore } from \"../states/rootStore\";\r\n\r\nexport const useRootStore = () => useContext(RootStoreContext) as RootStore;","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useRootStore } from '../hooks/useRootStore';\r\n\r\nexport const BackgroundWrapper = observer(() => {\r\n  const { diagramSettings, diagramState } = useRootStore();\r\n\r\n  return (\r\n    <div className='react_fast_diagram_BackgroundWrapper'>\r\n      <diagramSettings.backgroundComponentState.component\r\n        diagramOffset={diagramState.offset}\r\n        diagramZoom={diagramState.zoom}\r\n        settings={diagramSettings.backgroundComponentState.settings}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport {\r\n  CornerPosition,\r\n  IComponentDefinition,\r\n  IMiniControlComponentProps,\r\n} from '..';\r\n\r\nconst MiniControlDefault: React.FC<\r\n  IMiniControlComponentProps<IMiniControlDefaultSettings>\r\n> = ({ diagramApi, settings }) => {\r\n  settings = settings ?? defaultSettings;\r\n\r\n  return (\r\n    <div\r\n      className='react_fast_diagram_Minicontrol_Default'\r\n      style={{\r\n        ...getOffsetStyles(settings),\r\n        ...settings?.containerStyle,\r\n      }}\r\n    >\r\n      {settings.buttons.zoomIn && (\r\n        <MiniControlButton\r\n          size={settings.buttonsSize}\r\n          onClick={diagramApi.zoomIn}\r\n          children='+'\r\n        />\r\n      )}\r\n      {settings.buttons.zoomOut && (\r\n        <MiniControlButton\r\n          size={settings.buttonsSize}\r\n          onClick={diagramApi.zoomOut}\r\n          children='-'\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getOffsetStyles(settings: IMiniControlDefaultSettings) {\r\n  return {\r\n    top:\r\n      settings.position == 'left-top' || settings.position == 'right-top'\r\n        ? settings.parentOffset\r\n        : undefined,\r\n    right:\r\n      settings.position == 'right-bottom' || settings.position == 'right-top'\r\n        ? settings.parentOffset\r\n        : undefined,\r\n    bottom:\r\n      settings.position == 'left-bottom' || settings.position == 'right-bottom'\r\n        ? settings.parentOffset\r\n        : undefined,\r\n    left:\r\n      settings.position == 'left-top' || settings.position == 'left-bottom'\r\n        ? settings.parentOffset\r\n        : undefined,\r\n  };\r\n}\r\n\r\nconst MiniControlButton: React.FC<{ size: number; onClick: () => any }> = (\r\n  props\r\n) => (\r\n  <div\r\n    onClick={props.onClick}\r\n    className='react_fast_diagram_Minicontrol_Default_Btn'\r\n    style={{\r\n      width: props.size + 'px',\r\n      height: props.size + 'px',\r\n    }}\r\n  >\r\n    <span>{props.children}</span>\r\n  </div>\r\n);\r\n\r\nexport const createDefaultMiniControl = (\r\n  settings?: Partial<IMiniControlDefaultSettings>\r\n): IComponentDefinition<\r\n  IMiniControlComponentProps,\r\n  IMiniControlDefaultSettings\r\n> => {\r\n  const finalSettings = {\r\n    ...defaultSettings,\r\n    ...(settings ? settings : {}),\r\n  };\r\n\r\n  return {\r\n    component: MiniControlDefault,\r\n    settings: finalSettings,\r\n  };\r\n};\r\n\r\nconst defaultSettings: IMiniControlDefaultSettings = {\r\n  position: 'left-bottom',\r\n  containerStyle: {},\r\n  buttonsSize: 30,\r\n  buttons: {\r\n    zoomIn: true,\r\n    zoomOut: true,\r\n  },\r\n  parentOffset: 20,\r\n};\r\n\r\nexport interface IMiniControlDefaultSettings {\r\n  position: CornerPosition;\r\n  containerStyle: React.CSSProperties;\r\n  buttons: ButtonsValue<boolean>;\r\n  buttonsSize: number;\r\n  parentOffset: number;\r\n}\r\n\r\ninterface ButtonsValue<TValue> {\r\n  zoomIn?: TValue;\r\n  zoomOut?: TValue;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Tune } from '@material-ui/icons';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Box, Button, TextField, Typography } from '@material-ui/core';\r\nimport { IDiagramInitState, ILinkState, INodeState } from '@react-easy-diagram/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '-8px 0',\r\n    '& > *': {\r\n      margin: '8px 0'\r\n    }\r\n  },\r\n  visibilityBtn: {\r\n    borderRadius: '25px',\r\n    minWidth: '24px',\r\n    padding: '8px 8px',\r\n    backgroundColor: 'white',\r\n  },\r\n  header: {\r\n    marginBottom: '15px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '0 -14px',\r\n    '& > *': {\r\n      margin: '0 14px'\r\n    }\r\n  },\r\n}));\r\n\r\nconst generateLargeDiagram = (colNum: number, rowNum: number): IDiagramInitState => {\r\n  const nodes : INodeState[] = [];\r\n  const links : ILinkState[] = [];\r\n  const getNodeId = (i: number,j: number) => `node_${i}_${j}`;\r\n\r\n  for (let i = 0; i < colNum; i++) {\r\n    for (let j = 0; j < rowNum; j++) {\r\n      nodes.push({\r\n        id: getNodeId(i,j),\r\n        position: [i * 120, j * 120 ],\r\n        ports: [\r\n          {id: 'left', type: 'left'},\r\n          {id: 'top', type: 'top'},\r\n          {id: 'right', type: 'right'},\r\n          {id: 'bottom', type: 'bottom'},\r\n        ]\r\n      });\r\n      if (i - 1 >= 0) {\r\n        links.push({\r\n          source: {\r\n            nodeId: getNodeId(i - 1,j),\r\n            portId: 'right'\r\n          },\r\n          target: {\r\n            nodeId: getNodeId(i,j),\r\n            portId: 'left'\r\n          }\r\n        });\r\n      }\r\n      if (j - 1 >= 0) {\r\n        links.push({\r\n          source: {\r\n            nodeId: getNodeId(i,j - 1),\r\n            portId: 'bottom'\r\n          },\r\n          target: {\r\n            nodeId: getNodeId(i,j),\r\n            portId: 'top'\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return {nodes,links};\r\n};\r\n\r\nexport interface ControlPanelProps{\r\n  reinitState?(nodes: INodeState[], links: ILinkState[]): void;\r\n}\r\n\r\nexport const ControlPanel = (props: ControlPanelProps) => {\r\n  const classes = useStyles();\r\n\r\n  const [row, setRow] = useState(10);\r\n  const [col, setCol] = useState(10);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (props.reinitState) {\r\n      const newState = generateLargeDiagram(row, col);\r\n      props.reinitState(newState.nodes, newState.links);\r\n    }\r\n  };\r\n\r\n  if (visible) {\r\n    return (\r\n      <Box padding={3} clone>\r\n        <Card>\r\n          <div className={classes.header}>\r\n            <Button\r\n              className={classes.visibilityBtn}\r\n              variant='outlined'\r\n              aria-label='control-panel'\r\n              onClick={() => setVisible(false)}\r\n            >\r\n              <Tune />\r\n            </Button>\r\n            <Typography variant='h5'>Control Panel</Typography>\r\n          </div>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            autoComplete='off'\r\n            onSubmit={onFormSubmit}\r\n          >\r\n            <TextField\r\n              id='rows'\r\n              value={row}\r\n              type='number'\r\n              label='Rows'\r\n              variant='outlined'\r\n              onChange={(e) => setRow(parseInt(e.target.value))}\r\n            />\r\n            <TextField\r\n              id='columns'\r\n              value={col}\r\n              type='number'\r\n              label='Columns'\r\n              variant='outlined'\r\n              onChange={(e) => setCol(parseInt(e.target.value))}\r\n            />\r\n            <Button variant='contained' type='submit'>\r\n              Generate new Diagram\r\n            </Button>\r\n          </form>\r\n        </Card>\r\n      </Box>\r\n    );\r\n  } else {\r\n    return (\r\n      <Button\r\n        variant='outlined'\r\n        className={classes.visibilityBtn}\r\n        aria-label='control-panel'\r\n        onClick={() => setVisible(true)}\r\n      >\r\n        <Tune />\r\n      </Button>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  createCurvedLinkPathConstructor,\r\n  createDefaultMiniControl,\r\n  createLinkDefault,\r\n  IDiagramInitState,\r\n  useDiagram,\r\n} from '@react-easy-diagram/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\nimport { ControlPanel } from './ControlPanel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  diagram: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n  },\r\n  controlPanel: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n  },\r\n}));\r\n\r\nexport const App = () => {\r\n  const classes = useStyles();\r\n  const { Diagram, apiRef } = useDiagram(initState, {\r\n    links: {\r\n      components: {\r\n        default: createLinkDefault(),\r\n        attention: createLinkDefault({ color: 'red' }),\r\n      },\r\n      pathConstructor: createCurvedLinkPathConstructor(),\r\n    },\r\n    diagram: {\r\n      miniControlComponent: createDefaultMiniControl({\r\n        buttonsSize: 30,\r\n        position: 'left-bottom',\r\n      }),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box className={classes.diagram}>\r\n      <Diagram />\r\n      <Box className={classes.controlPanel}>\r\n        <ControlPanel reinitState={apiRef.current?.reinitState} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst initState: IDiagramInitState = {\r\n  nodes: [\r\n    {\r\n      id: 'Node 1',\r\n      position: [300, 300],\r\n      ports: [\r\n        { id: 'output_1', type: 'bottom' },\r\n      ],\r\n    },\r\n    {\r\n      id: 'Node 2',\r\n      position: [520, 400],\r\n      ports: [\r\n        { id: 'input_1', type: 'top' },\r\n        { id: 'input_2', type: 'top' },\r\n        { id: 'output_1', type: 'right' },\r\n        { id: 'output_2', type: 'right' },\r\n        { id: 'output_3', type: 'right' },\r\n      ],\r\n    },\r\n    {\r\n      id: 'Node 3',\r\n      position: [520, 200],\r\n      ports: [\r\n        { id: 'input_1', type: 'top' },\r\n        { id: 'output_1', type: 'bottom' },\r\n        { id: 'output_2', type: 'bottom' },\r\n      ],\r\n    },\r\n  ],\r\n  links: [\r\n    {\r\n      source: {\r\n        nodeId: 'Node 1',\r\n        portId: 'output_1',\r\n      },\r\n      target: {\r\n        nodeId: 'Node 2',\r\n        portId: 'input_1',\r\n      },\r\n      componentType: 'attention',\r\n    },\r\n  ],\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport {\r\n  Diagram,\r\n  IDiagramInitState\r\n} from '../components/Diagram';\r\nimport { DiagramApi, ISettings } from '../states/diagramApi';\r\nimport { useNotifyRef } from './useNotifyRef';\r\n\r\nexport const useDiagram = (\r\n  initState?: IDiagramInitState,\r\n  settings?: ISettings\r\n) => {\r\n  const apiRef = useNotifyRef<DiagramApi | null>(null);\r\n\r\n  const obj = useMemo(\r\n    () => ({\r\n      Diagram: () => (\r\n        <Diagram apiRef={apiRef} initState={initState} settings={settings} />\r\n      ),\r\n      apiRef,\r\n    }),\r\n    []\r\n  );\r\n\r\n  return obj;\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}