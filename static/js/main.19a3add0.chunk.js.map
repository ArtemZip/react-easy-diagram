{"version":3,"sources":["../../src/DiagramState.ts","../../../src/components/Link.tsx","../../../src/components/LinksLayer.tsx","../../src/hooks.ts","../../../src/components/Node.tsx","../../src/utils.ts","../../../src/components/NodesLayer.tsx","../../../src/components/DiagramInner.tsx","../../../src/components/Diagram.tsx","ControlPanel.tsx","App.tsx","index.tsx"],"names":["key","default","useStyles","makeStyles","form","display","flexDirection","gap","visibilityBtn","borderRadius","minWidth","padding","backgroundColor","header","marginBottom","alignItems","ControlPanel","props","classes","useState","row","setRow","col","setCol","visible","setVisible","Box","clone","Card","className","Button","variant","aria-label","onClick","Tune","Typography","noValidate","autoComplete","onSubmit","e","reinitState","colNum","rowNum","nodes","links","getNodeId","i","j","push","id","position","x","y","from","nodeId","to","generateLargeDiagram","preventDefault","stopPropagation","TextField","value","type","label","onChange","parseInt","target","diagram","height","width","backgroundImage","controlPanel","top","left","App","diagramRef","ref","initialState","initDiagram","current","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGM,EAAgB,mBAET,EAAgB,YAAe,CAC1C,IAAQ,EAAa,YACnB,QAAO,KAGE,EAAkB,YAA8B,CACzDA,IAAM,EAAa,QACnBC,QAAO,SAAC,GAAO,MAAC,CAAE,GAAI,EAAI,SAAU,CAAE,EAAG,EAAG,EAA7B,OAGN,EAAgB,YAAe,CACxC,IAAM,EAAa,YACrB,QAAS,KAGE,EAAkB,YAA8B,CACzD,IAAM,EAAa,QACnB,QAAO,SAAC,GAAO,MAAC,CAAE,GAAH,MAGN,EAAwB,YAAY,CAC7CD,IAAM,EAAa,oBACnBC,QAAO,CACP,EAAG,EACH,EAAG,KAYM,EAAoB,YAAa,CAC5C,IAAQ,EAAa,gBACrB,QAAS,IC5BX,SAAS,EAAmB,G,MACpB,EAAmB,QAAX,EAAG,EAAK,WAAG,eAAE,QACzB,OAAE,EACK,CACL,EAAG,EAAK,SAAS,GAAK,EAAS,YAAc,EAAS,YAAc,EAAI,GACxE,EAAG,EAAK,SAAS,GAAK,EAAS,aAAe,EAAS,aAAe,EAAI,IAIrE,EAAK,SAIT,IAiBD,EAAyB,SAAC,GAC5B,OAAG,GAGD,WAAY,EACP,EAAO,OAHP,IAUE,EAAW,IAAM,MA7BW,SAAC,GAClC,MAAkB,YAAe,EAAgB,EAAM,KAAtD,EAAI,KAEJ,GAFa,KAED,YAAe,EAAgB,EAAuB,EAAK,QAA/D,IACR,EAAU,YAAe,EAAgB,EAAuB,EAAK,MAA/D,GAEP,EAAY,EAAmB,GAC/B,EAAU,EAAmB,GAC7B,EAAS,KAAK,EAAU,EAAC,IAAI,EAAU,EAAC,KAAK,EAAQ,EAAC,IAAI,EAAQ,EAExE,OACE,2BACE,0BAAM,EAAG,EAAQ,OAAO,YAAY,YAAY,IAAI,KAAK,aCvBlD,EAAsB,IAAM,MAZZ,WACpB,MAAS,YAAe,GAAnB,GAEZ,OACE,6BACG,EAAM,KAAI,SAAC,GAAO,OACjB,kBAAC,EAAQ,CAAC,IAAK,EAAI,GADF,W,QCLZ,EAAe,WAGlB,IAAF,EAAmB,mBAAS,GAAxB,GAAF,KAAa,MACd,EAAO,oBAAS,WAAM,MAAC,CACtB,MAAC,KACD,OAAE,CACE,cACI,OAAH,EAAI,OAEL,YAAI,GACG,EAAI,QACJ,IACX,EAAI,MAAQ,EACZ,GAAY,SAAC,GAAM,qBAVjB,GAgBV,OAAO,EAAI,Q,+MCgDA,EAAW,IAAM,MA9DW,SAAC,GAClC,MAAkB,YAAe,EAAgB,EAAM,KAAtD,EAAI,KAAE,EAAO,KACd,EAAU,IAEV,IAAe,EAAK,IAC1B,qBAAU,WACR,GAAQ,SAAC,GAAa,cACjB,GAAQ,CACX,IAFoB,SAIrB,CAAC,EAAS,IAEX,IAAI,EAAW,aAAkB,SAAC,G,IAAE,EAAQ,WAAO,kBACnD,IAAM,EAAa,EAAS,YAAY,GAAmB,SAC3D,MAA6B,kBAAf,EAA0B,EAAa,MAGrD,OACA,kBAAC,gBAAa,CACZ,QAAS,SAAC,GAAM,4BAChB,OAAQ,SAAC,GAAM,4BACX,OAAI,SAAC,EAAG,GACV,EAAE,kBACF,IAAM,EAAQ,IACR,GAAE,SAAC,GAAa,cACjB,GAAQ,CACX,UCWiB,EDXI,CACnB,EAAG,EAAS,SAAS,EAAI,EAAE,OAAS,EACpC,EAAG,EAAS,SAAS,EAAI,EAAE,OAAS,GCSH,CAC3C,EAAG,KAAK,MAAM,EAAM,GACpB,EAAG,KAAK,MAAM,EAAM,OAFI,IAAC,ODJrB,yBACM,KAAK,GACL,IAAC,EACD,MAAG,CACC,MAAC,QACD,OAAE,QACR,gBAAiB,QACjB,OAAQ,uBACF,SAAI,WACJ,IAAD,EAAK,SAAS,EACb,OAAK,SAAS,EACpB,QAAS,OACT,cAAe,SACf,WAAY,WAGd,yBACE,MAAO,CACL,UAAW,SACX,OAAQ,SAGT,EAAM,SEjDJ,EAAsB,IAAM,MAZZ,WACpB,MAAS,YAAe,GAAnB,GAEZ,OACE,6BACG,EAAM,KAAI,SAAC,GAAO,OACjB,kBAAC,EAAQ,CAAC,IAAK,EAAI,GADF,WCQZ,G,MAAe,sBAAW,SAAC,EAAQ,GACxC,MAA4B,YAAe,GAA1C,EAAS,KAAE,EAAY,KACxB,EAAoB,YAAe,GAAlC,EAAK,KAAE,EAAQ,KAChB,EAAoB,iBAAuB,MAE3C,EAAU,aAAkB,SAAC,G,IAAE,EAAG,MAAO,gBAAC,GACxC,EAAF,EAAgB,EAAQ,IAAK,GAC3B,EAAF,GAAe,SAAC,GAAM,SAAE,OAAO,CAAC,EAAV,YAGtB,EAAc,aAClB,SAAC,G,IAAE,EAAQ,WAAE,EAAY,eAAO,gBAAC,GACzB,EAAO,EAAS,KAAI,YAChB,IAAF,EAAU,EAAE,YAAY,GAAe,SACzC,MAAM,QAAQ,IAChB,EAAQ,SAAQ,SAAC,GAAO,SAAE,MAAM,EAAR,OAG1B,IAAM,EAAW,EAAE,YAAY,GAAe,SAC1C,MAAM,QAAQ,IAChB,EAAS,SAAQ,SAAC,GAAO,SAAE,MAAM,EAAR,OAG3B,EAAgB,EAAG,WAKvB,OAAF,sBAAE,CACA,GACA,WAAkB,MAAC,CACX,QAAC,EACD,YAAK,KAEb,IAGA,IAoBI,EFzEyB,SAAC,EAAkB,GAChD,IAAI,EAAY,SAAS,EAAK,IAGhC,MAFsB,aAAa,EAAU,EAAC,OAAO,EAAU,EAC7C,OAAsB,EEsEtB,CAAkB,EAAW,GAE/C,OACE,kBAAC,gBAAa,CAAC,OAvBF,SAAC,EAAmB,GAC7B,GAAS,SAAC,GAAY,MAAC,CACjB,EAAL,EAAQ,EAAI,EAAE,OACT,EAAL,EAAQ,EAAI,EAAE,aAqBjB,yBACE,IAAK,EACL,QAnBU,SAAC,GACf,IAAM,EFrDkC,SAC1C,EACA,EACA,EACA,GAGE,IAAI,EAAa,OAAN,QAAM,IAAN,OAAM,EAAN,EAAQ,wBACnB,IAAG,EAAM,OAAO,KAGhB,IAAI,EAAY,EAAE,MAAQ,EAAK,KAC3B,EAAY,EAAE,MAAQ,EAAK,IAE7B,EAAS,GACT,EAAE,OAAS,IACb,EAAS,EAAI,GASf,IAAM,GAAM,EAAY,EAAU,IAAM,EAAS,GAC3C,GAAM,EAAY,EAAU,IAAM,EAAS,GAE/C,MAAK,CACL,MAAO,EAAQ,EACf,UAAW,CAET,EAAG,EAAU,EAAI,EACjB,EAAG,EAAU,EAAI,IEoBI,CACrB,EAAkB,QAClB,EACA,EACA,GAEE,IACF,EAAa,EAAe,WAC5B,EAAS,EAAe,SAWtB,UAAU,mCAEV,yBACE,UAAU,6BACV,MAAO,CACL,UAAW,IAGb,kBAAC,EAAmB,MACpB,kBAAC,EAAmB,aAO9B,EAAa,YAAc,e,4NCzEd,EAAkB,SAC7B,EACA,GAEE,GAAE,EAAa,CACX,EAAQ,MAAM,SAAQ,SAAC,GACzB,EAAK,IAAI,EAAgB,EAAK,IAAK,MAErC,EAAK,IACH,EACA,EAAY,MAAM,KAAI,SAAC,GAAS,gBAGlC,IAAM,EAAqB,GAC3B,EAAY,MAAM,SAAQ,SAAC,G,MACrB,EAAY,QAAV,EAAG,EAAK,UAAE,QAAI,cAChB,EAAK,KAAO,IACd,EAAI,OAAO,GAAI,CAAE,GAAE,KAErB,EAAS,KAAK,GACd,EAAK,IAAI,EAAgB,GAAK,MAGhC,EAAK,IAAI,EAAc,KASd,EAAU,sBAAW,SAAC,EAAqB,GAItD,OACE,kBAAC,IAAU,CAAC,gBAJiB,SAAC,GAC9B,SAAgB,EAAM,EAAM,gBAI1B,kBAAC,EAAY,CAAC,IAAK,QAKzB,EAAQ,YAAc,U,0EC7DhBC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,IAAK,OAEPC,cAAe,CACbC,aAAc,OACdC,SAAU,OACVC,QAAS,UACTC,gBAAiB,SAEnBC,OAAQ,CACNC,aAAc,OACdT,QAAS,OACTU,WAAY,SACZR,IAAK,YA6CIS,EAAe,SAACC,GAC3B,IAAMC,EAAUhB,IADwC,EAGlCiB,mBAAS,IAHyB,mBAGjDC,EAHiD,KAG5CC,EAH4C,OAIlCF,mBAAS,IAJyB,mBAIjDG,EAJiD,KAI5CC,EAJ4C,OAM1BJ,oBAAS,GANiB,mBAMjDK,EANiD,KAMxCC,EANwC,KAgBxD,OAAID,EAEA,cAACE,EAAA,EAAD,CAAKf,QAAS,EAAGgB,OAAK,EAAtB,SACE,eAACC,EAAA,EAAD,WACE,sBAAKC,UAAWX,EAAQL,OAAxB,UACE,cAACiB,EAAA,EAAD,CACED,UAAWX,EAAQV,cACnBuB,QAAQ,WACRC,aAAW,gBACXC,QAAS,kBAAMR,GAAW,IAJ5B,SAME,cAACS,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAYJ,QAAQ,KAApB,8BAEF,uBACEF,UAAWX,EAAQd,KACnBgC,YAAU,EACVC,aAAa,MACbC,SA3BW,SAACC,GAChBtB,EAAMuB,aACRvB,EAAMuB,YAnDiB,SAACC,EAAgBC,GAK5C,IAJA,IAAMC,EAAQ,GACRC,EAAQ,GACRC,EAAY,SAACC,EAAUC,GAAX,qBAAiCD,EAAjC,YAAsCC,IAE/CD,EAAI,EAAGA,EAAIL,EAAQK,IAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAQK,IAC1BJ,EAAMK,KAAK,CACTC,GAAIJ,EAAUC,EAAEC,GAChBG,SAAU,CAAEC,EAAO,IAAJL,EAASM,EAAO,IAAJL,KAEzBD,EAAI,GAAK,GACXF,EAAMI,KAAK,CACTK,KAAM,CACJC,OAAQT,EAAUC,EAAI,EAAEC,IAE1BQ,GAAI,CACFD,OAAQT,EAAUC,EAAEC,MAItBA,EAAI,GAAK,GACXH,EAAMI,KAAK,CACTK,KAAM,CACJC,OAAQT,EAAUC,EAAEC,EAAI,IAE1BQ,GAAI,CACFD,OAAQT,EAAUC,EAAEC,MAO9B,MAAO,CAACJ,QAAMC,SAiBQY,CAAqBpC,EAAKE,IAE9CiB,EAAEkB,iBACFlB,EAAEmB,mBAkBI,UAME,cAACC,EAAA,EAAD,CACEV,GAAG,OACHW,MAAOxC,EACPyC,KAAK,SACLC,MAAM,OACN/B,QAAQ,WACRgC,SAAU,SAACxB,GAAD,OAAOlB,EAAO2C,SAASzB,EAAE0B,OAAOL,WAE5C,cAACD,EAAA,EAAD,CACEV,GAAG,UACHW,MAAOtC,EACPuC,KAAK,SACLC,MAAM,UACN/B,QAAQ,WACRgC,SAAU,SAACxB,GAAD,OAAOhB,EAAOyC,SAASzB,EAAE0B,OAAOL,WAE5C,cAAC9B,EAAA,EAAD,CAAQC,QAAQ,YAAY8B,KAAK,SAAjC,0CASN,cAAC/B,EAAA,EAAD,CACEC,QAAQ,WACRF,UAAWX,EAAQV,cACnBwB,aAAW,gBACXC,QAAS,kBAAMR,GAAW,IAJ5B,SAME,cAACS,EAAA,EAAD,OC7HFhC,EAAYC,aAAW,iBAAO,CAClC+D,QAAS,CACPC,OAAQ,QACRC,MAAO,QACPxD,gBAAiB,UACjByD,gBACE,4qDAEJC,aAAc,CACZpB,SAAU,WACVqB,IAAK,OACLC,KAAM,YAIGC,EAAM,WAAO,IAAD,EACjBvD,EAAUhB,IACVwE,EPzB2B,IO2BjC,OACE,eAAChD,EAAA,EAAD,CAAKG,UAAWX,EAAQgD,QAAxB,UACE,cAAC,EAAD,CAASS,IAAKD,EAAYE,aAAcC,IACxC,cAACnD,EAAA,EAAD,CAAKG,UAAWX,EAAQoD,aAAxB,SACE,cAAC,EAAD,CAAc9B,YAAW,UAAEkC,EAAWI,eAAb,aAAE,EAAoBtC,oBAMjDqC,EAAkC,CACtClC,MAAO,CACL,CACEM,GAAI,SACJC,SAAU,CACRC,EAAG,IACHC,EAAG,MAGP,CACEH,GAAI,SACJC,SAAU,CACRC,EAAG,IACHC,EAAG,MAGP,CACEH,GAAI,SACJC,SAAU,CACRC,EAAG,IACHC,EAAG,OAITR,MAAO,CACL,CACES,KAAM,CACJC,OAAQ,UAEVC,GAAI,CACFD,OAAQ,aCjEhByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.19a3add0.chunk.js","sourcesContent":["import { atom, atomFamily } from 'recoil';\r\nvar libraryPrefix = 'reactEasyDiagram';\r\nexport var nodesIdsState = atom({\r\n    key: libraryPrefix + \"_NodesIds\",\r\n    default: [],\r\n});\r\nexport var nodeWithIdState = atomFamily({\r\n    key: libraryPrefix + \"_Node\",\r\n    default: function (id) { return ({ id: id, position: { x: 0, y: 0 } }); },\r\n});\r\nexport var linksIdsState = atom({\r\n    key: libraryPrefix + \"_LinksIds\",\r\n    default: [],\r\n});\r\nexport var linkWithIdState = atomFamily({\r\n    key: libraryPrefix + \"_Link\",\r\n    default: function (id) { return ({ id: id }); },\r\n});\r\nexport var diagramTranslateState = atom({\r\n    key: libraryPrefix + \"_DiagramTranslate\",\r\n    default: {\r\n        x: 0,\r\n        y: 0,\r\n    },\r\n});\r\nexport var diagramScaleState = atom({\r\n    key: libraryPrefix + \"_DiagramScale\",\r\n    default: 1,\r\n});\r\n//# sourceMappingURL=DiagramState.js.map","import React from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { linkWithIdState, nodeWithIdState, } from '../DiagramState';\r\nfunction getConnectionPoint(node) {\r\n    var _a;\r\n    var htmlElem = (_a = node.ref) === null || _a === void 0 ? void 0 : _a.current;\r\n    if (htmlElem) {\r\n        return {\r\n            x: node.position.x + (htmlElem.clientWidth ? htmlElem.clientWidth / 2 : 0),\r\n            y: node.position.y + (htmlElem.clientHeight ? htmlElem.clientHeight / 2 : 0)\r\n        };\r\n    }\r\n    else {\r\n        return node.position;\r\n    }\r\n}\r\nexport var Link = function (props) {\r\n    var _a = useRecoilState(linkWithIdState(props.id)), link = _a[0], setLink = _a[1];\r\n    var nodeFrom = useRecoilState(nodeWithIdState(getNodeIdForLinkTarget(link.from)))[0];\r\n    var nodeTo = useRecoilState(nodeWithIdState(getNodeIdForLinkTarget(link.to)))[0];\r\n    var fromPoint = getConnectionPoint(nodeFrom);\r\n    var toPoint = getConnectionPoint(nodeTo);\r\n    var points = \"M \" + fromPoint.x + \" \" + fromPoint.y + \", \" + toPoint.x + \" \" + toPoint.y;\r\n    return (React.createElement(\"g\", null,\r\n        React.createElement(\"path\", { d: points, stroke: \"LightBlue\", strokeWidth: \"3\", fill: \"none\" })));\r\n};\r\nvar getNodeIdForLinkTarget = function (target) {\r\n    if (!target) {\r\n        return '';\r\n    }\r\n    if ('nodeId' in target) {\r\n        return target.nodeId;\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\nexport var LinkMemo = React.memo(Link);\r\n// <g>\r\n//       {/* Main line */}\r\n//       <path d={points} stroke={linkColor} strokeWidth=\"3\" fill=\"none\" />\r\n//       {/* Thick line to make selection easier */}\r\n//       <path\r\n//         d={points}\r\n//         stroke={linkColor}\r\n//         strokeWidth=\"20\"\r\n//         fill=\"none\"\r\n//         strokeLinecap=\"round\"\r\n//         strokeOpacity={isHovered || isSelected ? 0.1 : 0}\r\n//         onMouseEnter={() => onLinkMouseEnter({ config, linkId: link.id })}\r\n//         onMouseLeave={() => onLinkMouseLeave({ config, linkId: link.id })}\r\n//         onClick={(e) => {\r\n//           onLinkClick({ config, linkId: link.id })\r\n//           e.stopPropagation()\r\n//         }}\r\n//       />\r\n//     </g>\r\n//# sourceMappingURL=Link.js.map","import React from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { linksIdsState } from '../DiagramState';\r\nimport { LinkMemo } from './Link';\r\nvar LinksLayer = function () {\r\n    var links = useRecoilState(linksIdsState)[0];\r\n    return (React.createElement(\"svg\", null, links.map(function (id) { return (React.createElement(LinkMemo, { key: id, id: id })); })));\r\n};\r\nexport var LinksLayerMemorized = React.memo(LinksLayer);\r\n//# sourceMappingURL=LinksLayer.js.map","import { useState } from \"react\";\r\nexport var useDiagramRef = function () { return useNotifyRef(); };\r\nexport var useNotifyRef = function () {\r\n    var _a = useState(0), _ = _a[0], forceUpdate = _a[1];\r\n    var ref = useState(function () { return ({\r\n        value: null,\r\n        facade: {\r\n            get current() {\r\n                return ref.value;\r\n            },\r\n            set current(value) {\r\n                var last = ref.value;\r\n                if (last !== value) {\r\n                    ref.value = value;\r\n                    forceUpdate(function (i) { return i + 1; });\r\n                }\r\n            },\r\n        },\r\n    }); })[0];\r\n    return ref.facade;\r\n};\r\n//# sourceMappingURL=hooks.js.map","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport React, { useEffect } from 'react';\r\nimport { DraggableCore } from 'react-draggable';\r\nimport { useRecoilCallback, useRecoilState } from 'recoil';\r\nimport { diagramScaleState, nodeWithIdState } from '../DiagramState';\r\nimport { useNotifyRef } from '../hooks';\r\nimport { roundPoint } from '../utils';\r\nexport var Node = function (props) {\r\n    var _a = useRecoilState(nodeWithIdState(props.id)), node = _a[0], setNode = _a[1];\r\n    var nodeRef = useNotifyRef();\r\n    var nodeHasRef = !!node.ref;\r\n    useEffect(function () {\r\n        setNode(function (curValue) { return (__assign(__assign({}, curValue), { ref: nodeRef })); });\r\n    }, [nodeRef, nodeHasRef]);\r\n    var getScale = useRecoilCallback(function (_a) {\r\n        var snapshot = _a.snapshot;\r\n        return function () {\r\n            var scaleState = snapshot.getLoadable(diagramScaleState).contents;\r\n            return typeof scaleState === 'number' ? scaleState : 1;\r\n        };\r\n    });\r\n    return (React.createElement(DraggableCore, { onStart: function (e) { return e.stopPropagation(); }, onStop: function (e) { return e.stopPropagation(); }, onDrag: function (e, d) {\r\n            e.stopPropagation();\r\n            var scale = getScale();\r\n            setNode(function (curValue) { return (__assign(__assign({}, curValue), { position: roundPoint({\r\n                    x: curValue.position.x + d.deltaX / scale,\r\n                    y: curValue.position.y + d.deltaY / scale,\r\n                }) })); });\r\n        } },\r\n        React.createElement(\"div\", { id: node.id, ref: nodeRef, style: {\r\n                width: '100px',\r\n                height: '100px',\r\n                backgroundColor: 'white',\r\n                border: '2px solid WhiteSmoke',\r\n                position: 'absolute',\r\n                top: node.position.y,\r\n                left: node.position.x,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n            } },\r\n            React.createElement(\"div\", { style: {\r\n                    textAlign: 'center',\r\n                    margin: 'auto',\r\n                } }, props.id))));\r\n};\r\nexport var NodeMemo = React.memo(Node);\r\n//# sourceMappingURL=Node.js.map","export var generateTransform = function (translate, scale) {\r\n    var scalePart = \"scale(\" + scale + \")\";\r\n    var translatePart = \"translate(\" + translate.x + \"px, \" + translate.y + \"px)\";\r\n    var transform = translatePart + ' ' + scalePart;\r\n    return transform;\r\n};\r\n// See: https://stackoverflow.com/a/30039971/9142642\r\nexport var computeTransformationOnScale = function (target, e, translate, scale) {\r\n    // The upper left corner of the target stays in the same place while the picture is enlarged\r\n    var rect = target === null || target === void 0 ? void 0 : target.getBoundingClientRect();\r\n    if (!rect)\r\n        return null;\r\n    // Get mouse position related to target\r\n    var mouseXPos = e.pageX - rect.left;\r\n    var mouseYPos = e.pageY - rect.top;\r\n    var factor = 0.9;\r\n    if (e.deltaY < 0) {\r\n        factor = 1 / factor;\r\n    }\r\n    // Now consider the point under the mouse cursor. Every pixel above and to the\r\n    // left of the cursor has become *factor* larger. This displaces the point under the\r\n    // cursor by *factor* downward and to the right. Meanwhile, the cursor is in the same position.\r\n    // Note that the target might have been moved in the canvas before the zooming operation, so the\r\n    // cursor's horizontal position in the target is mouseXPos - transformation.translation.x before zooming,\r\n    // and likewise for the vertical position.\r\n    var dx = (mouseXPos - translate.x) * (factor - 1);\r\n    var dy = (mouseYPos - translate.y) * (factor - 1);\r\n    return {\r\n        scale: scale * factor,\r\n        translate: {\r\n            // Compensate for the displacement by moving the point back under the cursor\r\n            x: translate.x - dx,\r\n            y: translate.y - dy,\r\n        },\r\n    };\r\n};\r\nexport var roundPoint = function (point) { return ({\r\n    x: Math.round(point.x),\r\n    y: Math.round(point.y),\r\n}); };\r\n//# sourceMappingURL=utils.js.map","import React from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { nodesIdsState } from '../DiagramState';\r\nimport { NodeMemo } from './Node';\r\nvar NodesLayer = function () {\r\n    var nodes = useRecoilState(nodesIdsState)[0];\r\n    return (React.createElement(\"div\", null, nodes.map(function (id) { return (React.createElement(NodeMemo, { key: id, id: id })); })));\r\n};\r\nexport var NodesLayerMemorized = React.memo(NodesLayer);\r\n//# sourceMappingURL=NodesLayer.js.map","import React, { forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport { useRecoilCallback, useRecoilState } from 'recoil';\r\nimport { LinksLayerMemorized } from './LinksLayer';\r\nimport { NodesLayerMemorized } from './NodesLayer';\r\nimport { diagramScaleState, diagramTranslateState, linksIdsState, linkWithIdState, nodesIdsState, nodeWithIdState, } from '../DiagramState';\r\nimport { initializeState } from './Diagram';\r\nimport { DraggableCore } from 'react-draggable';\r\nimport { computeTransformationOnScale, generateTransform } from '../utils';\r\nimport '../Diagram.css';\r\nexport var InnerDiagram = forwardRef(function (_props, ref) {\r\n    var _a = useRecoilState(diagramTranslateState), translate = _a[0], setTranslate = _a[1];\r\n    var _b = useRecoilState(diagramScaleState), scale = _b[0], setScale = _b[1];\r\n    var movableElementRef = useRef(null);\r\n    var addNode = useRecoilCallback(function (_a) {\r\n        var set = _a.set;\r\n        return function (newNode) {\r\n            set(nodeWithIdState(newNode.id), newNode);\r\n            set(nodesIdsState, function (v) { return v.concat([newNode.id]); });\r\n        };\r\n    });\r\n    var reinitState = useRecoilCallback(function (_a) {\r\n        var snapshot = _a.snapshot, gotoSnapshot = _a.gotoSnapshot;\r\n        return function (initializer) {\r\n            gotoSnapshot(snapshot.map(function (m) {\r\n                var nodeIds = m.getLoadable(nodesIdsState).contents;\r\n                if (Array.isArray(nodeIds)) {\r\n                    nodeIds.forEach(function (id) { return m.reset(nodeWithIdState(id)); });\r\n                }\r\n                var linksIds = m.getLoadable(linksIdsState).contents;\r\n                if (Array.isArray(linksIds)) {\r\n                    linksIds.forEach(function (id) { return m.reset(linkWithIdState(id)); });\r\n                }\r\n                initializeState(m, initializer);\r\n            }));\r\n        };\r\n    });\r\n    useImperativeHandle(ref, function () { return ({\r\n        addNode: addNode,\r\n        reinitState: reinitState,\r\n    }); }, []);\r\n    var onDrag = function (_, d) {\r\n        setTranslate(function (current) { return ({\r\n            x: current.x + d.deltaX,\r\n            y: current.y + d.deltaY,\r\n        }); });\r\n    };\r\n    var onWheel = function (e) {\r\n        var transformation = computeTransformationOnScale(movableElementRef.current, e, translate, scale);\r\n        if (transformation) {\r\n            setTranslate(transformation.translate);\r\n            setScale(transformation.scale);\r\n        }\r\n    };\r\n    var transform = generateTransform(translate, scale);\r\n    return (React.createElement(DraggableCore, { onDrag: onDrag },\r\n        React.createElement(\"div\", { ref: movableElementRef, onWheel: onWheel, className: \"react_fast_diagram_DiagramInner\" },\r\n            React.createElement(\"div\", { className: \"react_fast_diagram_Movable\", style: {\r\n                    transform: transform,\r\n                } },\r\n                React.createElement(LinksLayerMemorized, null),\r\n                React.createElement(NodesLayerMemorized, null)))));\r\n});\r\nInnerDiagram.displayName = 'InnerDiagram';\r\n//# sourceMappingURL=DiagramInner.js.map","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport React, { forwardRef } from 'react';\r\nimport { RecoilRoot } from 'recoil';\r\nimport { linksIdsState, linkWithIdState, nodesIdsState, nodeWithIdState, } from '../DiagramState';\r\nimport { InnerDiagram } from './DiagramInner';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport var initializeState = function (snap, initializer) {\r\n    if (initializer) {\r\n        initializer.nodes.forEach(function (node) {\r\n            snap.set(nodeWithIdState(node.id), node);\r\n        });\r\n        snap.set(nodesIdsState, initializer.nodes.map(function (node) { return node.id; }));\r\n        var linksIds_1 = [];\r\n        initializer.links.forEach(function (link) {\r\n            var _a;\r\n            var id = (_a = link.id) !== null && _a !== void 0 ? _a : uuidv4();\r\n            if (link.id !== id) {\r\n                link = __assign(__assign({}, link), { id: id });\r\n            }\r\n            linksIds_1.push(id);\r\n            snap.set(linkWithIdState(id), link);\r\n        });\r\n        snap.set(linksIdsState, linksIds_1);\r\n    }\r\n};\r\nexport var Diagram = forwardRef(function (props, ref) {\r\n    var initializeStateWrapper = function (snap) {\r\n        return initializeState(snap, props.initialState);\r\n    };\r\n    return (React.createElement(RecoilRoot, { initializeState: initializeStateWrapper },\r\n        React.createElement(InnerDiagram, { ref: ref })));\r\n});\r\nDiagram.displayName = 'Diagram';\r\n//# sourceMappingURL=Diagram.js.map","import React, { useState } from 'react';\nimport type { DiagramApi, DiagramInitializer, NodeState } from '@react-easy-diagram/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tune } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport { Box, Button, TextField, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '7px',\n  },\n  visibilityBtn: {\n    borderRadius: '25px',\n    minWidth: '24px',\n    padding: '8px 8px',\n    backgroundColor: 'white',\n  },\n  header: {\n    marginBottom: '15px',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '14px',\n  },\n}));\n\nconst generateLargeDiagram = (colNum: number, rowNum: number): DiagramInitializer => {\n  const nodes = [];\n  const links = [];\n  const getNodeId = (i: number,j: number) => `node_${i}_${j}`;\n\n  for (let i = 0; i < colNum; i++) {\n    for (let j = 0; j < rowNum; j++) {\n      nodes.push({\n        id: getNodeId(i,j),\n        position: { x: i * 120, y: j * 120 },\n      });\n      if (i - 1 >= 0) {\n        links.push({\n          from: {\n            nodeId: getNodeId(i - 1,j)\n          },\n          to: {\n            nodeId: getNodeId(i,j)\n          }\n        });\n      }\n      if (j - 1 >= 0) {\n        links.push({\n          from: {\n            nodeId: getNodeId(i,j - 1)\n          },\n          to: {\n            nodeId: getNodeId(i,j)\n          }\n        });\n      }\n    }\n  }\n\n  return {nodes,links};\n};\n\nexport interface ControlPanelProps{\n  reinitState?(initializer: DiagramInitializer): void;\n}\n\nexport const ControlPanel = (props: ControlPanelProps) => {\n  const classes = useStyles();\n\n  const [row, setRow] = useState(10);\n  const [col, setCol] = useState(10);\n\n  const [visible, setVisible] = useState(true);\n\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    if (props.reinitState) {\n      props.reinitState(generateLargeDiagram(row, col));\n    }\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  if (visible) {\n    return (\n      <Box padding={3} clone>\n        <Card>\n          <div className={classes.header}>\n            <Button\n              className={classes.visibilityBtn}\n              variant='outlined'\n              aria-label='control-panel'\n              onClick={() => setVisible(false)}\n            >\n              <Tune />\n            </Button>\n            <Typography variant='h5'>Control Panel</Typography>\n          </div>\n          <form\n            className={classes.form}\n            noValidate\n            autoComplete='off'\n            onSubmit={onFormSubmit}\n          >\n            <TextField\n              id='rows'\n              value={row}\n              type='number'\n              label='Rows'\n              variant='outlined'\n              onChange={(e) => setRow(parseInt(e.target.value))}\n            />\n            <TextField\n              id='columns'\n              value={col}\n              type='number'\n              label='Columns'\n              variant='outlined'\n              onChange={(e) => setCol(parseInt(e.target.value))}\n            />\n            <Button variant='contained' type='submit'>\n              Generate new Diagram\n            </Button>\n          </form>\n        </Card>\n      </Box>\n    );\n  } else {\n    return (\n      <Button\n        variant='outlined'\n        className={classes.visibilityBtn}\n        aria-label='control-panel'\n        onClick={() => setVisible(true)}\n      >\n        <Tune />\n      </Button>\n    );\n  }\n};\n","import React from 'react';\nimport './App.css';\nimport {\n  Diagram,\n  DiagramInitializer,\n  useDiagramRef,\n} from '@react-easy-diagram/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport { ControlPanel } from './ControlPanel';\n\nconst useStyles = makeStyles(() => ({\n  diagram: {\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: '#dbdbdb',\n    backgroundImage:\n      \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.3'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")\",\n  },\n  controlPanel: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n  },\n}));\n\nexport const App = () => {\n  const classes = useStyles();\n  const diagramRef = useDiagramRef();\n\n  return (\n    <Box className={classes.diagram}>\n      <Diagram ref={diagramRef} initialState={initDiagram} />\n      <Box className={classes.controlPanel}>\n        <ControlPanel reinitState={diagramRef.current?.reinitState} />\n      </Box>\n    </Box>\n  );\n};\n\nconst initDiagram: DiagramInitializer = {\n  nodes: [\n    {\n      id: 'Node 1',\n      position: {\n        x: 300,\n        y: 300,\n      },\n    },\n    {\n      id: 'Node 2',\n      position: {\n        x: 520,\n        y: 400,\n      },\n    },\n    {\n      id: 'Node 3',\n      position: {\n        x: 520,\n        y: 200,\n      },\n    },\n  ],\n  links: [\n    {\n      from: {\n        nodeId: 'Node 2'\n      },\n      to: {\n        nodeId: 'Node 1'\n      }\n    }\n  ]\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}