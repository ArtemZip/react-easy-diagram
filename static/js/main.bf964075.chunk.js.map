{"version":3,"sources":["../../src/components/BackgroundDefault.tsx","../../src/hooks/useNotifyRef.ts","../../src/components/LinkWrapper.tsx","../../src/components/LinksLayer.tsx","../../src/hooks/userInteractions/useDragHandlers.ts","../../src/hooks/userInteractions/useUserAbilityToSelectSwitcher.ts","../../src/components/NodeWrapper.tsx","../../src/hooks/userInteractions/useNodeUserInteraction.ts","../../src/hooks/userInteractions/common.ts","../../src/components/NodesLayer.tsx","../../src/utils.ts","../../src/hooks/userInteractions/useDiagramUserInteraction.ts","../../src/hooks/userInteractions/usePinchHandlers.ts","../../src/hooks/userInteractions/useWheelHandler.ts","../../src/components/MiniControlWrapper.tsx","../../src/components/DiagramInner.tsx","../../../node_modules/style-inject/dist/style-inject.es.js","../../src/states/diagramApi.ts","../../src/linkConstructors/curved.ts","../../src/states/htmlElementRefState.ts","../../src/states/diagramState.ts","../../src/states/linkEndpointState.ts","../../src/states/visualComponents.ts","../../src/states/linkState.ts","../../src/states/linkCreationState.ts","../../src/components/LinkDefault.tsx","../../src/states/linksSettings.ts","../../src/states/linksStore.ts","../../src/components/NodeDefault.tsx","../../src/states/nodesSettings.ts","../../src/states/portState.ts","../../src/states/nodeState.ts","../../src/states/nodesStore.ts","../../src/components/PortWrapper.tsx","../../src/hooks/userInteractions/usePortUserInteraction.ts","../../src/components/PortsContainerDefault.tsx","../../src/states/portsSettings.ts","../../src/states/visualComponentState.ts","../../src/states/visualComponentWithDefault.ts","../../src/states/diagramSettings.ts","../../src/states/rootStore.ts","../../src/components/Diagram.tsx","../../src/hooks/useRootStore.ts","../../src/components/BackgroundWrapper.tsx","../../src/components/MiniControlDefault.tsx","ControlPanel.tsx","App.tsx","../../src/hooks/useDiagram.tsx","index.tsx"],"names":["diagramOffset","digramZoom","settings","defaultSettings","className","style","backgroundColor","color","backgroundImage","imageCreator","backgroundPosition","width","height","init","forceUpdate","ref","value","facade","i","LinkWrapper","observer","link","draggableRef","componentDefinition","component","path","entity","LinksLayer","linksStore","Object","values","links","map","key","id","linkCreation","useDragHandlers","activeRef","state","parentScaleGetter","cancel","onDrag","pinching","delta","current","parentScale","setOffset","offset","onDragStart","event","onDragEnd","DISABLED_USER_SELECT_CSS_CLASS","useUserAbilityToSelectSwitcher","active","elementToSwitchUserSelectOn","classList","contains","add","remove","NodeWrapper","node","userInteractionElemRef","nodeState","enable","diagramStore","dragHandlers","zoom","e","targets","composedPath","length","target","eventPathContainsClass","domTarget","eventOptions","passive","enabled","ownerDocument","body","left","top","NodesLayer","nodesStore","nodes","generateTransform","translate","scale","translatePart","roundPoint","point","Math","round","addPoints","a","b","subtractPoints","multiplyPoint","m","clampValue","interval","min","max","diagramState","cancelGesture","diagramInnerRef","undefined","pinchHandlers","elemToAttachToRef","pinchState","distance","origin","onPinch","originDiff","rect","getBoundingClientRect","originPositionOnElement","tranlsateAndZoomInto","onPinchStart","onPinchEnd","usePinchHandlers","wheelHandler","onWheel","direction","yDirection","clientX","clientY","mousePositionOnElement","factor","useWheelHandler","transform","transformString","MiniControlWrapper","diagramSettings","diagramApi","miniControlComponentState","InnerDiagram","props","rootStore","diagramStyles","BackgroundWrapper","displayName","css","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","addNode","reinitState","fromJson","reinitSettings","diagram","nodesSettings","linksSettings","portsSettings","ports","zoomIn","zoomIntoCenter","zoomOut","recalculatePortPosition","this","curvedLinkPathConstructor","source","sourcePortType","targetPortType","sourceStr","targetStr","directionFactor","tweakDirectionFactorBasedOnDistance","sqrt","pow","getControl","endpoint","portType","portTypeToLinkDirectionMapping","defualtSettings","right","bottom","createCurvedLinkPathConstructor","initValue","offsetRelativeToParent","parent","iterElement","acumLeft","acumTop","offsetLeft","offsetTop","parentElement","currentInternal","clientWidth","clientHeight","newOffset","setZoom","newZoom","scaleInterval","setTransformation","zoomInto","pointToZoomInto","zoomMultiplicator","pointDisplacementAfterZoom","translateBy","diagramRealSize","realSize","position","nodeId","portId","obj","port","offsetRelativeToNode","defaultComponents","defaultType","componentDefaultType","defaultNodeType","components","createComponentCollection","getComponent","finalComponentType","componentsObjects","collection","entries","forEach","v4","componentType","segments","extra","svgPath","pathConstructor","setSource","setTarget","targetPortCandidate","startLinking","portState","eventOffsetRelativeToTarget","setTargetPortCandidate","resetTargetPortCandidateIfSame","stopLinking","addLink","linkDefaultSettings","pathStr","d","stroke","strokeWidth","fill","hasOnlyPosition","cx","cy","r","cirleRadius","createLinkDefault","finaleSettings","defaultPathConstructor","visualComponents","newLinks","linkState","newLink","addLinkFromJson","generatePortsContainer","portsType","portsToShow","filter","portsContainer","portsContainerVisualComponents","label","dragging","hovered","keys","portObj","newNodes","newNode","PortWrapper","releasePointerCapture","pointerId","offsetX","offsetY","onPointerEnter","onPointerLeave","finalSettings","portsContainerDefaultSettings","gapBetweenPorts","createPortsContainerDefault","horizontal","vertical","portsContainerComponents","newComponent","defaultComponent","_innerComponent","_defaultComponent","defaultScaleInterval","backgroundComponentState","createDefaultBackground","createDefaultMiniControl","backgroundComponent","miniControlComponent","DiagramApi","RootStoreContext","createContext","store","RootStore","initState","apiRef","Provider","diagramZoom","getOffsetStyles","containerStyle","buttons","size","buttonsSize","onClick","children","parentOffset","useStyles","makeStyles","form","display","flexDirection","margin","visibilityBtn","borderRadius","minWidth","padding","header","marginBottom","alignItems","ControlPanel","classes","useState","row","setRow","col","setCol","visible","setVisible","Box","clone","Card","Button","variant","aria-label","Tune","Typography","noValidate","autoComplete","onSubmit","preventDefault","newState","colNum","rowNum","getNodeId","j","push","generateLargeDiagram","TextField","onChange","parseInt","controlPanel","App","Diagram","useDiagram","default","attention","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bf964075.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IComponentDefinition } from '..';\r\nimport { IBackgroundComponentProps } from '../states/diagramSettings';\r\n\r\nconst BackgroundDefault: React.FC<\r\n  IBackgroundComponentProps<IBackgroundDefaultSettings>\r\n> = ({ diagramOffset, diagramZoom: digramZoom, settings }) => {\r\n  settings = settings ?? defaultSettings;\r\n\r\n  return (\r\n    <div\r\n      className='react_fast_diagram_Background_Default'\r\n      style={{\r\n        backgroundColor: settings.color,\r\n        backgroundImage: settings.imageCreator(\r\n          100 * digramZoom,\r\n          100 * digramZoom\r\n        ),\r\n        backgroundPosition: `${diagramOffset[0]}px ${diagramOffset[1]}px`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const createGridImage: ImageCreator = (width, height) => {\r\n  return `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='${width}' height='${height}' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.3'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`;\r\n};\r\n\r\nexport const createImageWithCrosses: ImageCreator = (width, height) => {\r\n  return `url(\"data:image/svg+xml,%3Csvg width='${width * 0.3}' height='${\r\n    height * 0.3\r\n  }' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%2395bcbd' fill-opacity='0.3'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`;\r\n};\r\n\r\nconst defaultSettings: IBackgroundDefaultSettings = {\r\n  imageCreator: createGridImage,\r\n  color: '#ececec',\r\n};\r\n\r\nexport const createDefaultBackground = (\r\n  settings?: Partial<IBackgroundDefaultSettings>\r\n): IComponentDefinition<\r\n  IBackgroundComponentProps,\r\n  IBackgroundDefaultSettings\r\n> => {\r\n  const finalSettings = {\r\n    ...defaultSettings,\r\n    ...(settings ? settings : {}),\r\n  };\r\n\r\n  return {\r\n    component: BackgroundDefault,\r\n    settings: finalSettings,\r\n  };\r\n};\r\n\r\nexport type ImageCreator = (width: number, height: number) => string;\r\n\r\n/**\r\n * @property {function}  imageCreator       - Function to create string for css's backgroundUrl property.\r\n * You can use for example services like listed in this article https://css-tricks.com/websites-generate-svg-patterns/\r\n * to generate this string.\r\n */\r\nexport interface IBackgroundDefaultSettings {\r\n  imageCreator: ImageCreator;\r\n  color: string;\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useNotifyRef = <TValue>(\r\n  init: TValue\r\n): React.MutableRefObject<TValue> => {\r\n  const [_, forceUpdate] = useState(0);\r\n  const [ref] = useState(() => ({\r\n    value: init,\r\n    facade: {\r\n      get current() {\r\n        return ref.value;\r\n      },\r\n      set current(value) {\r\n        const last = ref.value;\r\n        if (last !== value) {\r\n          ref.value = value;\r\n          forceUpdate((i) => i + 1);\r\n        }\r\n      },\r\n    },\r\n  }));\r\n\r\n  return ref.facade;\r\n};\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useNotifyRef } from '../hooks/useNotifyRef';\r\nimport { LinkState } from '../states/linkState';\r\n\r\nexport const LinkWrapper = observer<{ link: LinkState }>(({ link }) => {\r\n  const draggableRef = useNotifyRef(null);\r\n\r\n  return (\r\n    <g>\r\n      <link.componentDefinition.component\r\n        draggableRef={draggableRef}\r\n        path={link.path}\r\n        entity={link}\r\n        settings={link.componentDefinition.settings}\r\n      />\r\n    </g>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { LinksStore } from '../states/linksStore';\r\nimport { LinkWrapper } from './LinkWrapper';\r\n\r\nexport const LinksLayer = observer<{linksStore: LinksStore}>(({linksStore}) => {\r\n  return (\r\n    <svg>\r\n      {Object.values(linksStore.links).map((link) => (\r\n        <LinkWrapper key={link.id} link={link} />\r\n      ))}\r\n      {linksStore.linkCreation.link && <LinkWrapper key={linksStore.linkCreation.link.id} link={linksStore.linkCreation.link} />}\r\n    </svg>\r\n  );\r\n});\r\n","import { useMemo } from 'react';\r\nimport { Handler } from 'react-use-gesture/dist/types';\r\nimport { IUserInteractionTranslate } from './common';\r\n\r\ntype DragEventHandler =\r\n  | Handler<'drag', React.PointerEvent<Element> | PointerEvent>\r\n  | undefined;\r\n\r\ninterface IDragHandlers {\r\n  onDrag: DragEventHandler;\r\n  onDragStart: DragEventHandler;\r\n  onDragEnd: DragEventHandler;\r\n}\r\n\r\nexport function useDragHandlers(\r\n  activeRef: React.MutableRefObject<boolean>,\r\n  state: IUserInteractionTranslate,\r\n  parentScaleGetter?: () => number,\r\n  cancel?: (event: React.PointerEvent<Element> | PointerEvent) => boolean\r\n): IDragHandlers {\r\n  const handlers = useMemo<IDragHandlers>(\r\n    () => ({\r\n      onDrag: ({ pinching, delta }) => {\r\n        if (!activeRef.current || pinching) {\r\n          return;\r\n        }\r\n        const parentScale = parentScaleGetter ? parentScaleGetter() : 1;\r\n        state.setOffset([\r\n          state.offset[0] + delta[0] / parentScale,\r\n          state.offset[1] + delta[1] / parentScale,\r\n        ]);\r\n      },\r\n      onDragStart: ({ event }) => {\r\n        if (cancel && cancel(event)) {\r\n          return;\r\n        }\r\n        activeRef.current = true;\r\n      },\r\n      onDragEnd: () => (activeRef.current = false),\r\n    }),\r\n    [activeRef, state, parentScaleGetter, cancel]\r\n  );\r\n\r\n  return handlers;\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport const DISABLED_USER_SELECT_CSS_CLASS =\r\n  'react_fast_diagram_disabled_user_select';\r\n\r\nexport function useUserAbilityToSelectSwitcher(\r\n  active: boolean,\r\n  elementToSwitchUserSelectOn: HTMLElement | undefined\r\n) {\r\n  useEffect(() => {\r\n    if (!active || !elementToSwitchUserSelectOn) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      elementToSwitchUserSelectOn.classList.contains(\r\n        DISABLED_USER_SELECT_CSS_CLASS\r\n      )\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    elementToSwitchUserSelectOn.classList.add(DISABLED_USER_SELECT_CSS_CLASS);\r\n\r\n    return () => {\r\n      elementToSwitchUserSelectOn.classList.remove(\r\n        DISABLED_USER_SELECT_CSS_CLASS\r\n      );\r\n    };\r\n  }, [active, elementToSwitchUserSelectOn]);\r\n}\r\n","import React from 'react';\r\nimport { useNodeUserInteraction } from '../hooks/userInteractions/useNodeUserInteraction';\r\nimport { NodeState } from '../states/nodeState';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const NodeWrapper = observer<{node: NodeState}>(({ node }) => {\r\n  const { userInteractionElemRef } = useNodeUserInteraction(node);\r\n\r\n  return (\r\n    <div\r\n      id={node.id}\r\n      className='react_fast_diagram_NodeWrapper'\r\n      style={{\r\n        left: node.offset[0],\r\n        top: node.offset[1]\r\n      }}\r\n      ref={node.ref}\r\n    >\r\n      <node.componentDefinition.component\r\n        draggableRef={userInteractionElemRef}\r\n        entity={node}\r\n        settings={node.componentDefinition.settings}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React, { useRef } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { NodeState } from '../../states/nodeState';\r\nimport { useNotifyRef } from '../useNotifyRef';\r\nimport { useRootStore } from '../useRootStore';\r\nimport { eventPathContainsClass } from './common';\r\nimport { useDragHandlers } from './useDragHandlers';\r\nimport { useUserAbilityToSelectSwitcher } from './useUserAbilityToSelectSwitcher';\r\n\r\nexport const useNodeUserInteraction = (\r\n  nodeState: NodeState,\r\n  enable?: boolean\r\n): IUseNodeUserInteractionResult => {\r\n  const { diagramState: diagramStore } = useRootStore();\r\n\r\n  // Should trigger rendering on change, otherwise useUserSelectSwitcher will not be invoked\r\n  const activeRef = useNotifyRef(false);\r\n  const userInteractionElemRef = useRef<HTMLElement>(null);\r\n\r\n  const dragHandlers = useDragHandlers(\r\n    activeRef,\r\n    nodeState,\r\n    () => diagramStore.zoom,\r\n    (e) => {\r\n      return eventPathContainsClass(e, 'react_fast_diagram_PortWrapper');\r\n    }\r\n  );\r\n\r\n  useGesture(dragHandlers, {\r\n    domTarget: userInteractionElemRef,\r\n    eventOptions: { passive: false },\r\n    enabled: enable,\r\n  });\r\n\r\n  useUserAbilityToSelectSwitcher(\r\n    activeRef.current,\r\n    userInteractionElemRef.current?.ownerDocument?.body\r\n  );\r\n\r\n  return {\r\n    active: activeRef.current,\r\n    userInteractionElemRef,\r\n  };\r\n};\r\n\r\nexport interface IUseNodeUserInteractionResult {\r\n  active: boolean;\r\n  userInteractionElemRef: React.RefObject<HTMLElement>;\r\n}\r\n","import { Point } from '../../types/common';\r\n\r\nexport const eventPathContainsClass = (\r\n  event: PointerEvent | React.PointerEvent<Element>,\r\n  className: string\r\n) => {\r\n  const typedEvent = event as Event;\r\n  if ('composedPath' in typedEvent) {\r\n    const targets = typedEvent.composedPath();\r\n    for (let i = 0; i < targets.length; i++) {\r\n      const target = targets[i];\r\n      if ('classList' in target) {\r\n        if ((target as Element).classList.contains(className)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport function allTouchTargetsContainsClass(\r\n  event: TouchEvent | React.TouchEvent<Element>,\r\n  listenOnlyClass: string | undefined,\r\n  ignoreClass: string | undefined\r\n): boolean {\r\n  for (let i = 0; i < event.touches.length; i++) {\r\n    if (\r\n      !eventTargetContainsClass(\r\n        event.touches[i].target,\r\n        listenOnlyClass,\r\n        ignoreClass\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function eventTargetContainsClass(\r\n  eventTarget: EventTarget | null,\r\n  listenOnlyClass: string | undefined,\r\n  ignoreClass: string | undefined\r\n): boolean {\r\n  if (eventTarget && 'classList' in eventTarget) {\r\n    const targetElement = eventTarget as Element;\r\n    return (\r\n      (!listenOnlyClass || targetElement.classList.contains(listenOnlyClass)) &&\r\n      (!ignoreClass || !targetElement.classList.contains(ignoreClass))\r\n    );\r\n  } else return false;\r\n}\r\n\r\nexport interface IUserInteractionTranslate {\r\n  offset: Point;\r\n  setOffset: (newOffset: Point) => any;\r\n}\r\n\r\nexport interface IUserInteractionTranslateAndZoom {\r\n  offset: Point;\r\n  zoom: number;\r\n  tranlsateAndZoomInto: (\r\n    translateBy: Point,\r\n    pointToZoomInto: Point,\r\n    changeZoomBy: number\r\n  ) => any;\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { NodesStore } from '../states/nodesStore';\r\nimport { NodeWrapper } from './NodeWrapper';\r\n\r\nexport const NodesLayer = observer<{nodesStore: NodesStore}>(({nodesStore}) => {\r\n  return (\r\n    <div>\r\n      {Object.values(nodesStore.nodes).map((node) => (\r\n        <NodeWrapper key={node.id} node={node} />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n","import { Point } from './types/common';\r\n\r\nexport const generateTransform = (translate: Point, scale?: number): string => {\r\n  const translatePart = `translate(${translate[0]}px, ${translate[1]}px)`;\r\n  if (scale) {\r\n    const scalePart = `scale(${scale})`;\r\n    return translatePart + ' ' + scalePart;\r\n  } else {\r\n    return translatePart;\r\n  }\r\n};\r\n\r\nexport interface ITransformation {\r\n  zoom: number;\r\n  offset: Point;\r\n}\r\n\r\nexport const distanceBetweenPoints = (a: Point, b: Point): number =>\r\n  Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2));\r\n\r\nexport const roundPoint = (point: Point) =>\r\n  [Math.round(point[0]), Math.round(point[1])] as Point;\r\n\r\nexport const addPoints = (a: Point, b: Point): Point => [\r\n  a[0] + b[0],\r\n  a[1] + b[1],\r\n];\r\n\r\nexport const subtractPoints = (a: Point, b: Point): Point => [\r\n  a[0] - b[0],\r\n  a[1] - b[1],\r\n];\r\n\r\nexport const multiplyPoint = (a: Point, m: number): Point => [\r\n  a[0] * m,\r\n  a[1] * m,\r\n];\r\n\r\nexport const arePointsEqual = (a: Point, b: Point): boolean =>\r\n  a === b || (a && b && a[0] === b[0] && a[1] === b[1]);\r\n\r\nexport const areTranformationsEqual = (\r\n  a: ITransformation,\r\n  b: ITransformation\r\n): boolean =>\r\n  a === b ||\r\n  (a && b && a.zoom === b.zoom && arePointsEqual(a.offset, b.offset));\r\n\r\nexport function clampValue(value: number, interval: Point) {\r\n  return Math.min(Math.max(value, interval[0]), interval[1]);\r\n}\r\n","import React, { useCallback, useContext, useRef } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { WebKitGestureEvent } from 'react-use-gesture/dist/types';\r\nimport { useNotifyRef } from '../useNotifyRef';\r\nimport { useRootStore } from '../useRootStore';\r\nimport { useDragHandlers } from './useDragHandlers';\r\nimport { usePinchHandlers } from './usePinchHandlers';\r\nimport { useUserAbilityToSelectSwitcher } from './useUserAbilityToSelectSwitcher';\r\nimport { useWheelHandler } from './useWheelHandler';\r\n\r\nexport const useDiagramUserInteraction = (\r\n  enable?: boolean\r\n): IUseDragAndZoomResult => {\r\n  const { diagramState } = useRootStore();\r\n  const activeRef = useNotifyRef(false);\r\n\r\n  const cancelGesture = useCallback(\r\n    (\r\n      event:\r\n        | TouchEvent\r\n        | React.TouchEvent<Element>\r\n        | React.WheelEvent<Element>\r\n        | WheelEvent\r\n        | WebKitGestureEvent\r\n        | React.PointerEvent<Element>\r\n        | PointerEvent\r\n    ) => event.target !== diagramState.diagramInnerRef.current,\r\n    [diagramState.diagramInnerRef]\r\n  );\r\n\r\n  const dragHandlers = useDragHandlers(\r\n    activeRef,\r\n    diagramState,\r\n    undefined,\r\n    cancelGesture\r\n  );\r\n\r\n  const pinchHandlers = usePinchHandlers(\r\n    diagramState.diagramInnerRef,\r\n    activeRef,\r\n    diagramState,\r\n    cancelGesture\r\n  );\r\n\r\n  const wheelHandler = useWheelHandler(\r\n    diagramState.diagramInnerRef,\r\n    activeRef,\r\n    diagramState\r\n  );\r\n\r\n  useGesture(\r\n    {\r\n      ...dragHandlers,\r\n      ...pinchHandlers,\r\n      ...wheelHandler,\r\n    },\r\n    {\r\n      domTarget: diagramState.diagramInnerRef,\r\n      eventOptions: { passive: false },\r\n      enabled: enable,\r\n    }\r\n  );\r\n\r\n  useUserAbilityToSelectSwitcher(\r\n    activeRef.current,\r\n    diagramState.diagramInnerRef.current?.ownerDocument?.body\r\n  );\r\n\r\n  return {\r\n    transform: diagramState.transformString,\r\n    active: activeRef.current,\r\n  };\r\n};\r\n\r\nexport interface IUseDragAndZoomResult {\r\n  transform: string;\r\n  active: boolean;\r\n}\r\n","import { useMemo, useRef } from 'react';\r\nimport {\r\n  Handler,\r\n  Vector2,\r\n  WebKitGestureEvent,\r\n} from 'react-use-gesture/dist/types';\r\nimport { subtractPoints } from '../../utils';\r\nimport { IUserInteractionTranslateAndZoom } from './common';\r\n\r\ntype PinchEvent =\r\n  | React.TouchEvent\r\n  | TouchEvent\r\n  | React.WheelEvent\r\n  | WheelEvent\r\n  | WebKitGestureEvent;\r\n\r\ntype PinchEventHandler = Handler<'pinch', PinchEvent> | undefined;\r\n\r\ninterface IPinchHandlers {\r\n  onPinch: PinchEventHandler;\r\n  onPinchStart: PinchEventHandler;\r\n  onPinchEnd: PinchEventHandler;\r\n}\r\n\r\nexport function usePinchHandlers(\r\n  elemToAttachToRef: React.RefObject<HTMLElement>,\r\n  activeRef: React.MutableRefObject<boolean>,\r\n  state: IUserInteractionTranslateAndZoom,\r\n  cancel?: (event: PinchEvent) => boolean\r\n): IPinchHandlers {\r\n  const pinchState = useRef<IPinchState>({\r\n    distance: 0,\r\n    origin: [0, 0],\r\n  });\r\n\r\n  const handlers = useMemo<IPinchHandlers>(\r\n    () => ({\r\n      onPinch: ({ da: [distance], origin }) => {\r\n        if (!activeRef.current || !elemToAttachToRef.current) {\r\n          return;\r\n        }\r\n        const originDiff = subtractPoints(origin, pinchState.current.origin);\r\n\r\n        const rect = elemToAttachToRef.current.getBoundingClientRect();\r\n        const originPositionOnElement = subtractPoints(origin, [\r\n          rect.left,\r\n          rect.top,\r\n        ]);\r\n\r\n        state.tranlsateAndZoomInto(\r\n          originDiff,\r\n          originPositionOnElement,\r\n          distance / pinchState.current.distance\r\n        );\r\n\r\n        pinchState.current = {\r\n          distance,\r\n          origin,\r\n        };\r\n      },\r\n      onPinchStart: ({ da: [distance], origin, event }) => {\r\n        if (cancel && cancel(event)) {\r\n          return;\r\n        }\r\n\r\n        pinchState.current = {\r\n          distance,\r\n          origin,\r\n        };\r\n        activeRef.current = true;\r\n      },\r\n      onPinchEnd: () => (activeRef.current = false),\r\n    }),\r\n    [elemToAttachToRef, activeRef, state, cancel]\r\n  );\r\n\r\n  return handlers;\r\n}\r\n\r\ninterface IPinchState {\r\n  distance: number;\r\n  origin: Vector2;\r\n}\r\n","import { useMemo } from 'react';\r\nimport { Handler } from 'react-use-gesture/dist/types';\r\nimport {\r\n  subtractPoints,\r\n} from '../../utils';\r\nimport { IUserInteractionTranslateAndZoom } from './common';\r\n\r\nexport function useWheelHandler(\r\n  elemToAttachToRef: React.RefObject<HTMLElement>,\r\n  activeRef: React.MutableRefObject<boolean>,\r\n  state: IUserInteractionTranslateAndZoom\r\n): IWheelHandler {\r\n  const handlers = useMemo<IWheelHandler>(\r\n    () => ({\r\n      onWheel: ({\r\n        direction: [_, yDirection],\r\n        event: { clientX, clientY },\r\n      }) => {\r\n        if (!elemToAttachToRef.current) return;\r\n        const rect = elemToAttachToRef.current.getBoundingClientRect();\r\n\r\n        const mousePositionOnElement = subtractPoints(\r\n          [clientX, clientY],\r\n          [rect.left, rect.top]\r\n        );\r\n\r\n        let factor = 0.9;\r\n        if (yDirection < 0) {\r\n          factor = 1 / factor;\r\n        }\r\n\r\n        state.tranlsateAndZoomInto(\r\n          [0, 0],\r\n          mousePositionOnElement,\r\n          factor\r\n        );\r\n      },\r\n    }),\r\n    [elemToAttachToRef, activeRef, state]\r\n  );\r\n\r\n  return handlers;\r\n}\r\n\r\ntype WheelEventHandler =\r\n  | Handler<'wheel', React.WheelEvent<Element> | WheelEvent>\r\n  | undefined;\r\n\r\ninterface IWheelHandler {\r\n  onWheel: WheelEventHandler;\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useRootStore } from '../hooks/useRootStore';\r\n\r\nexport const MiniControlWrapper = observer(() => {\r\n  const { diagramSettings, diagramApi } = useRootStore();\r\n\r\n  return (\r\n    diagramSettings.miniControlComponentState.component && (\r\n      <diagramSettings.miniControlComponentState.component\r\n        diagramApi={diagramApi}\r\n        settings={diagramSettings.miniControlComponentState.settings}\r\n      />\r\n    )\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { LinksLayer } from './LinksLayer';\r\nimport { NodesLayer } from './NodesLayer';\r\nimport { useDiagramUserInteraction } from '../hooks/userInteractions/useDiagramUserInteraction';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useRootStore } from '../hooks/useRootStore';\r\nimport { BackgroundWrapper } from './BackgroundWrapper';\r\nimport { MiniControlWrapper } from './MiniControlWrapper';\r\n\r\nexport interface IDiagramInnerProps {\r\n  diagramStyles?: React.CSSProperties;\r\n}\r\n\r\nexport const InnerDiagram = observer<IDiagramInnerProps>((props) => {\r\n  const rootStore = useRootStore();\r\n  const { transform } = useDiagramUserInteraction();\r\n\r\n  return (\r\n    <div\r\n      ref={rootStore.diagramState.diagramInnerRef}\r\n      style={{ ...props.diagramStyles }}\r\n      className='react_fast_diagram_DiagramInner'\r\n    >\r\n      <BackgroundWrapper />\r\n      <div\r\n        className='react_fast_diagram_DiagramInner_DraggablePart'\r\n        style={{\r\n          transform: transform,\r\n        }}\r\n      >\r\n        <LinksLayer linksStore={rootStore.linksStore} />\r\n        <NodesLayer nodesStore={rootStore.nodesStore} />\r\n      </div>\r\n      <MiniControlWrapper />\r\n    </div>\r\n  );\r\n});\r\n\r\nInnerDiagram.displayName = 'InnerDiagram';\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {\r\n  IDiagramSettings,\r\n  ILinksSettings,\r\n  INodesSettings,\r\n  IPortsSettings,\r\n} from '.';\r\nimport { ILinkState } from './linkState';\r\nimport { INodeState } from './nodeState';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport class DiagramApi {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  addNode = (node: INodeState) => {\r\n    this.rootStore.nodesStore.addNode(node);\r\n  };\r\n\r\n  reinitState = (nodes?: INodeState[], links?: ILinkState[]) => {\r\n    this.rootStore.nodesStore.fromJson(nodes);\r\n    this.rootStore.linksStore.fromJson(links);\r\n  };\r\n\r\n  reinitSettings = (settings: ISettings) => {\r\n    this.rootStore.diagramSettings.fromJson(settings.diagram);\r\n    this.rootStore.nodesSettings.fromJson(settings.nodes);\r\n    this.rootStore.linksSettings.fromJson(settings.links);\r\n    this.rootStore.portsSettings.fromJson(settings.ports);\r\n  };\r\n\r\n  zoomIn = () => this.rootStore.diagramState.zoomIntoCenter(1 / 0.8);\r\n  zoomOut = () => this.rootStore.diagramState.zoomIntoCenter(0.8);\r\n\r\n  recalculatePortPosition = () => {\r\n    //\r\n  };\r\n}\r\n\r\nexport interface ISettings {\r\n  diagram?: IDiagramSettings;\r\n  nodes?: INodesSettings;\r\n  links?: ILinksSettings;\r\n  ports?: IPortsSettings;\r\n}\r\n","import { ILinkPathConstructor } from '../states/linksSettings';\r\nimport { Point } from '../types/common';\r\nimport { distanceBetweenPoints, roundPoint } from '../utils';\r\n\r\nfunction curvedLinkPathConstructor(\r\n  source: Point,\r\n  target: Point,\r\n  sourcePortType: string | undefined,\r\n  targetPortType: string | undefined,\r\n  settings: ICurvedLinkPathConstructorSettings\r\n): string {\r\n  if (!source || !target) return '';\r\n  source = roundPoint(source);\r\n  target = roundPoint(target);\r\n\r\n  const sourceStr = `${source[0]}, ${source[1]}`;\r\n  const targetStr = `${target[0]}, ${target[1]}`;\r\n\r\n  const directionFactor = settings.tweakDirectionFactorBasedOnDistance(\r\n    distanceBetweenPoints(source, target),\r\n    settings.directionFactor\r\n  );\r\n\r\n  function getControl(endpoint: Point, portType: string | undefined): string {\r\n    const linkDirection =\r\n      portType && settings.portTypeToLinkDirectionMapping[portType];\r\n    switch (linkDirection) {\r\n      case 'left':\r\n        return `${endpoint[0] - directionFactor}, ${endpoint[1]}`;\r\n      case 'up':\r\n        return `${endpoint[0]}, ${endpoint[1] - directionFactor}`;\r\n      case 'right':\r\n        return `${endpoint[0] + directionFactor}, ${endpoint[1]}`;\r\n      case 'down':\r\n        return `${endpoint[0]}, ${endpoint[1] + directionFactor}`;\r\n      default:\r\n        return `${endpoint[0]}, ${endpoint[1]}`;\r\n    }\r\n  }\r\n\r\n  if (sourcePortType || targetPortType) {\r\n    const sourceControl = getControl(source, sourcePortType);\r\n    const targetControl = getControl(target, targetPortType);\r\n    return `M ${sourceStr} C ${sourceControl} ${targetControl}, ${targetStr}`;\r\n  } else {\r\n    return `M ${sourceStr} Q ${target[0]}, ${source[1]}, ${targetStr}`;\r\n  }\r\n}\r\n\r\nexport interface ICurvedLinkPathConstructorSettings {\r\n  portTypeToLinkDirectionMapping: {\r\n    [key: string]: 'left' | 'right' | 'up' | 'down';\r\n  };\r\n  directionFactor: number;\r\n  tweakDirectionFactorBasedOnDistance: (\r\n    distance: number,\r\n    directionFactor: number\r\n  ) => number;\r\n}\r\n\r\nconst defualtSettings: ICurvedLinkPathConstructorSettings = {\r\n  portTypeToLinkDirectionMapping: {\r\n    left: 'left',\r\n    right: 'right',\r\n    top: 'up',\r\n    bottom: 'down',\r\n  },\r\n  directionFactor: 60,\r\n  tweakDirectionFactorBasedOnDistance: (distance, directionFactor) => {\r\n    if (distance < 100) {\r\n      return directionFactor * (distance / 100);\r\n    }\r\n    return directionFactor;\r\n  },\r\n};\r\n\r\nexport function createCurvedLinkPathConstructor(\r\n  settings?: Partial<ICurvedLinkPathConstructorSettings>\r\n): ILinkPathConstructor {\r\n  return (\r\n    source: Point,\r\n    target: Point,\r\n    sourcePortType: string | undefined,\r\n    targetPortType: string | undefined\r\n  ) =>\r\n    curvedLinkPathConstructor(\r\n      source,\r\n      target,\r\n      sourcePortType,\r\n      targetPortType,\r\n      settings ? { ...defualtSettings, ...settings } : defualtSettings\r\n    );\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Point } from '..';\r\n\r\nexport class HtmlElementRefState {\r\n  currentInternal: HTMLDivElement | null;\r\n\r\n  constructor(initValue: HTMLDivElement | null) {\r\n    this.currentInternal = initValue;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get current() {\r\n    return this.currentInternal;\r\n  }\r\n\r\n  set current(value: HTMLDivElement | null) {\r\n    this.currentInternal = value;\r\n  }\r\n\r\n  offsetRelativeToParent = (parent: HTMLElement) : Point | null => {\r\n    if (this.current){\r\n      let iterElement = this.current as HTMLElement | null;\r\n      let acumLeft = 0;\r\n      let acumTop = 0;\r\n\r\n      while(parent !== iterElement && iterElement) {\r\n        acumLeft += iterElement.offsetLeft;\r\n        acumTop += iterElement.offsetTop;\r\n        iterElement = iterElement.parentElement;\r\n      }\r\n\r\n      return [acumLeft, acumTop];\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  get realSize() : Point | null {\r\n    if (this.current) {\r\n      return [this.current.clientWidth, this.current.clientHeight];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport interface IHtmlElementRect {\r\n  left: number;\r\n  top: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n","import { Point } from '../types/common';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { RootStore } from './rootStore';\r\nimport {\r\n  IUserInteractionTranslateAndZoom,\r\n  IUserInteractionTranslate,\r\n} from '../hooks/userInteractions/common';\r\nimport {\r\n  clampValue,\r\n  generateTransform,\r\n  subtractPoints,\r\n  multiplyPoint,\r\n  addPoints,\r\n} from '../utils';\r\nimport { HtmlElementRefState } from './htmlElementRefState';\r\n\r\nexport class DiagramState\r\n  implements IUserInteractionTranslate, IUserInteractionTranslateAndZoom {\r\n  offset: Point = [0, 0];\r\n  zoom: number = 1;\r\n  diagramInnerRef: HtmlElementRefState;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.diagramInnerRef = new HtmlElementRefState(null);\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  setOffset = (newOffset: Point) => {\r\n    this.offset = newOffset;\r\n  };\r\n\r\n  setZoom = (newZoom: number) => {\r\n    this.zoom = clampValue(\r\n      newZoom,\r\n      this.rootStore.diagramSettings.scaleInterval\r\n    );\r\n  };\r\n\r\n  setTransformation = (newOffset: Point, newZoom: number) => {\r\n    this.setOffset(newOffset);\r\n    this.setZoom(newZoom);\r\n  };\r\n\r\n  // See: https://stackoverflow.com/a/30039971/9142642\r\n  zoomInto = (pointToZoomInto: Point, zoomMultiplicator: number) => {\r\n    const newZoom = clampValue(\r\n      this.zoom * zoomMultiplicator,\r\n      this.rootStore.diagramSettings.scaleInterval\r\n    );\r\n\r\n    const pointDisplacementAfterZoom = multiplyPoint(\r\n      subtractPoints(pointToZoomInto, this.offset),\r\n      newZoom / this.zoom\r\n    );\r\n\r\n    this.setTransformation(\r\n      // Compensate for the displacement by moving the point back under the cursor\r\n      subtractPoints(pointToZoomInto, pointDisplacementAfterZoom),\r\n      newZoom\r\n    );\r\n  };\r\n\r\n  translate = (translateBy: Point) => {\r\n    this.setOffset(addPoints(this.offset, translateBy));\r\n  };\r\n\r\n  tranlsateAndZoomInto = (\r\n    translateBy: Point,\r\n    pointToZoomInto: Point,\r\n    zoomMultiplicator: number\r\n  ) => {\r\n    this.translate(translateBy);\r\n    this.zoomInto(pointToZoomInto, zoomMultiplicator);\r\n  };\r\n\r\n  zoomIntoCenter = (zoomMultiplicator: number) => {\r\n    const diagramRealSize = this.diagramInnerRef.realSize;\r\n    if (!diagramRealSize) return;\r\n\r\n    this.rootStore.diagramState.zoomInto(\r\n      multiplyPoint(diagramRealSize, 0.5),\r\n      zoomMultiplicator\r\n    );\r\n  };\r\n\r\n  get transformString() {\r\n    return generateTransform(this.offset, this.zoom);\r\n  }\r\n}\r\n\r\nexport interface ICommonSettings {\r\n  readonly: boolean; // TODO: allow to make readonly specific components, such as nodes, links.\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Point } from '../types/common';\r\nimport { RootStore } from './rootStore';\r\nimport { PortState } from './portState';\r\n\r\nexport class LinkEndpointState {\r\n  position: Point | null = null;\r\n  nodeId: string | null = null;\r\n  portId: string | null = null;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  fromJson = (obj: LinkEndpoint) => {\r\n    if ('position' in obj) {\r\n      this.position = obj.position;\r\n      this.nodeId = null;\r\n      this.portId = null;\r\n    }\r\n    else {\r\n      this.position= null;\r\n      this.nodeId = obj.nodeId;\r\n      this.portId = obj.portId ?? null;\r\n    }\r\n  };\r\n\r\n  get port(): PortState | undefined {\r\n    if (this.nodeId && this.portId) {\r\n      const node = this.rootStore.nodesStore.nodes[this.nodeId];\r\n      if (node?.ports) {\r\n        return node.ports[this.portId];\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  get point(): Point {\r\n    if (this.nodeId) {\r\n      const node = this.rootStore.nodesStore.nodes[this.nodeId];\r\n      // TODO: Use getters\r\n      if (this.portId) {\r\n        const port = node.ports[this.portId];\r\n\r\n        if (port && port.offsetRelativeToNode && port.realSize) {\r\n          return [\r\n            node.offset[0] + port.offsetRelativeToNode[0] + port.realSize[0]/2,\r\n            node.offset[1] + port.offsetRelativeToNode[1] + port.realSize[1]/2\r\n          ];\r\n        }\r\n      }\r\n\r\n      if (node.realSize) {\r\n        return [\r\n          node.offset[0] + (node.realSize[0] / 2),\r\n          node.offset[1] + (node.realSize[1] / 2)\r\n        ];\r\n      }\r\n      else return node.offset;\r\n    } \r\n\r\n    return this.position ?? [0,0];\r\n  }\r\n\r\n  get hasOnlyPosition() : boolean {\r\n    return !!this.position && !this.nodeId;\r\n  }\r\n}\r\n\r\nexport interface ILinkNodeEndpoint {\r\n  nodeId: string;\r\n  portId?: string;\r\n}\r\n\r\nexport interface ILinkPointEndpoint {\r\n  position: Point;\r\n}\r\n\r\nexport type LinkEndpoint = ILinkNodeEndpoint | ILinkPointEndpoint;\r\n","import { makeAutoObservable } from 'mobx';\r\nimport {\r\n  IComponentDefinition,\r\n  IVisualComponentProps,\r\n  VisualComponent,\r\n  VisualComponentState,\r\n} from '.';\r\nimport { Dictionary } from '../types/common';\r\n\r\nexport class VisualComponents<\r\n  TEntity,\r\n  TComponentProps extends IVisualComponentProps<TEntity>\r\n> {\r\n  defaultType: string = componentDefaultType;\r\n  defaultComponents: Dictionary<VisualComponentState<TComponentProps>>;\r\n  components: Dictionary<VisualComponentState<TComponentProps>>;\r\n\r\n  constructor(\r\n    defaultComponents: Dictionary<\r\n      IComponentDefinition<TComponentProps> | VisualComponent<TComponentProps>\r\n    >\r\n  ) {\r\n    this.defaultComponents = this.createComponentCollection(defaultComponents);\r\n    this.components = { ...this.defaultComponents };\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson = (obj?: IVisualComponentsObject<TComponentProps>) => {\r\n    this.defaultType = obj?.defaultNodeType ?? componentDefaultType;\r\n\r\n    if (!obj?.components) {\r\n      this.components = { ...this.defaultComponents };\r\n    } else {\r\n      this.components = this.createComponentCollection(obj.components);\r\n    }\r\n  };\r\n\r\n  getComponent = (\r\n    type: string | undefined | null\r\n  ): VisualComponentState<TComponentProps> => {\r\n    const finalComponentType = type ?? this.defaultType;\r\n    return (\r\n      this.components[finalComponentType] ?? this.components[this.defaultType]\r\n    );\r\n  };\r\n\r\n  private createComponentCollection(\r\n    componentsObjects: Dictionary<\r\n      IComponentDefinition<TComponentProps> | VisualComponent<TComponentProps>\r\n    >\r\n  ): Dictionary<VisualComponentState<TComponentProps>> {\r\n    const collection: Dictionary<VisualComponentState<TComponentProps>> = {};\r\n\r\n    Object.entries(componentsObjects).forEach(([key, value]) => {\r\n      collection[key] = new VisualComponentState<TComponentProps>(value);\r\n    });\r\n\r\n    return collection;\r\n  }\r\n}\r\n\r\nexport const componentDefaultType = 'default';\r\n\r\nexport interface IVisualComponentsObject<TComponentProps> {\r\n  defaultNodeType?: string;\r\n  components: Dictionary<\r\n    IComponentDefinition<TComponentProps> | VisualComponent<TComponentProps>\r\n  >;\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Point } from '../types/common';\r\nimport { v4 } from 'uuid';\r\nimport { RootStore } from './rootStore';\r\nimport { LinkEndpoint, LinkEndpointState } from './linkEndpointState';\r\nimport { componentDefaultType } from './visualComponents';\r\n\r\nexport class LinkState {\r\n  id: string;\r\n  componentType: string = componentDefaultType;\r\n  source: LinkEndpointState;\r\n  target: LinkEndpointState;\r\n  segments?: ILinkSegment[] = [];\r\n  extra?: any = null;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore, id: string = v4()) {\r\n    this.id = id;\r\n    this.source = new LinkEndpointState(rootStore);\r\n    this.target = new LinkEndpointState(rootStore);\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  fromJson = (obj: ILinkState) => {\r\n    this.componentType = obj.componentType ?? componentDefaultType;\r\n    this.source.fromJson(obj.source);\r\n    this.target.fromJson(obj.target);\r\n    this.segments = obj.segments;\r\n    this.extra = obj.extra;\r\n  };\r\n\r\n  get path(): ILinkPath {\r\n    const { linksSettings } = this.rootStore;\r\n    const pathStr = linksSettings.pathConstructor(\r\n      this.source.point,\r\n      this.target.point,\r\n      this.source.port?.type,\r\n      this.target.port?.type\r\n    );\r\n\r\n    return {\r\n      svgPath: pathStr,\r\n      source: this.source.point,\r\n      target: this.target.point,\r\n    };\r\n  }\r\n\r\n  get componentDefinition() {\r\n    const { visualComponents } = this.rootStore.linksSettings;\r\n    return visualComponents.getComponent(this.componentType);\r\n  }\r\n\r\n  setSource(source: LinkEndpoint) {\r\n    this.source.fromJson(source);\r\n  }\r\n\r\n  setTarget(target: LinkEndpoint) {\r\n    this.target.fromJson(target);\r\n  }\r\n}\r\n\r\nexport interface ILinkState {\r\n  id?: string;\r\n  componentType?: string;\r\n  source: LinkEndpoint;\r\n  target: LinkEndpoint;\r\n  segments?: ILinkSegment[];\r\n  extra?: any;\r\n}\r\n\r\nexport interface ILinkStateObjectWithId extends ILinkState {\r\n  id: string;\r\n}\r\n\r\nexport interface ILinkSegment {\r\n  position: Point;\r\n}\r\n\r\nexport interface ILinkPath {\r\n  svgPath: string;\r\n  source: Point;\r\n  target: Point;\r\n}\r\n","import { makeAutoObservable, observable } from 'mobx';\r\nimport { Point } from '..';\r\nimport { addPoints } from '../utils';\r\nimport { LinkState } from './linkState';\r\nimport { PortState } from './portState';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport class LinkCreationState {\r\n  link: LinkState | null = null;\r\n  targetPortCandidate: PortState | null = null;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    makeAutoObservable(this, {\r\n      link: observable,\r\n      targetPortCandidate: observable,\r\n    });\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  startLinking(\r\n    portState: PortState,\r\n    eventOffsetRelativeToTarget: Point | undefined\r\n  ) {\r\n    this.link = new LinkState(this.rootStore);\r\n    this.link.setSource({\r\n      nodeId: portState.nodeId,\r\n      portId: portState.id,\r\n    });\r\n    this.link.setTarget({\r\n      position:\r\n        portState.offsetRelativeToNode &&\r\n        portState.node &&\r\n        eventOffsetRelativeToTarget\r\n          ? addPoints(\r\n              addPoints(portState.offsetRelativeToNode, portState.node.offset),\r\n              eventOffsetRelativeToTarget\r\n            )\r\n          : this.link.source.point,\r\n    });\r\n  }\r\n\r\n  setTargetPortCandidate(portState: PortState) {\r\n    if (this.link?.source && 'portId' in this.link.source) {\r\n      if (this.link.source.nodeId !== portState.nodeId) {\r\n        this.targetPortCandidate = portState;\r\n      }\r\n    }\r\n  }\r\n\r\n  resetTargetPortCandidateIfSame(portState: PortState) {\r\n    if (this.targetPortCandidate === portState) {\r\n      this.targetPortCandidate = null;\r\n    }\r\n  }\r\n\r\n  stopLinking() {\r\n    if (this.targetPortCandidate && this.link) {\r\n      this.link.setTarget({\r\n        nodeId: this.targetPortCandidate.nodeId,\r\n        portId: this.targetPortCandidate.id,\r\n      });\r\n      this.rootStore.linksStore.addLink(this.link);\r\n    }\r\n    this.targetPortCandidate = null;\r\n    this.link = null;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { ILinkVisualComponentProps } from '../states/linksSettings';\r\nimport { IComponentDefinition } from '../states/visualComponentState';\r\n\r\nexport const LinkDefault: React.FC<\r\n  ILinkVisualComponentProps<ILinkDefaultSettings>\r\n> = (props) => {\r\n  const settings = props.settings ?? linkDefaultSettings;\r\n  const { svgPath: pathStr, target } = props.path;\r\n\r\n  return (\r\n    <g>\r\n      <path\r\n        ref={props.draggableRef}\r\n        d={pathStr}\r\n        stroke={settings.color}\r\n        strokeWidth={settings.strokeWidth}\r\n        fill='none'\r\n      />\r\n      {props.entity.target.hasOnlyPosition && (\r\n        <circle\r\n          cx={target[0]}\r\n          cy={target[1]}\r\n          r={settings.cirleRadius}\r\n          fill='orange'\r\n        />\r\n      )}\r\n    </g>\r\n  );\r\n};\r\n\r\nexport interface ILinkDefaultSettings {\r\n  color: string;\r\n  strokeWidth: number;\r\n  cirleRadius: number;\r\n}\r\n\r\nconst linkDefaultSettings: ILinkDefaultSettings = {\r\n  color: 'LightBlue',\r\n  strokeWidth: 3,\r\n  cirleRadius: 3,\r\n};\r\n\r\nexport function createLinkDefault(\r\n  settings?: Partial<ILinkDefaultSettings>\r\n): IComponentDefinition<ILinkVisualComponentProps, ILinkDefaultSettings> {\r\n  const finaleSettings = {\r\n    ...linkDefaultSettings,\r\n    ...(settings ? settings : {}),\r\n  };\r\n\r\n  return {\r\n    component: LinkDefault,\r\n    settings: finaleSettings,\r\n  };\r\n}\r\n\r\n// <g>\r\n//       {/* Main line */}\r\n//       <path d={points} stroke={linkColor} strokeWidth=\"3\" fill=\"none\" />\r\n//       {/* Thick line to make selection easier */}\r\n//       <path\r\n//         d={points}\r\n//         stroke={linkColor}\r\n//         strokeWidth=\"20\"\r\n//         fill=\"none\"\r\n//         strokeLinecap=\"round\"\r\n//         strokeOpacity={isHovered || isSelected ? 0.1 : 0}\r\n//         onMouseEnter={() => onLinkMouseEnter({ config, linkId: link.id })}\r\n//         onMouseLeave={() => onLinkMouseLeave({ config, linkId: link.id })}\r\n//         onClick={(e) => {\r\n//           onLinkClick({ config, linkId: link.id })\r\n//           e.stopPropagation()\r\n//         }}\r\n//       />\r\n//     </g>\r\n","import { LinkDefault } from '../components/LinkDefault';\r\nimport {\r\n  componentDefaultType,\r\n  IVisualComponentsObject,\r\n  VisualComponents,\r\n} from './visualComponents';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { LinkState } from './linkState';\r\nimport { createCurvedLinkPathConstructor } from '../linkConstructors/curved';\r\nimport { Point } from '../types/common';\r\nimport { ILinkPath, IVisualComponentProps } from '.';\r\n\r\nexport class LinksSettings {\r\n  pathConstructor: ILinkPathConstructor = defaultPathConstructor;\r\n  visualComponents: VisualComponents<\r\n    LinkState,\r\n    ILinkVisualComponentProps\r\n  > = new VisualComponents<LinkState, ILinkVisualComponentProps>({\r\n    [componentDefaultType]: LinkDefault,\r\n  });\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson = (obj?: ILinksSettings) => {\r\n    this.visualComponents.fromJson(obj);\r\n    this.pathConstructor = obj?.pathConstructor ?? defaultPathConstructor;\r\n  };\r\n}\r\n\r\nconst defaultPathConstructor = createCurvedLinkPathConstructor();\r\n\r\nexport interface ILinkVisualComponentProps<TSettings extends {} = {}>\r\n  extends IVisualComponentProps<LinkState, TSettings> {\r\n  draggableRef: React.RefObject<any>;\r\n  path: ILinkPath;\r\n}\r\n\r\nexport interface ILinksSettings\r\n  extends IVisualComponentsObject<ILinkVisualComponentProps> {\r\n  pathConstructor: ILinkPathConstructor;\r\n}\r\n\r\nexport type ILinkPathConstructor = (\r\n  source: Point,\r\n  target: Point,\r\n  sourcePortType: string | undefined,\r\n  targetPortType: string | undefined\r\n) => string;\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { v4 } from 'uuid';\r\nimport { Dictionary } from '../types/common';\r\nimport { LinkCreationState } from './linkCreationState';\r\nimport { ILinkState, LinkState } from './linkState';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport class LinksStore {\r\n  links: Dictionary<LinkState> = {};\r\n  linkCreation: LinkCreationState;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.linkCreation = new LinkCreationState(rootStore);\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  fromJson = (newLinks?: ILinkState[]) => {\r\n    this.links = {};\r\n    if (newLinks) {\r\n      newLinks.forEach((linkState) => {\r\n        const newLink = new LinkState(this.rootStore, linkState.id);\r\n        newLink.fromJson(linkState);\r\n        this.links[newLink.id] = newLink;\r\n      });\r\n    }\r\n  };\r\n\r\n  addLinkFromJson = (link: ILinkState) => {\r\n    const id = link.id ?? v4();\r\n\r\n    if (!this.links[id]) {\r\n      this.links[id] = new LinkState(this.rootStore, id);\r\n    }\r\n\r\n    this.links[id].fromJson(link);\r\n  };\r\n\r\n  addLink = (link: LinkState) => {\r\n    this.links[link.id] = link;\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { INodeVisualComponentProps } from '../states/nodesSettings';\r\nimport { useRootStore } from '../hooks/useRootStore';\r\nimport { PortsSettings } from '../states/portsSettings';\r\nimport { IComponentDefinition, PortState } from '../states';\r\nimport { Dictionary, RelativePosition } from '..';\r\n\r\nexport interface INodeDefaultSettings {\r\n  style: React.CSSProperties;\r\n}\r\n\r\nexport const NodeDefault: React.FC<\r\n  INodeVisualComponentProps<INodeDefaultSettings>\r\n> = ({ entity, settings, draggableRef }) => {\r\n  const { portsSettings } = useRootStore();\r\n\r\n  return (\r\n    <div\r\n      ref={draggableRef}\r\n      className='react_fast_diagram_Node_Default'\r\n      style={settings?.style}\r\n    >\r\n      <span>{entity.id}</span>\r\n\r\n      {generatePortsContainer(portsSettings, entity.ports, 'left', 'left')}\r\n      {generatePortsContainer(portsSettings, entity.ports, 'top', 'top')}\r\n      {generatePortsContainer(portsSettings, entity.ports, 'right', 'right')}\r\n      {generatePortsContainer(portsSettings, entity.ports, 'bottom', 'bottom')}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport function generatePortsContainer(\r\n  portsSettings: PortsSettings,\r\n  ports: Dictionary<PortState>,\r\n  portsType: string,\r\n  position: RelativePosition\r\n) {\r\n  const portsToShow = Object.values(ports).filter(\r\n    (port) => port.type === portsType\r\n  );\r\n  const portsContainer = portsSettings.portsContainerVisualComponents.getComponent(\r\n    position === 'left' || position === 'right' ? 'vertical' : 'horizontal'\r\n  );\r\n\r\n  return (\r\n    portsToShow && (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: position === 'left' ? 0 : undefined,\r\n          top:\r\n            position === 'left' || position === 'right' || position === 'top'\r\n              ? 0\r\n              : undefined,\r\n          right: position === 'right' ? 0 : undefined,\r\n          bottom: position === 'bottom' ? 0 : undefined,\r\n          height:\r\n            position === 'left' || position === 'right' ? '100%' : undefined,\r\n          width:\r\n            position === 'top' || position === 'bottom' ? '100%' : undefined,\r\n        }}\r\n      >\r\n        <portsContainer.component\r\n          entity={portsToShow}\r\n          settings={portsContainer.settings}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport function createNodeDefault(\r\n  settings?: INodeDefaultSettings\r\n): IComponentDefinition<\r\n  INodeVisualComponentProps<INodeDefaultSettings>,\r\n  INodeDefaultSettings\r\n> {\r\n  return {\r\n    component: NodeDefault,\r\n    settings,\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { componentDefaultType, IVisualComponentProps } from '..';\r\nimport { NodeDefault } from '../components/NodeDefault';\r\nimport { NodeState } from './nodeState';\r\nimport {\r\n  IVisualComponentsObject,\r\n  VisualComponents,\r\n} from './visualComponents';\r\n\r\nexport class NodesSettings {\r\n  visualComponents: VisualComponents<\r\n    NodeState,\r\n    INodeVisualComponentProps\r\n  > = new VisualComponents<NodeState, INodeVisualComponentProps>({\r\n    [componentDefaultType]: NodeDefault,\r\n  });\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson = (obj?: INodesSettings) => {\r\n    this.visualComponents.fromJson(obj);\r\n  };\r\n}\r\n\r\nexport interface INodeVisualComponentProps<TSettings extends {} = {}>\r\n  extends IVisualComponentProps<NodeState, TSettings> {\r\n  draggableRef: React.RefObject<any>;\r\n}\r\n\r\nexport interface INodesSettings\r\n  extends IVisualComponentsObject<INodeVisualComponentProps> {}\r\n","import { Point } from '../types/common';\r\nimport { v4 } from 'uuid';\r\nimport { autorun, makeAutoObservable } from 'mobx';\r\nimport { HtmlElementRefState } from './htmlElementRefState';\r\nimport { componentDefaultType, NodeState, RootStore } from '.';\r\n\r\nexport class PortState {\r\n  id: string = '';\r\n  nodeId: string = ''\r\n  label?: string = '';\r\n  type: string = '';\r\n  ref: HtmlElementRefState;\r\n  dragging: boolean = false;\r\n  hovered: boolean = false;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore, id: string = v4(), nodeId : string = v4()) {\r\n    this.id = id;\r\n    this.nodeId = nodeId;\r\n    this.ref = new HtmlElementRefState(null);\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n    // autorun(() => {\r\n    //   console.log(`Port '${this.nodeId + ' - ' + this.id}'. Offset: ${JSON.stringify(this.offsetRelativeToNode)}. Size: ${JSON.stringify(this.realSize)}`)\r\n    // })\r\n  }\r\n\r\n  fromJson = (obj: IPortState) => {\r\n    this.type = obj.type ?? componentDefaultType;\r\n    this.label = obj.label;\r\n  }\r\n\r\n  get node() : NodeState | undefined {\r\n    return this.rootStore.nodesStore.nodes[this.nodeId];\r\n  }\r\n  \r\n  get offsetRelativeToNode(): Point | null {\r\n    if (this.node?.ref.current) {\r\n      return this.ref.offsetRelativeToParent(this.node.ref.current);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  get realSize() : Point | null {\r\n    return this.ref.realSize;\r\n  }\r\n}\r\n\r\nexport interface IPortState {\r\n  label?: string;\r\n  type?: string;\r\n}\r\n","import { Dictionary, Point } from '../types/common';\r\nimport { autorun, makeAutoObservable } from 'mobx';\r\nimport { IPortState, PortState } from './portState';\r\nimport { v4 } from 'uuid';\r\nimport { generateTransform } from '../utils';\r\nimport { RootStore } from './rootStore';\r\nimport { HtmlElementRefState } from './htmlElementRefState';\r\nimport { componentDefaultType } from './visualComponents';\r\n\r\nexport class NodeState {\r\n  id: string = '';\r\n  offset: Point = [0,0];\r\n  ports: Dictionary<PortState> = {};\r\n  ref: HtmlElementRefState;\r\n  componentType: string = componentDefaultType;\r\n  extra?: any = null;\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore, id: string = v4()) { \r\n    this.id = id;\r\n    this.ref = new HtmlElementRefState(null);\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n    // autorun(() => {\r\n    //   console.log(`Node '${this.id}'. Offset: ${JSON.stringify(this.offset)}. Size: ${JSON.stringify(this.realSize)}`)\r\n    // })\r\n  }\r\n\r\n  setOffset = (newOffset: Point) => {\r\n    this.offset = newOffset;\r\n  }\r\n\r\n  fromJson = (obj: INodeState) => {\r\n    this.offset = obj.position;\r\n    this.componentType = obj.componentType ?? componentDefaultType;\r\n    this.extra = obj.extra;\r\n\r\n    this.ports = {};\r\n    if (obj.ports && Object.keys(obj.ports).length > 0) {\r\n      Object.entries(obj.ports).forEach(([portId, portObj]) => {\r\n        const portState = new PortState(this.rootStore, portId, this.id);\r\n        portState.fromJson(portObj);\r\n        this.ports[portId] = portState;\r\n      });\r\n    }\r\n  }\r\n\r\n  get transformString() {\r\n    return generateTransform(this.offset);\r\n  }\r\n\r\n  get componentDefinition() {\r\n    const { visualComponents } = this.rootStore.nodesSettings;\r\n    return visualComponents.getComponent(this.componentType);\r\n  }\r\n\r\n  get realSize() : Point | null {\r\n    return this.ref.realSize;\r\n  }\r\n}\r\n\r\nexport interface INodeState {\r\n  id?: string;\r\n  position: Point;\r\n  ports?: Dictionary<IPortState>;\r\n  componentType?: string;\r\n  extra?: any;\r\n}\r\n","import { Dictionary } from '../types/common';\r\nimport { makeAutoObservable, observable } from 'mobx';\r\nimport { INodeState, NodeState } from './nodeState';\r\nimport { RootStore } from './rootStore';\r\nimport { v4 } from 'uuid';\r\n\r\nexport class NodesStore {\r\n  nodes: Dictionary<NodeState> = {};\r\n\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    makeAutoObservable(this);\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  fromJson = (newNodes?: INodeState[]) => {\r\n    this.nodes = {};\r\n    if (newNodes) {\r\n      newNodes.forEach(node => {\r\n        const newNode = new NodeState(this.rootStore, node.id);\r\n        newNode.fromJson(node);\r\n        this.nodes[newNode.id] = newNode;\r\n      });\r\n    }\r\n  }\r\n\r\n  addNode = (node: INodeState) => {\r\n    const id = node.id ?? v4();\r\n\r\n    if (!this.nodes[id]) {\r\n      this.nodes[id] = new NodeState(this.rootStore, id);\r\n    }\r\n    \r\n    this.nodes[id].fromJson(node);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { PortState } from '../states';\r\nimport { usePortUserInteraction } from '../hooks/userInteractions/usePortUserInteraction';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const PortWrapper: React.FC<{ port: PortState }> = observer(\r\n  ({ port }) => {\r\n    const { userInteractionElemRef } = usePortUserInteraction(port);\r\n\r\n    return (\r\n      <div\r\n        ref={{\r\n          set current(value: HTMLDivElement) {\r\n            userInteractionElemRef.current = value;\r\n            port.ref.current = value;\r\n          },\r\n        }}\r\n        id={port.nodeId + ':' + port.id}\r\n        className='react_fast_diagram_PortWrapper'\r\n      >\r\n        <div\r\n          style={{\r\n            width: 10,\r\n            height: 10,\r\n            backgroundColor: port.dragging || port.hovered ? '#f84949': '#6eb7ff',\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useRef } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { Point } from '../..';\r\nimport { PortState } from '../../states/portState';\r\nimport { useNotifyRef } from '../useNotifyRef';\r\nimport { useRootStore } from '../useRootStore';\r\nimport { useUserAbilityToSelectSwitcher } from './useUserAbilityToSelectSwitcher';\r\n\r\nexport const usePortUserInteraction = (\r\n  portState: PortState,\r\n  enable?: boolean\r\n): IUsePortUserInteractionResult => {\r\n  const {\r\n    linksStore: { linkCreation },\r\n    diagramState,\r\n  } = useRootStore();\r\n\r\n  // Should trigger rendering on change, otherwise useUserSelectSwitcher will not be invoked\r\n  const activeRef = useNotifyRef(false);\r\n  const userInteractionElemRef = useRef<HTMLDivElement>(\r\n    null\r\n  ) as React.MutableRefObject<HTMLDivElement | null>;\r\n\r\n  useGesture(\r\n    {\r\n      onDrag: ({ pinching, delta }) => {\r\n        if (!portState.dragging || pinching || !linkCreation.link) {\r\n          return;\r\n        }\r\n        const parentScale = diagramState.zoom;\r\n        linkCreation.link.setTarget({\r\n          position: [\r\n            linkCreation.link.target.point[0] + delta[0] / parentScale,\r\n            linkCreation.link.target.point[1] + delta[1] / parentScale,\r\n          ],\r\n        });\r\n      },\r\n      onDragStart: ({ event }) => {\r\n        // Important! Otherwise on touch display onPointerEnter will not work!\r\n        const portHtmlElement = event.target as Element;\r\n        portHtmlElement.releasePointerCapture(event.pointerId);\r\n\r\n        portState.dragging = true;\r\n\r\n        let eventOffsetRelativeToTarget;\r\n        // On the old browser these properties could be not available\r\n        if('offsetX' in event && 'offsetY' in event) {\r\n          eventOffsetRelativeToTarget = [event.offsetX, event.offsetY] as Point\r\n        }\r\n\r\n        linkCreation.startLinking(portState, eventOffsetRelativeToTarget);\r\n      },\r\n      onDragEnd: () => {\r\n        portState.dragging = false;\r\n        linkCreation.stopLinking();\r\n      },\r\n      onPointerEnter: () => {\r\n        portState.hovered = true;\r\n        linkCreation.setTargetPortCandidate(portState);\r\n      },\r\n      onPointerLeave: () => {\r\n        portState.hovered = false;\r\n        linkCreation.resetTargetPortCandidateIfSame(portState);\r\n      },\r\n    },\r\n    {\r\n      domTarget: userInteractionElemRef,\r\n      eventOptions: { passive: false },\r\n      enabled: enable,\r\n    }\r\n  );\r\n\r\n  useUserAbilityToSelectSwitcher(\r\n    portState.dragging,\r\n    userInteractionElemRef.current?.ownerDocument?.body\r\n  );\r\n\r\n  return {\r\n    active: portState.dragging,\r\n    userInteractionElemRef,\r\n  };\r\n};\r\n\r\nexport interface IUsePortUserInteractionResult {\r\n  active: boolean;\r\n  userInteractionElemRef: React.MutableRefObject<HTMLDivElement | null>;\r\n}\r\n","import React from 'react';\r\nimport { PortWrapper } from './PortWrapper';\r\nimport { IPortsContainerVisualComponentProps } from '../states/portsSettings';\r\nimport { IComponentDefinition } from '../states/visualComponentState';\r\n\r\nexport interface IPortsContainerDefaultSettings {\r\n  style?: React.CSSProperties;\r\n  direction: 'horizontal' | 'vertical';\r\n  gapBetweenPorts: string;\r\n}\r\n\r\nexport const PortsContainerDefault: React.FC<\r\n  IPortsContainerVisualComponentProps<IPortsContainerDefaultSettings>\r\n> = ({ entity, settings }) => {\r\n  const finalSettings = {\r\n    ...portsContainerDefaultSettings,\r\n    ...settings,\r\n  };\r\n\r\n  let className = 'react_fast_diagram_flex_gap ';\r\n  if (finalSettings.direction === 'horizontal') {\r\n    className += 'react_fast_diagram_flex_gap_x'\r\n  }\r\n  else {\r\n    className += 'react_fast_diagram_flex_gap_y';\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={{\r\n      // @ts-ignore\r\n      '--gap': finalSettings.gapBetweenPorts\r\n    }}>\r\n      {Object.values(entity).map((port) => (\r\n        <PortWrapper key={port.id} port={port} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport function createPortsContainerDefault(\r\n  settings?: Partial<IPortsContainerDefaultSettings>\r\n): IComponentDefinition<\r\n  IPortsContainerVisualComponentProps,\r\n  IPortsContainerDefaultSettings\r\n> {\r\n  return {\r\n    component: PortsContainerDefault,\r\n    settings: {\r\n      ...portsContainerDefaultSettings,\r\n      ...settings\r\n    }\r\n  };\r\n}\r\n\r\nconst portsContainerDefaultSettings: IPortsContainerDefaultSettings = {\r\n  direction: 'horizontal',\r\n  gapBetweenPorts: '8px',\r\n};\r\n","import {\r\n  IVisualComponentsObject,\r\n  VisualComponents,\r\n} from './visualComponents';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { PortState } from './portState';\r\nimport { createPortsContainerDefault } from '../components/PortsContainerDefault';\r\nimport { IVisualComponentProps } from './visualComponentState';\r\n\r\nexport class PortsSettings {\r\n  portsContainerVisualComponents: VisualComponents<\r\n    PortState[],\r\n    IPortsContainerVisualComponentProps\r\n  > = new VisualComponents<PortState[], IPortsContainerVisualComponentProps>({\r\n    horizontal: createPortsContainerDefault({ direction: 'horizontal' }),\r\n    vertical: createPortsContainerDefault({ direction: 'vertical' }),\r\n  });\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson = (obj?: IPortsSettings) => {\r\n    this.portsContainerVisualComponents.fromJson(obj?.portsContainerComponents);\r\n  };\r\n}\r\n\r\nexport interface IPortsContainerVisualComponentProps<TSettings extends {} = {}>\r\n  extends IVisualComponentProps<PortState[], TSettings> {}\r\n\r\nexport interface IPortsSettings {\r\n  portsContainerComponents: IVisualComponentsObject<IPortsContainerVisualComponentProps>;\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport class VisualComponentState<TComponentProps> {\r\n  component: VisualComponent<TComponentProps>;\r\n  settings: object = {};\r\n\r\n  constructor(\r\n    newComponent:\r\n      | IComponentDefinition<TComponentProps>\r\n      | VisualComponent<TComponentProps>\r\n  ) {\r\n    this.fromJson(newComponent);\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson(\r\n    newComponent:\r\n      | IComponentDefinition<TComponentProps>\r\n      | VisualComponent<TComponentProps>\r\n  ) {\r\n    if ('component' in newComponent) {\r\n      this.component = observer(newComponent.component);\r\n      this.settings = newComponent.settings ?? {};\r\n    } else {\r\n      this.component = observer(newComponent);\r\n      this.settings = {};\r\n    }\r\n  }\r\n}\r\n\r\nexport interface IVisualComponentProps<TEntity, TSettings extends {} = {}> {\r\n  entity: TEntity;\r\n  settings?: TSettings;\r\n}\r\n\r\nexport type VisualComponent<\r\n  TComponentProps\r\n> = React.FunctionComponent<TComponentProps>;\r\n\r\nexport interface IComponentDefinition<\r\n  TComponentProps,\r\n  TSettings extends {} = {}\r\n> {\r\n  component: VisualComponent<TComponentProps>;\r\n  settings?: TSettings;\r\n}\r\n","import { makeAutoObservable, makeObservable, action } from 'mobx';\r\nimport {\r\n  IComponentDefinition,\r\n  VisualComponent,\r\n  VisualComponentState,\r\n} from './visualComponentState';\r\n\r\nexport class VisualComponentWithDefault<TComponentProps> {\r\n  private _innerComponent: VisualComponentState<TComponentProps>;\r\n  private _defaultComponent: VisualComponentState<TComponentProps>;\r\n\r\n  constructor(defaultComponent: IComponentDefinition<TComponentProps>) {\r\n    this._innerComponent = new VisualComponentState<TComponentProps>(\r\n      defaultComponent\r\n    );\r\n    this._defaultComponent = this._innerComponent;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get component() {\r\n    return this._innerComponent.component;\r\n  }\r\n\r\n  get settings() {\r\n    return this._innerComponent.settings;\r\n  }\r\n\r\n  fromJson(\r\n    newComponent?:\r\n      | IComponentDefinition<TComponentProps>\r\n      | VisualComponent<TComponentProps>\r\n  ) {\r\n    this._innerComponent = newComponent\r\n      ? new VisualComponentState<TComponentProps>(newComponent)\r\n      : this._defaultComponent;\r\n  }\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Point } from '../types/common';\r\nimport { createDefaultBackground } from '../components/BackgroundDefault';\r\nimport { DiagramApi, IComponentDefinition, VisualComponent } from '.';\r\nimport { createDefaultMiniControl } from '..';\r\nimport { VisualComponentWithDefault } from './visualComponentWithDefault';\r\n\r\nexport class DiagramSettings {\r\n  backgroundComponentState: VisualComponentWithDefault<IBackgroundComponentProps>;\r\n  miniControlComponentState: VisualComponentWithDefault<IMiniControlComponentProps>;\r\n  scaleInterval: Point = defaultScaleInterval;\r\n\r\n  constructor() {\r\n    this.backgroundComponentState = new VisualComponentWithDefault<IBackgroundComponentProps>(\r\n      createDefaultBackground()\r\n    );\r\n    this.miniControlComponentState = new VisualComponentWithDefault<IMiniControlComponentProps>(\r\n      createDefaultMiniControl()\r\n    );\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  fromJson(obj?: IDiagramSettings) {\r\n    this.backgroundComponentState.fromJson(obj?.backgroundComponent);\r\n    this.miniControlComponentState.fromJson(obj?.miniControlComponent);\r\n    this.scaleInterval = obj?.scaleInterval ?? defaultScaleInterval;\r\n  }\r\n}\r\n\r\nconst defaultScaleInterval: Point = [0.1, 3];\r\n\r\nexport interface IDiagramSettings {\r\n  backgroundComponent?:\r\n    | IComponentDefinition<IBackgroundComponentProps>\r\n    | VisualComponent<IBackgroundComponentProps>;\r\n  miniControlComponent?:\r\n    | IComponentDefinition<IMiniControlComponentProps>\r\n    | VisualComponent<IMiniControlComponentProps>;\r\n  scaleInterval?: Point;\r\n}\r\n\r\nexport interface IBackgroundComponentProps<TSettings = {}> {\r\n  diagramOffset: Point;\r\n  diagramZoom: number;\r\n  settings?: TSettings;\r\n}\r\n\r\nexport interface IMiniControlComponentProps<TSettings = {}> {\r\n  diagramApi: DiagramApi;\r\n  settings?: TSettings;\r\n}\r\n","import { DiagramApi } from './diagramApi';\r\nimport { DiagramSettings } from './diagramSettings';\r\nimport { DiagramState } from './diagramState';\r\nimport { LinksSettings } from './linksSettings';\r\nimport { LinksStore } from './linksStore';\r\nimport { NodesSettings } from './nodesSettings';\r\nimport { NodesStore } from './nodesStore';\r\nimport { PortsSettings } from './portsSettings';\r\n\r\nexport class RootStore {\r\n  diagramState: DiagramState;\r\n  \r\n  nodesStore: NodesStore;\r\n  linksStore: LinksStore;\r\n  \r\n  diagramSettings: DiagramSettings;\r\n  nodesSettings: NodesSettings;\r\n  portsSettings: PortsSettings;\r\n  linksSettings: LinksSettings;\r\n  \r\n  diagramApi: DiagramApi;\r\n\r\n  constructor() {\r\n    this.diagramState = new DiagramState(this);\r\n\r\n    this.nodesStore = new NodesStore(this);\r\n    this.linksStore = new LinksStore(this);\r\n\r\n    this.diagramSettings = new DiagramSettings();\r\n    this.nodesSettings = new NodesSettings();\r\n    this.linksSettings = new LinksSettings();\r\n    this.portsSettings = new PortsSettings();\r\n\r\n    this.diagramApi = new DiagramApi(this);\r\n  }\r\n}\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport { InnerDiagram } from './DiagramInner';\r\nimport '../Diagram.css';\r\nimport { RootStore } from '../states/rootStore';\r\nimport { DiagramApi, ISettings } from '../states/diagramApi';\r\nimport { INodeState } from '../states/nodeState';\r\nimport { ILinkState } from '../states/linkState';\r\n\r\nimport '../Diagram.css';\r\n\r\nexport const RootStoreContext = React.createContext<RootStore | null>(null);\r\n\r\nexport const Diagram: React.FC<IDiagramProps> = (props) => {\r\n  const rootStore = useMemo(() => {\r\n    const store = new RootStore();\r\n    store.diagramApi.reinitState(\r\n      props.initState?.nodes ?? [],\r\n      props.initState?.links ?? []\r\n    );\r\n    props.settings && store.diagramApi.reinitSettings(props.settings);\r\n    return store;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.apiRef) {\r\n      props.apiRef.current = rootStore.diagramApi;\r\n    }\r\n  }, [rootStore, props.apiRef]);\r\n\r\n  return (\r\n    <RootStoreContext.Provider value={rootStore}>\r\n      <InnerDiagram />\r\n    </RootStoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport interface IDiagramProps {\r\n  settings?: ISettings;\r\n  initState?: IDiagramInitState;\r\n  apiRef?: React.MutableRefObject<DiagramApi | null>;\r\n}\r\n\r\nexport interface IDiagramInitState {\r\n  nodes: INodeState[];\r\n  links: ILinkState[];\r\n}\r\n\r\nDiagram.displayName = 'Diagram';\r\n","import { useContext } from \"react\";\r\nimport { RootStoreContext } from \"../components/Diagram\";\r\nimport { RootStore } from \"../states/rootStore\";\r\n\r\nexport const useRootStore = () => useContext(RootStoreContext) as RootStore;","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useRootStore } from '../hooks/useRootStore';\r\n\r\nexport const BackgroundWrapper = observer(() => {\r\n  const { diagramSettings, diagramState } = useRootStore();\r\n\r\n  return (\r\n    <div className='react_fast_diagram_BackgroundWrapper'>\r\n      <diagramSettings.backgroundComponentState.component\r\n        diagramOffset={diagramState.offset}\r\n        diagramZoom={diagramState.zoom}\r\n        settings={diagramSettings.backgroundComponentState.settings}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport {\r\n  CornerPosition,\r\n  IComponentDefinition,\r\n  IMiniControlComponentProps,\r\n} from '..';\r\n\r\nconst MiniControlDefault: React.FC<\r\n  IMiniControlComponentProps<IMiniControlDefaultSettings>\r\n> = ({ diagramApi, settings }) => {\r\n  settings = settings ?? defaultSettings;\r\n\r\n  return (\r\n    <div\r\n      className='react_fast_diagram_Minicontrol_Default'\r\n      style={{\r\n        ...getOffsetStyles(settings),\r\n        ...settings?.containerStyle,\r\n      }}\r\n    >\r\n      {settings.buttons.zoomIn && (\r\n        <MiniControlButton\r\n          size={settings.buttonsSize}\r\n          onClick={diagramApi.zoomIn}\r\n          children='+'\r\n        />\r\n      )}\r\n      {settings.buttons.zoomOut && (\r\n        <MiniControlButton\r\n          size={settings.buttonsSize}\r\n          onClick={diagramApi.zoomOut}\r\n          children='-'\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getOffsetStyles(settings: IMiniControlDefaultSettings) {\r\n  return {\r\n    top:\r\n      settings.position == 'left-top' || settings.position == 'right-top'\r\n        ? settings.parentOffset\r\n        : undefined,\r\n    right:\r\n      settings.position == 'right-bottom' || settings.position == 'right-top'\r\n        ? settings.parentOffset\r\n        : undefined,\r\n    bottom:\r\n      settings.position == 'left-bottom' || settings.position == 'right-bottom'\r\n        ? settings.parentOffset\r\n        : undefined,\r\n    left:\r\n      settings.position == 'left-top' || settings.position == 'left-bottom'\r\n        ? settings.parentOffset\r\n        : undefined,\r\n  };\r\n}\r\n\r\nconst MiniControlButton: React.FC<{ size: number; onClick: () => any }> = (\r\n  props\r\n) => (\r\n  <div\r\n    onClick={props.onClick}\r\n    className='react_fast_diagram_Minicontrol_Default_Btn'\r\n    style={{\r\n      width: props.size + 'px',\r\n      height: props.size + 'px',\r\n    }}\r\n  >\r\n    <span>{props.children}</span>\r\n  </div>\r\n);\r\n\r\nexport const createDefaultMiniControl = (\r\n  settings?: Partial<IMiniControlDefaultSettings>\r\n): IComponentDefinition<\r\n  IMiniControlComponentProps,\r\n  IMiniControlDefaultSettings\r\n> => {\r\n  const finalSettings = {\r\n    ...defaultSettings,\r\n    ...(settings ? settings : {}),\r\n  };\r\n\r\n  return {\r\n    component: MiniControlDefault,\r\n    settings: finalSettings,\r\n  };\r\n};\r\n\r\nconst defaultSettings: IMiniControlDefaultSettings = {\r\n  position: 'left-bottom',\r\n  containerStyle: {},\r\n  buttonsSize: 30,\r\n  buttons: {\r\n    zoomIn: true,\r\n    zoomOut: true,\r\n  },\r\n  parentOffset: 20,\r\n};\r\n\r\nexport interface IMiniControlDefaultSettings {\r\n  position: CornerPosition;\r\n  containerStyle: React.CSSProperties;\r\n  buttons: ButtonsValue<boolean>;\r\n  buttonsSize: number;\r\n  parentOffset: number;\r\n}\r\n\r\ninterface ButtonsValue<TValue> {\r\n  zoomIn?: TValue;\r\n  zoomOut?: TValue;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Tune } from '@material-ui/icons';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Box, Button, TextField, Typography } from '@material-ui/core';\r\nimport { IDiagramInitState, ILinkState, INodeState } from '@react-easy-diagram/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '-8px 0',\r\n    '& > *': {\r\n      margin: '8px 0'\r\n    }\r\n  },\r\n  visibilityBtn: {\r\n    borderRadius: '25px',\r\n    minWidth: '24px',\r\n    padding: '8px 8px',\r\n    backgroundColor: 'white',\r\n  },\r\n  header: {\r\n    marginBottom: '15px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '0 -14px',\r\n    '& > *': {\r\n      margin: '0 14px'\r\n    }\r\n  },\r\n}));\r\n\r\nconst generateLargeDiagram = (colNum: number, rowNum: number): IDiagramInitState => {\r\n  const nodes : INodeState[] = [];\r\n  const links : ILinkState[] = [];\r\n  const getNodeId = (i: number,j: number) => `node_${i}_${j}`;\r\n\r\n  for (let i = 0; i < colNum; i++) {\r\n    for (let j = 0; j < rowNum; j++) {\r\n      nodes.push({\r\n        id: getNodeId(i,j),\r\n        position: [i * 120, j * 120 ],\r\n        ports: {\r\n          left: {type: 'left'},\r\n          top: {type: 'top'},\r\n          right: {type: 'right'},\r\n          bottom: {type: 'bottom'},\r\n        }\r\n      });\r\n      if (i - 1 >= 0) {\r\n        links.push({\r\n          source: {\r\n            nodeId: getNodeId(i - 1,j),\r\n            portId: 'right'\r\n          },\r\n          target: {\r\n            nodeId: getNodeId(i,j),\r\n            portId: 'left'\r\n          }\r\n        });\r\n      }\r\n      if (j - 1 >= 0) {\r\n        links.push({\r\n          source: {\r\n            nodeId: getNodeId(i,j - 1),\r\n            portId: 'bottom'\r\n          },\r\n          target: {\r\n            nodeId: getNodeId(i,j),\r\n            portId: 'top'\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return {nodes,links};\r\n};\r\n\r\nexport interface ControlPanelProps{\r\n  reinitState?(nodes: INodeState[], links: ILinkState[]): void;\r\n}\r\n\r\nexport const ControlPanel = (props: ControlPanelProps) => {\r\n  const classes = useStyles();\r\n\r\n  const [row, setRow] = useState(10);\r\n  const [col, setCol] = useState(10);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (props.reinitState) {\r\n      const newState = generateLargeDiagram(row, col);\r\n      props.reinitState(newState.nodes, newState.links);\r\n    }\r\n  };\r\n\r\n  if (visible) {\r\n    return (\r\n      <Box padding={3} clone>\r\n        <Card>\r\n          <div className={classes.header}>\r\n            <Button\r\n              className={classes.visibilityBtn}\r\n              variant='outlined'\r\n              aria-label='control-panel'\r\n              onClick={() => setVisible(false)}\r\n            >\r\n              <Tune />\r\n            </Button>\r\n            <Typography variant='h5'>Control Panel</Typography>\r\n          </div>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            autoComplete='off'\r\n            onSubmit={onFormSubmit}\r\n          >\r\n            <TextField\r\n              id='rows'\r\n              value={row}\r\n              type='number'\r\n              label='Rows'\r\n              variant='outlined'\r\n              onChange={(e) => setRow(parseInt(e.target.value))}\r\n            />\r\n            <TextField\r\n              id='columns'\r\n              value={col}\r\n              type='number'\r\n              label='Columns'\r\n              variant='outlined'\r\n              onChange={(e) => setCol(parseInt(e.target.value))}\r\n            />\r\n            <Button variant='contained' type='submit'>\r\n              Generate new Diagram\r\n            </Button>\r\n          </form>\r\n        </Card>\r\n      </Box>\r\n    );\r\n  } else {\r\n    return (\r\n      <Button\r\n        variant='outlined'\r\n        className={classes.visibilityBtn}\r\n        aria-label='control-panel'\r\n        onClick={() => setVisible(true)}\r\n      >\r\n        <Tune />\r\n      </Button>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { createCurvedLinkPathConstructor, createDefaultBackground, createDefaultMiniControl, createImageWithCrosses, createLinkDefault, IDiagramInitState, useDiagram } from '@react-easy-diagram/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\nimport { ControlPanel } from './ControlPanel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  diagram: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n  },\r\n  controlPanel: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n  },\r\n}));\r\n\r\nexport const App = () => {\r\n  const classes = useStyles();\r\n  const { Diagram, apiRef } = useDiagram(initState, {\r\n    links: {\r\n      components: {\r\n        default: createLinkDefault(),\r\n        attention: createLinkDefault({color: 'red'})\r\n      },\r\n      pathConstructor: createCurvedLinkPathConstructor()\r\n    },\r\n    diagram: {\r\n      miniControlComponent: createDefaultMiniControl({\r\n        buttonsSize: 30,\r\n        position: 'left-bottom'\r\n      })\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Box className={classes.diagram}>\r\n      <Diagram />\r\n      <Box className={classes.controlPanel}>\r\n        <ControlPanel reinitState={apiRef.current?.reinitState} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst initState: IDiagramInitState = {\r\n  nodes: [\r\n    {\r\n      id: 'Node 1',\r\n      position: [300, 300],\r\n      ports: {\r\n        'output_1': {type: 'bottom'}, \r\n      }\r\n    },\r\n    {\r\n      id: 'Node 2',\r\n      position: [520, 400],\r\n      ports: {\r\n        'input_1': {type: 'top'}, \r\n        'input_2': {type: 'top'}, \r\n        'output_1': {type: 'right'}, \r\n        'output_2': {type: 'right'}, \r\n        'output_3': {type: 'right'}, \r\n      }\r\n    },\r\n    {\r\n      id: 'Node 3',\r\n      position: [520, 200],\r\n      ports: {\r\n        'input_1': {type: 'top'}, \r\n        'output_1': {type: 'bottom'}, \r\n        'output_2': {type: 'bottom'}, \r\n      }\r\n    },\r\n  ],\r\n  links: [\r\n    {\r\n      source: {\r\n        nodeId: 'Node 2',\r\n      },\r\n      target: {\r\n        nodeId: 'Node 1',\r\n      },\r\n      componentType: 'attention',\r\n    },\r\n  ],\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport {\r\n  Diagram,\r\n  IDiagramInitState\r\n} from '../components/Diagram';\r\nimport { DiagramApi, ISettings } from '../states/diagramApi';\r\nimport { useNotifyRef } from './useNotifyRef';\r\n\r\nexport const useDiagram = (\r\n  initState?: IDiagramInitState,\r\n  settings?: ISettings\r\n) => {\r\n  const apiRef = useNotifyRef<DiagramApi | null>(null);\r\n\r\n  const obj = useMemo(\r\n    () => ({\r\n      Diagram: () => (\r\n        <Diagram apiRef={apiRef} initState={initState} settings={settings} />\r\n      ),\r\n      apiRef,\r\n    }),\r\n    []\r\n  );\r\n\r\n  return obj;\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}