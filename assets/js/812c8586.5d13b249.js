(self["webpackChunkwebsite"] = self["webpackChunkwebsite"] || []).push([[542],{

/***/ 6875:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ Example; }
});

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__(7378);
// EXTERNAL MODULE: ./src/pages/examples/_exampleWrapper.jsx
var _exampleWrapper = __webpack_require__(1713);
// EXTERNAL MODULE: ../node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js + 11 modules
var CodeBlock = __webpack_require__(842);
// EXTERNAL MODULE: ./src/pages/examples/_diagramContainer.jsx
var _diagramContainer = __webpack_require__(7709);
;// CONCATENATED MODULE: ../node_modules/raw-loader/dist/cjs.js!./src/pages/examples/_configureUserInteractionDiagram.tsx
/* harmony default export */ var _configureUserInteractionDiagram = ("import React from 'react';\r\nimport {\r\n  Diagram,\r\n  INodeVisualComponentProps,\r\n  IUserInteraction,\r\n  useRootStore,\r\n} from '@react-easy-diagram/core';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport default () => (\r\n  <Diagram\r\n    initState={{\r\n      nodes: [\r\n        {\r\n          id: 'Node 1',\r\n          label: 'Node with drag disabled',\r\n          position: [450, 50],\r\n          ports: [{ id: 'port_top', type: 'top' }, { id: 'port_bottom', type: 'bottom' }],\r\n          isDragEnabled: false, // specifying this property in the element overrides diagram settings\r\n        },\r\n        {\r\n          id: 'Node 2',\r\n          label: 'Node with selection disabled',\r\n          position: [450, -100],\r\n          ports: [{ id: 'port', type: 'bottom' }],\r\n          isSelectionEnabled: false,\r\n        },\r\n        {\r\n          id: 'Node 3',\r\n          label: 'Node that use default diagram settings',\r\n          position: [450, 200],\r\n          ports: [{ id: 'port', type: 'top' }],\r\n        },\r\n        {\r\n          id: 'Node 4',\r\n          label: 'Node with disabled port',\r\n          position: [100, 200],\r\n          ports: [{ id: 'port', type: 'right', isConnectionEnabled: false }],\r\n        },\r\n        {\r\n          id: 'Node 5',\r\n          label: 'Node with drag enabled (overrides diagram settings)',\r\n          position: [100, 120],\r\n          isDragEnabled: true,\r\n        },\r\n        {\r\n          id: 'Configurator',\r\n          position: [100, -100],\r\n          componentType: 'config',\r\n          isSelectionEnabled: false,\r\n        },\r\n      ],\r\n      links: [\r\n        {\r\n          source: { nodeId: 'Node 1', portId: 'port_bottom' },\r\n          target: { nodeId: 'Node 3', portId: 'port' },\r\n        },\r\n        {\r\n          source: { nodeId: 'Node 1', portId: 'port_top' },\r\n          target: { nodeId: 'Node 2', portId: 'port' },\r\n          isSelectionEnabled: false,\r\n        },\r\n      ],\r\n    }}\r\n    settings={{\r\n      nodes: {\r\n        components: {\r\n          config: Configurator,\r\n        },\r\n      },\r\n    }}\r\n  />\r\n);\r\n\r\nconst Configurator = observer<INodeVisualComponentProps>(({ draggableRef }) => {\r\n  const { diagramSettings } = useRootStore();\r\n\r\n  return (\r\n    <div className='react_fast_diagram_Node_Default' ref={draggableRef}>\r\n      <div>\r\n        <b>Diagram user interaction configuration</b>\r\n      </div>\r\n      <div style={{ width: '100%', textAlign: 'left', marginTop: '10px' }}>\r\n        <UserInteractionCheckbox userInteractionPropertyName='diagramZoom' />\r\n        <UserInteractionCheckbox userInteractionPropertyName='diagramPan' />\r\n        <UserInteractionCheckbox userInteractionPropertyName='nodeDrag' />\r\n        <UserInteractionCheckbox userInteractionPropertyName='portConnection' />\r\n        <UserInteractionCheckbox userInteractionPropertyName='nodeSelection' />\r\n        <UserInteractionCheckbox userInteractionPropertyName='linkSelection' />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst UserInteractionCheckbox = observer<{\r\n  userInteractionPropertyName: keyof IUserInteraction;\r\n}>(({ userInteractionPropertyName }) => {\r\n  const { diagramSettings } = useRootStore();\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        name={userInteractionPropertyName}\r\n        type='checkbox'\r\n        checked={diagramSettings.userInteraction[userInteractionPropertyName]}\r\n        onChange={(event) =>\r\n          (diagramSettings.userInteraction[userInteractionPropertyName] = event.target.checked)\r\n        }\r\n      />\r\n      <label\r\n        htmlFor={userInteractionPropertyName}\r\n        style={{ paddingLeft: '10px' }}\r\n      >\r\n        {userInteractionPropertyName}\r\n      </label>\r\n    </div>\r\n  );\r\n});\r\n");
// EXTERNAL MODULE: ../lib_core/dist/index.esm.js + 1 modules
var index_esm = __webpack_require__(1943);
// EXTERNAL MODULE: ../node_modules/mobx-react-lite/es/index.js + 17 modules
var es = __webpack_require__(5479);
;// CONCATENATED MODULE: ./src/pages/examples/_configureUserInteractionDiagram.tsx
/* harmony default export */ var examples_configureUserInteractionDiagram = (function(){return/*#__PURE__*/react.createElement(index_esm.Diagram,{initState:{nodes:[{id:'Node 1',label:'Node with drag disabled',position:[450,50],ports:[{id:'port_top',type:'top'},{id:'port_bottom',type:'bottom'}],isDragEnabled:false// specifying this property in the element overrides diagram settings
},{id:'Node 2',label:'Node with selection disabled',position:[450,-100],ports:[{id:'port',type:'bottom'}],isSelectionEnabled:false},{id:'Node 3',label:'Node that use default diagram settings',position:[450,200],ports:[{id:'port',type:'top'}]},{id:'Node 4',label:'Node with disabled port',position:[100,200],ports:[{id:'port',type:'right',isConnectionEnabled:false}]},{id:'Node 5',label:'Node with drag enabled (overrides diagram settings)',position:[100,120],isDragEnabled:true},{id:'Configurator',position:[100,-100],componentType:'config',isSelectionEnabled:false}],links:[{source:{nodeId:'Node 1',portId:'port_bottom'},target:{nodeId:'Node 3',portId:'port'}},{source:{nodeId:'Node 1',portId:'port_top'},target:{nodeId:'Node 2',portId:'port'},isSelectionEnabled:false}]},settings:{nodes:{components:{config:Configurator}}}});});var Configurator=(0,es/* observer */.Pi)(function(_ref){var draggableRef=_ref.draggableRef;var _useRootStore=(0,index_esm.useRootStore)(),diagramSettings=_useRootStore.diagramSettings;return/*#__PURE__*/react.createElement("div",{className:"react_fast_diagram_Node_Default",ref:draggableRef},/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement("b",null,"Diagram user interaction configuration")),/*#__PURE__*/react.createElement("div",{style:{width:'100%',textAlign:'left',marginTop:'10px'}},/*#__PURE__*/react.createElement(UserInteractionCheckbox,{userInteractionPropertyName:"diagramZoom"}),/*#__PURE__*/react.createElement(UserInteractionCheckbox,{userInteractionPropertyName:"diagramPan"}),/*#__PURE__*/react.createElement(UserInteractionCheckbox,{userInteractionPropertyName:"nodeDrag"}),/*#__PURE__*/react.createElement(UserInteractionCheckbox,{userInteractionPropertyName:"portConnection"}),/*#__PURE__*/react.createElement(UserInteractionCheckbox,{userInteractionPropertyName:"nodeSelection"}),/*#__PURE__*/react.createElement(UserInteractionCheckbox,{userInteractionPropertyName:"linkSelection"})));});var UserInteractionCheckbox=(0,es/* observer */.Pi)(function(_ref2){var userInteractionPropertyName=_ref2.userInteractionPropertyName;var _useRootStore2=(0,index_esm.useRootStore)(),diagramSettings=_useRootStore2.diagramSettings;return/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement("input",{name:userInteractionPropertyName,type:"checkbox",checked:diagramSettings.userInteraction[userInteractionPropertyName],onChange:function onChange(event){return diagramSettings.userInteraction[userInteractionPropertyName]=event.target.checked;}}),/*#__PURE__*/react.createElement("label",{htmlFor:userInteractionPropertyName,style:{paddingLeft:'10px'}},userInteractionPropertyName));});
;// CONCATENATED MODULE: ./src/pages/examples/configureUserInteraction.jsx
function Example(){return/*#__PURE__*/react.createElement(_exampleWrapper/* ExampleWrapper */.U,{title:"Configure user interaction"},/*#__PURE__*/react.createElement(_diagramContainer/* DiagramContainer */.G,null,/*#__PURE__*/react.createElement(examples_configureUserInteractionDiagram,null)),/*#__PURE__*/react.createElement(CodeBlock/* default */.Z,{className:"language-jsx"},_configureUserInteractionDiagram));}

/***/ })

}]);