(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[10],{

/***/ 86:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ Example; });

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./src/pages/examples/_exampleWrapper.jsx
var _exampleWrapper = __webpack_require__(95);

// EXTERNAL MODULE: ../node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js + 9 modules
var CodeBlock = __webpack_require__(93);

// EXTERNAL MODULE: ./src/pages/examples/_diagramContainer.jsx
var _diagramContainer = __webpack_require__(96);

// CONCATENATED MODULE: ../node_modules/raw-loader/dist/cjs.js!./src/pages/examples/_portPositionDiagram.tsx
/* harmony default export */ var _portPositionDiagram = ("import React, { useState } from 'react';\r\nimport {\r\n  createNodeDefault,\r\n  createPortInnerDefault,\r\n  Diagram,\r\n  NodeState,\r\n  Point,\r\n  Port,\r\n} from '@react-easy-diagram/core';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst SomeNode = observer<{node: NodeState}>(() => {\r\n  const [\r\n    portOffsetFromNodeCenter,\r\n    setPortOffsetFromNodeCenter,\r\n  ] = useState<number>();\r\n\r\n  const [\r\n    yellowPortOffsetFromOrigin,\r\n    setYellowPortOffsetFromOrigin,\r\n  ] = useState<Point>([0, 0]);\r\n\r\n  return (\r\n    <>\r\n      <div>Offset from center of node:</div>\r\n      <span>\r\n        <input\r\n          type='number'\r\n          onChange={(event) =>\r\n            setPortOffsetFromNodeCenter(parseInt(event.target.value) ?? 0)\r\n          }\r\n          defaultValue={0} \r\n        />\r\n      </span>\r\n      <div>Yellow port's offset from origin position:</div>\r\n      <span>\r\n        X:{' '}\r\n        <input\r\n          type='number'\r\n          style={{ width: 50, marginRight: 10 }}\r\n          onChange={(event) => {\r\n            event.persist();\r\n            setYellowPortOffsetFromOrigin((current) => [\r\n              parseInt(event.target.value),\r\n              current[1],\r\n            ]);\r\n          }}\r\n          defaultValue={0}\r\n        />\r\n        Y:{' '}\r\n        <input\r\n          type='number'\r\n          style={{ width: 50 }}\r\n          onChange={(event) => {\r\n            event.persist();\r\n            setYellowPortOffsetFromOrigin((current) => [\r\n              current[0],\r\n              parseInt(event.target.value),\r\n            ]);\r\n          }}\r\n          defaultValue={0}\r\n        />\r\n      </span>\r\n      <Port\r\n        position='left-top'\r\n        offsetFromNodeCenter={portOffsetFromNodeCenter}\r\n      />\r\n      <Port\r\n        position='left-top'\r\n        offsetFromNodeCenter={portOffsetFromNodeCenter}\r\n        offsetFromOrigin={[0, 15]}\r\n      />\r\n      <Port\r\n        position='left-center'\r\n        offsetFromNodeCenter={portOffsetFromNodeCenter}\r\n      />\r\n      <Port\r\n        position='left-bottom'\r\n        offsetFromNodeCenter={portOffsetFromNodeCenter}\r\n      />\r\n      <Port\r\n        position='center-top'\r\n        offsetFromNodeCenter={portOffsetFromNodeCenter}\r\n        linkDirection='up'\r\n      />\r\n      <Port\r\n        position='center-bottom'\r\n        offsetFromNodeCenter={portOffsetFromNodeCenter}\r\n        linkDirection='down'\r\n      />\r\n      <Port\r\n        position='right-top'\r\n        offsetFromNodeCenter={portOffsetFromNodeCenter}\r\n      />\r\n      <Port\r\n        position='right-center'\r\n        offsetFromNodeCenter={portOffsetFromNodeCenter}\r\n        offsetFromOrigin={yellowPortOffsetFromOrigin}\r\n        type='custom_port'\r\n      />\r\n      <Port\r\n        position='right-bottom'\r\n        offsetFromNodeCenter={portOffsetFromNodeCenter}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default () => (\r\n  <Diagram\r\n    initState={{\r\n      nodes: [\r\n        {\r\n          id: 'node_1',\r\n          position: [100, 100],\r\n        },\r\n      ],\r\n      links: [],\r\n    }}\r\n    settings={{\r\n      nodes: {\r\n        components: {\r\n          default: createNodeDefault({innerNode: SomeNode}),\r\n        },\r\n      },\r\n      ports: {\r\n        portComponents: {\r\n          custom_port: createPortInnerDefault({\r\n            color: 'yellow',\r\n          }),\r\n        },\r\n      },\r\n    }}\r\n  />\r\n);");
// EXTERNAL MODULE: ../lib_core/dist/index.esm.js + 1 modules
var index_esm = __webpack_require__(94);

// EXTERNAL MODULE: ../node_modules/mobx-react-lite/es/observer.js + 9 modules
var observer = __webpack_require__(194);

// CONCATENATED MODULE: ./src/pages/examples/_portPositionDiagram.tsx
const SomeNode=Object(observer["a" /* observer */])(()=>{const[portOffsetFromNodeCenter,setPortOffsetFromNodeCenter]=Object(react["useState"])();const[yellowPortOffsetFromOrigin,setYellowPortOffsetFromOrigin]=Object(react["useState"])([0,0]);return/*#__PURE__*/react_default.a.createElement(react_default.a.Fragment,null,/*#__PURE__*/react_default.a.createElement("div",null,"Offset from center of node:"),/*#__PURE__*/react_default.a.createElement("span",null,/*#__PURE__*/react_default.a.createElement("input",{type:"number",onChange:event=>{var _parseInt;return setPortOffsetFromNodeCenter((_parseInt=parseInt(event.target.value))!==null&&_parseInt!==void 0?_parseInt:0);},defaultValue:0})),/*#__PURE__*/react_default.a.createElement("div",null,"Yellow port's offset from origin position:"),/*#__PURE__*/react_default.a.createElement("span",null,"X:",' ',/*#__PURE__*/react_default.a.createElement("input",{type:"number",style:{width:50,marginRight:10},onChange:event=>{event.persist();setYellowPortOffsetFromOrigin(current=>[parseInt(event.target.value),current[1]]);},defaultValue:0}),"Y:",' ',/*#__PURE__*/react_default.a.createElement("input",{type:"number",style:{width:50},onChange:event=>{event.persist();setYellowPortOffsetFromOrigin(current=>[current[0],parseInt(event.target.value)]);},defaultValue:0})),/*#__PURE__*/react_default.a.createElement(index_esm["Port"],{position:"left-top",offsetFromNodeCenter:portOffsetFromNodeCenter}),/*#__PURE__*/react_default.a.createElement(index_esm["Port"],{position:"left-top",offsetFromNodeCenter:portOffsetFromNodeCenter,offsetFromOrigin:[0,15]}),/*#__PURE__*/react_default.a.createElement(index_esm["Port"],{position:"left-center",offsetFromNodeCenter:portOffsetFromNodeCenter}),/*#__PURE__*/react_default.a.createElement(index_esm["Port"],{position:"left-bottom",offsetFromNodeCenter:portOffsetFromNodeCenter}),/*#__PURE__*/react_default.a.createElement(index_esm["Port"],{position:"center-top",offsetFromNodeCenter:portOffsetFromNodeCenter,linkDirection:"up"}),/*#__PURE__*/react_default.a.createElement(index_esm["Port"],{position:"center-bottom",offsetFromNodeCenter:portOffsetFromNodeCenter,linkDirection:"down"}),/*#__PURE__*/react_default.a.createElement(index_esm["Port"],{position:"right-top",offsetFromNodeCenter:portOffsetFromNodeCenter}),/*#__PURE__*/react_default.a.createElement(index_esm["Port"],{position:"right-center",offsetFromNodeCenter:portOffsetFromNodeCenter,offsetFromOrigin:yellowPortOffsetFromOrigin,type:"custom_port"}),/*#__PURE__*/react_default.a.createElement(index_esm["Port"],{position:"right-bottom",offsetFromNodeCenter:portOffsetFromNodeCenter}));});/* harmony default export */ var examples_portPositionDiagram = (()=>/*#__PURE__*/react_default.a.createElement(index_esm["Diagram"],{initState:{nodes:[{id:'node_1',position:[100,100]}],links:[]},settings:{nodes:{components:{default:Object(index_esm["createNodeDefault"])({innerNode:SomeNode})}},ports:{portComponents:{custom_port:Object(index_esm["createPortInnerDefault"])({color:'yellow'})}}}}));
// CONCATENATED MODULE: ./src/pages/examples/portPosition.jsx
function Example(){return/*#__PURE__*/react_default.a.createElement(_exampleWrapper["a" /* ExampleWrapper */],{title:"Port Position Example"},/*#__PURE__*/react_default.a.createElement(_diagramContainer["a" /* DiagramContainer */],null,/*#__PURE__*/react_default.a.createElement(examples_portPositionDiagram,null)),/*#__PURE__*/react_default.a.createElement(CodeBlock["a" /* default */],{className:"language-jsx"},_portPositionDiagram));}

/***/ })

}]);