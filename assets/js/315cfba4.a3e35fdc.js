(self["webpackChunkwebsite"] = self["webpackChunkwebsite"] || []).push([[915],{

/***/ 3841:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ Example; }
});

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__(7378);
// EXTERNAL MODULE: ./src/pages/examples/_exampleWrapper.jsx
var _exampleWrapper = __webpack_require__(1713);
// EXTERNAL MODULE: ../node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js + 11 modules
var CodeBlock = __webpack_require__(842);
// EXTERNAL MODULE: ./src/pages/examples/_diagramContainer.jsx + 1 modules
var _diagramContainer = __webpack_require__(9339);
;// CONCATENATED MODULE: ../node_modules/raw-loader/dist/cjs.js!./src/pages/examples/_calculatorDiagram.tsx
/* harmony default export */ var _calculatorDiagram = ("import React, { useEffect } from 'react';\r\nimport {\r\n  createNode,\r\n  createOutputHorizontalNode,\r\n  Diagram,\r\n  disableNodeUserInteractionClassName,\r\n  INodeVisualComponentProps,\r\n  NodeState,\r\n  Port,\r\n} from '@react-easy-diagram/core';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst NumberProvider = observer<{ node: NodeState }>(({ node }) => {\r\n  const port = node.ports['output'];\r\n  return (\r\n    <>\r\n      <div>Number input</div>\r\n      <span>\r\n        <input\r\n          type='number'\r\n          onChange={(event) =>\r\n            port?.setExtra(parseInt(event.target.value) || 0)\r\n          }\r\n          defaultValue={port && port.extra}\r\n          className={disableNodeUserInteractionClassName}\r\n        />\r\n      </span>\r\n    </>\r\n  );\r\n});\r\n\r\nconst AddNumbers = observer<{ node: NodeState }>(({ node }) => {\r\n  const outputPort = node.ports['output'];\r\n\r\n  const getInputNumber = (portName: string): number => {\r\n    const port = node.ports[portName];\r\n    if (port && port.connectedPorts.length > 0) {\r\n      return port.connectedPorts[0].extra;\r\n    } else return 0;\r\n  };\r\n  const num1 = getInputNumber('number_1');\r\n  const num2 = getInputNumber('number_2');\r\n  const sum = num1 + num2;\r\n\r\n  useEffect(() => outputPort?.setExtra(sum), [outputPort, sum]);\r\n\r\n  return (\r\n    <>\r\n      <div>Add numbers</div>\r\n      <span>Result: {outputPort ? outputPort.extra : ''}</span>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default () => (\r\n  <Diagram\r\n    initState={{\r\n      nodes: [\r\n        {\r\n          id: 'num1',\r\n          position: [100, 100],\r\n          componentType: 'number',\r\n        },\r\n        {\r\n          id: 'num2',\r\n          position: [100, 300],\r\n          componentType: 'number',\r\n        },\r\n        {\r\n          id: 'num3',\r\n          position: [420, 250],\r\n          componentType: 'number',\r\n        },\r\n        {\r\n          id: 'add1',\r\n          position: [420, 150],\r\n          componentType: 'addnumbers',\r\n        },\r\n        {\r\n          id: 'add2',\r\n          position: [700, 200],\r\n          componentType: 'addnumbers',\r\n        },\r\n      ],\r\n      links: [\r\n        {\r\n          source: {\r\n            nodeId: 'num1',\r\n            portId: 'output',\r\n          },\r\n          target: {\r\n            nodeId: 'add1',\r\n            portId: 'number_1',\r\n          },\r\n        },\r\n        {\r\n          source: {\r\n            nodeId: 'num2',\r\n            portId: 'output',\r\n          },\r\n          target: {\r\n            nodeId: 'add1',\r\n            portId: 'number_2',\r\n          },\r\n        },\r\n        {\r\n          source: {\r\n            nodeId: 'num3',\r\n            portId: 'output',\r\n          },\r\n          target: {\r\n            nodeId: 'add2',\r\n            portId: 'number_2',\r\n          },\r\n        },\r\n        {\r\n          source: {\r\n            nodeId: 'add1',\r\n            portId: 'output',\r\n          },\r\n          target: {\r\n            nodeId: 'add2',\r\n            portId: 'number_1',\r\n          },\r\n        },\r\n      ],\r\n    }}\r\n    settings={{\r\n      nodes: {\r\n        components: {\r\n          number: createOutputHorizontalNode({\r\n            innerNode: NumberProvider,\r\n          }),\r\n          addnumbers: createNode({\r\n            ports: [\r\n              {\r\n                id: 'number_1',\r\n                type: 'single_connection',\r\n                position: 'left-center',\r\n                offsetFromOrigin: [0, -15],\r\n              },\r\n              {\r\n                id: 'number_2',\r\n                type: 'single_connection',\r\n                position: 'left-center',\r\n                offsetFromOrigin: [0, 15],\r\n              },\r\n              {\r\n                id: 'output',\r\n                position: 'right-center',\r\n              },\r\n            ],\r\n            innerNode: AddNumbers,\r\n          }),\r\n        },\r\n      },\r\n      callbacks: {\r\n        validateLinkEndpoints: (source, target, rootStore) => {\r\n          if (target.type === 'single_connection') {\r\n            // allow connection only if target port is still unconnected\r\n            return target.connectedLinks.length === 0;\r\n          }\r\n          return true;\r\n        },\r\n      },\r\n    }}\r\n  />\r\n);\r\n");
// EXTERNAL MODULE: ../lib_core/dist/index.esm.js + 1 modules
var index_esm = __webpack_require__(1943);
// EXTERNAL MODULE: ../node_modules/mobx-react-lite/es/index.js + 17 modules
var es = __webpack_require__(5479);
;// CONCATENATED MODULE: ./src/pages/examples/_calculatorDiagram.tsx
var NumberProvider=(0,es/* observer */.Pi)(function(_ref){var node=_ref.node;var port=node.ports['output'];return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement("div",null,"Number input"),/*#__PURE__*/react.createElement("span",null,/*#__PURE__*/react.createElement("input",{type:"number",onChange:function onChange(event){return port==null?void 0:port.setExtra(parseInt(event.target.value)||0);},defaultValue:port&&port.extra,className:index_esm.disableNodeUserInteractionClassName})));});var AddNumbers=(0,es/* observer */.Pi)(function(_ref2){var node=_ref2.node;var outputPort=node.ports['output'];var getInputNumber=function getInputNumber(portName){var port=node.ports[portName];if(port&&port.connectedPorts.length>0){return port.connectedPorts[0].extra;}else return 0;};var num1=getInputNumber('number_1');var num2=getInputNumber('number_2');var sum=num1+num2;(0,react.useEffect)(function(){return outputPort==null?void 0:outputPort.setExtra(sum);},[outputPort,sum]);return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement("div",null,"Add numbers"),/*#__PURE__*/react.createElement("span",null,"Result: ",outputPort?outputPort.extra:''));});/* harmony default export */ var examples_calculatorDiagram = (function(){return/*#__PURE__*/react.createElement(index_esm.Diagram,{initState:{nodes:[{id:'num1',position:[100,100],componentType:'number'},{id:'num2',position:[100,300],componentType:'number'},{id:'num3',position:[420,250],componentType:'number'},{id:'add1',position:[420,150],componentType:'addnumbers'},{id:'add2',position:[700,200],componentType:'addnumbers'}],links:[{source:{nodeId:'num1',portId:'output'},target:{nodeId:'add1',portId:'number_1'}},{source:{nodeId:'num2',portId:'output'},target:{nodeId:'add1',portId:'number_2'}},{source:{nodeId:'num3',portId:'output'},target:{nodeId:'add2',portId:'number_2'}},{source:{nodeId:'add1',portId:'output'},target:{nodeId:'add2',portId:'number_1'}}]},settings:{nodes:{components:{number:(0,index_esm.createOutputHorizontalNode)({innerNode:NumberProvider}),addnumbers:(0,index_esm.createNode)({ports:[{id:'number_1',type:'single_connection',position:'left-center',offsetFromOrigin:[0,-15]},{id:'number_2',type:'single_connection',position:'left-center',offsetFromOrigin:[0,15]},{id:'output',position:'right-center'}],innerNode:AddNumbers})}},callbacks:{validateLinkEndpoints:function validateLinkEndpoints(source,target,rootStore){if(target.type==='single_connection'){// allow connection only if target port is still unconnected
return target.connectedLinks.length===0;}return true;}}}});});
;// CONCATENATED MODULE: ./src/pages/examples/calculator.jsx
function Example(){return/*#__PURE__*/react.createElement(_exampleWrapper/* ExampleWrapper */.U,{title:"Calculator Example"},/*#__PURE__*/react.createElement(_diagramContainer/* DiagramContainer */.G,null,/*#__PURE__*/react.createElement(examples_calculatorDiagram,null)),/*#__PURE__*/react.createElement(CodeBlock/* default */.Z,{className:"language-jsx"},_calculatorDiagram));}

/***/ })

}]);