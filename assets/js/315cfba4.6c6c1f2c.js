(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{81:function(n,e,r){"use strict";r.r(e),r.d(e,"default",(function(){return c}));var t=r(0),o=r.n(t),a=r(96),i=r(93),u=r(97),s=r(94),m=r(191),d=Object(m.a)((function(n){var e=n.entity,r=n.draggableRef,t=e.ports.number;return o.a.createElement("div",{className:"react_fast_diagram_Node_Default",ref:r},o.a.createElement("div",null,"Number input"),o.a.createElement("span",null,o.a.createElement("input",{type:"number",onChange:function(n){return null==t?void 0:t.setExtra(parseInt(n.target.value))},defaultValue:t&&t.extra})),o.a.createElement(s.Port,{id:"number",position:s.RelativePosition.right}))})),p=Object(m.a)((function(n){var e=n.entity,r=n.draggableRef,a=e.ports.number_1,i=e.ports.number_2,u=e.ports.output,m=0,d=0;return a&&a.connectedPorts.length>0&&i&&i.connectedPorts.length>0&&(m=a.connectedPorts[0].extra,d=i.connectedPorts[0].extra),Object(t.useEffect)((function(){u&&u.setExtra(m+d)}),[m,d,u]),o.a.createElement("div",{className:"react_fast_diagram_Node_Default",ref:r},o.a.createElement("div",null,"Add numbers"),o.a.createElement("span",null,"Result: ",u?u.extra:""),o.a.createElement(s.Port,{id:"number_1",position:s.RelativePosition.left,offsetFromOrigin:10}),o.a.createElement(s.Port,{id:"number_2",position:s.RelativePosition.left}),o.a.createElement(s.Port,{id:"output",position:s.RelativePosition.right}))})),l=function(){return o.a.createElement(s.Diagram,{initState:{nodes:[{id:"Num1",position:[100,100],componentType:"number"},{id:"Num2",position:[100,300],componentType:"number"},{id:"Num3",position:[420,250],componentType:"number"},{id:"add1",position:[420,150],componentType:"addnumbers"},{id:"add2",position:[700,200],componentType:"addnumbers"}],links:[]},settings:{nodes:{components:{number:d,addnumbers:p}}}})};function c(){return o.a.createElement(a.a,{title:"Calculator Example"},o.a.createElement(u.a,null,o.a.createElement(l,null)),o.a.createElement(i.a,{className:"language-jsx"},"import React, { useEffect } from 'react';\r\nimport {\r\n  Diagram,\r\n  INodeVisualComponentProps,\r\n  Port,\r\n  RelativePosition,\r\n} from '@react-easy-diagram/core';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst NumberProvider = observer<INodeVisualComponentProps>(({ entity, draggableRef }) => {\r\n  const port = entity.ports['number'];\r\n  return (\r\n    <div className=\"react_fast_diagram_Node_Default\" ref={draggableRef}>\r\n      <div>Number input</div>\r\n      <span>\r\n        <input\r\n          type='number'\r\n          onChange={(event) =>\r\n            port?.setExtra(parseInt(event.target.value))\r\n          }\r\n          defaultValue={port && port.extra}\r\n        />\r\n      </span>\r\n      <Port id='number' position={RelativePosition.right} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddNumbers = observer<INodeVisualComponentProps>(({ entity, draggableRef }) => {\r\n  const numPort1 = entity.ports['number_1'];\r\n  const numPort2 = entity.ports['number_2'];\r\n  const outputPort = entity.ports['output'];\r\n\r\n  let num1 = 0;\r\n  let num2 = 0;\r\n  if (\r\n    numPort1 &&\r\n    numPort1.connectedPorts.length > 0 &&\r\n    numPort2 &&\r\n    numPort2.connectedPorts.length > 0\r\n  ) {\r\n    num1 = numPort1.connectedPorts[0].extra;\r\n    num2 = numPort2.connectedPorts[0].extra;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (outputPort) {\r\n      outputPort.setExtra(num1 + num2);\r\n    }\r\n  }, [num1, num2, outputPort]);\r\n\r\n  return (\r\n    <div className=\"react_fast_diagram_Node_Default\" ref={draggableRef}>\r\n      <div>Add numbers</div>\r\n      <span>Result: {outputPort ? outputPort.extra : ''}</span>\r\n      <Port id='number_1' position={RelativePosition.left} offsetFromOrigin={10}/>\r\n      <Port id='number_2' position={RelativePosition.left} />\r\n      <Port id='output' position={RelativePosition.right} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default () => (\r\n  <Diagram\r\n    initState={{\r\n      nodes: [\r\n        {\r\n          id: 'Num1',\r\n          position: [100, 100],\r\n          componentType: 'number',\r\n        },\r\n        {\r\n          id: 'Num2',\r\n          position: [100, 300],\r\n          componentType: 'number',\r\n        },\r\n        {\r\n          id: 'Num3',\r\n          position: [420, 250],\r\n          componentType: 'number',\r\n        },\r\n        {\r\n          id: 'add1',\r\n          position: [420, 150],\r\n          componentType: 'addnumbers',\r\n        },\r\n        {\r\n          id: 'add2',\r\n          position: [700, 200],\r\n          componentType: 'addnumbers',\r\n        },\r\n      ],\r\n      links: [],\r\n    }}\r\n    settings={{\r\n      nodes: {\r\n        components: {\r\n          number: NumberProvider,\r\n          addnumbers: AddNumbers,\r\n        },\r\n      },\r\n    }}\r\n  />\r\n);\r\n"))}}}]);